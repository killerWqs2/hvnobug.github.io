<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>死磕Jdk源码之StringBuilder</title>
      <link href="/post/jdk-source-stringbuilder.html"/>
      <url>/post/jdk-source-stringbuilder.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>死磕Jdk源码之<code>StringBuilder</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/StringBuilder.png" alt></p><ul><li><code>StringBuilder</code>继承自<code>AbstractStringBuilder</code></li><li><code>StringBuilder</code>实现了<code>CharSequence</code>接口,表示为一个字符序列</li><li><code>StringBuilder</code>实现了<code>Appendable</code>接口,表示为可追加的字符序列,可以理解为可变的字符串</li></ul><blockquote><p>事实上<code>String</code>、<code>StringBuilder</code>以及<code>StringBuffer</code>都是字符序列，都实现了<code>CharSequence</code>接口，都是在内部维护一个<code>char</code>类型的数组。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/StringBuffer.png" alt></p><blockquote><p>从<code>StringBuffer</code>与<code>StringBuilder</code>的类结构完全相同,唯一的区别就是<code>StringBuffer</code>的方法使用了<code>synchronized</code>关键字,是线程安全的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/String.png" alt></p><blockquote><p><code>String</code>类同样实现了<code>CharSequence</code>接口,同时<code>String</code>、<code>StringBuffer</code>以及<code>StringBuilder</code>都是<code>final</code>类型,不允许被继承。<code>String</code>内部维护的字符数组是不可变的。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><blockquote><p><code>StringBuilder</code>内部维护一个字符数组,默认大小为<strong>16</strong>,通过<code>append</code>方法追加字符时,会调用<code>AbstractStringBuilder</code>的<code>ensureCapacityInternal</code>方法检查数组是否需要扩容。从而实现可变的字符串。</p></blockquote><h3 id="成员变量-常量"><a href="#成员变量-常量" class="headerlink" title="成员变量/常量"></a>成员变量/常量</h3><blockquote><p><code>StringBuilder</code>以及<code>StringBuffer</code>都继承自<code>AbstractStringBuilder</code>,它们的核心功能也都来自<code>AbstractStringBuilder</code>。</p></blockquote><p><strong>继承自</strong><code>AbstractStringBuilder</code>的成员变量</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/abstractstringbuilder-member-variables.jpg" alt></p><ul><li><p><strong>value</strong> 用于存储字符的<code>char</code>数组</p></li><li><p><strong>count</strong> 当前的字符数量,因为字符数组中可能留有缓冲,所以字符大小可能小于数组大小</p></li></ul><h2 id="死磕源码"><a href="#死磕源码" class="headerlink" title="死磕源码"></a>死磕源码</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><blockquote><p>默认无参构造函数,直接调用父类构造器,创建一个长度为 16 的字符数组。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>父类<code>AbstractStringBuilder</code>构造器</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AbstractStringBuilder(<span class="keyword">int</span> capacity) &#123;</span><br><span class="line">    value = <span class="keyword">new</span> <span class="keyword">char</span>[capacity];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>通过给定的容量大小构建<code>StringBuilder</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(capacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>通过字符串构建<code>StringBuilder</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 预留 16 位的缓冲区</span></span><br><span class="line">    <span class="keyword">super</span>(str.length() + <span class="number">16</span>);</span><br><span class="line">    append(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>通过字符序列构建<code>StringBuilder</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBuilder</span><span class="params">(CharSequence seq)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 预留 16 位的缓冲区</span></span><br><span class="line">    <span class="keyword">this</span>(seq.length() + <span class="number">16</span>);</span><br><span class="line">    append(seq);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>使用不可变的字符串可以使用<code>String</code>,使用可变类型字符串可以使用<code>StringBuffer</code>和<code>StringBuilder</code>,如果需要考虑线程安全,可以使用<code>StringBuffer</code>。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之HashSet</title>
      <link href="/post/jdk-source-hashset.html"/>
      <url>/post/jdk-source-hashset.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>死磕Jdk源码之<code>HashSet</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/HashSet.png" alt></p><blockquote><p><code>HashSet</code>是<strong>Java Collections API</strong>中的基本数据结构之一。<br>实现了<code>Collection</code>和<code>Set</code>接口</p></blockquote><ul><li>存储唯一元素并允许空值</li><li>由<code>HashMap</code>支持</li><li>不保持插入顺序</li><li>不是线程安全的</li></ul><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><blockquote><p><code>HashSet</code>内部维护着一个<code>HashMap</code>，所有数据都是放在<code>HashMap</code>中，插入的数据为<code>HashMap</code>的<code>key</code>，这也就是为什么<code>HashSet</code>中的不能重复。</p></blockquote><p>关于<code>HashMap</code>数据机构的，请移步<a href="jdk-source-hashmap.html#数据结构">死磕Jdk源码之HashMap</a></p><h3 id="成员变量-常量"><a href="#成员变量-常量" class="headerlink" title="成员变量/常量"></a>成员变量/常量</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashset-member-variables.jpg" alt></p><ul><li><strong>map</strong> <code>HashMap</code>实例，<code>key</code>为要插入的值，<code>value</code>为<code>PRESENT</code>常量，为<code>Object</code>实例</li></ul><h2 id="死磕源码"><a href="#死磕源码" class="headerlink" title="死磕源码"></a>死磕源码</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><blockquote><p>默认构造函数，会初始化<code>HashMap</code>，也是使用默认构造器</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据传入的<code>Collection</code>实例创建一个新的<code>HashSet</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(Math.max((<span class="keyword">int</span>) (c.size()/.<span class="number">75f</span>) + <span class="number">1</span>, <span class="number">16</span>));</span><br><span class="line">    addAll(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据初始化容量和负载因子创建<code>HashSet</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(initialCapacity, loadFactor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据初始化容量创建<code>HashSet</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashSet</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    map = <span class="keyword">new</span> HashMap&lt;&gt;(initialCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据初始化容量，负载因子构建<code>HashSet</code>，这里的初始化的<code>Map</code>是<code>LinkedHashMap</code>类型</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HashSet(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor, <span class="keyword">boolean</span> dummy) &#123;</span><br><span class="line">    map = <span class="keyword">new</span> LinkedHashMap&lt;&gt;(initialCapacity, loadFactor);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><blockquote><p>直接调用<code>map</code>的<code>put</code>方法，<code>map</code>的<code>key</code>就是我们要插入的元素</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> map.put(e, PRESENT)==<span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><blockquote><p>同样是直接移除<code>map</code>对应的<code>key</code></p></blockquote><pre><code class="java"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>{    <span class="keyword">return</span> map.remove(o)==PRESENT;}</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>既然<code>HashSet</code>就是在维护一个<code>HashMap</code>对象，<code>HashSet</code>的性能也就取决于<code>HashMap</code>。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之HashMap</title>
      <link href="/post/jdk-source-hashmap.html"/>
      <url>/post/jdk-source-hashmap.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>死磕Jdk源码之<code>HashMap</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/HashMap.png" alt></p><blockquote><p><code>HashMap</code>在<code>JDK1.8</code>之前的实现方式 <strong>数组</strong>+<strong>链表</strong>,但是在<code>JDK1.8</code>后对<code>HashMap</code>进行了底层优化,改为了由 <strong>数组</strong>+<strong>链表</strong>+<strong>红黑树</strong>实现,主要的目的是提高查找效率。</p></blockquote><table><thead><tr><th align="center">JDK版本</th><th align="center">实现方式</th><th align="center">节点数&gt;=8</th><th align="center">节点数&lt;=6</th></tr></thead><tbody><tr><td align="center">1.8以前</td><td align="center">数组+单向链表</td><td align="center">数组+单向链表</td><td align="center">数组+单向链表</td></tr><tr><td align="center">1.8以后</td><td align="center">数组+单向链表+红黑树</td><td align="center">数组+红黑树</td><td align="center">数组+单向链表</td></tr></tbody></table><ul><li><code>HashMap</code>基于哈希表的Map接口实现，是以<code>key-value</code>存储形式存在。（除了不同步和允许使用 <code>null</code> 之外，<code>HashMap</code> 类与 <code>Hashtable</code> 大致相同。)</li><li><code>HashMap</code> 的实现不是同步的，这意味着它不是线程安全的。它的<code>key</code>、<code>value</code>都可以为<code>null</code>。此外，<code>HashMap</code>中的映射不是有序的。在 <code>JDK1.8</code> 中，<code>HashMap</code> 是由 <strong>数组</strong>+<strong>链表</strong>+<strong>红黑树</strong>构成，新增了<strong>红黑树</strong>作为底层数据结构，结构变得复杂了，但是效率也变的更高效。</li></ul><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><ol><li><strong>数组</strong> <code>HashMap</code>内部维护一个<code>Node</code>数组</li><li><strong>链表</strong> 当<code>HashMap</code>中<code>Node</code>节点数小于等于 6 时,<code>Node</code>是单向链表结构</li><li><strong>红黑树</strong> 当<code>HashMap</code>中<code>Node</code>节点数大于等于 8 时,<code>Node</code>是红黑树结构</li></ol><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashmap-member-variables.jpg" alt></p><blockquote><p>继承自 <code>AbstractMap</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/abstracthashmap-member-variables.jpg" alt></p><ul><li><strong>keySet</strong> 保存着<code>Map</code>的<code>key</code>的<code>Set</code>集合</li><li><strong>values</strong> 保存着<code>Map</code>的<code>value</code>的<code>Collection</code>集合</li><li><strong>table</strong> <code>Node</code>是<code>Map.Entry</code>接口的实现类，在此存储数据的<code>Node</code>数组容量是2次幂，每一个<code>Node</code>本质都是一个单向链表</li><li><strong>size</strong> <code>HashMap</code>大小,它代表<code>HashMap</code>保存的键值对的多少</li><li><strong>modCount</strong> <code>HashMap</code>被改变的次数</li><li><strong>threshold</strong> 下一次<code>HashMap</code>扩容的大小</li><li><strong>loadFactor</strong> <code>HashMap</code>的负载因子。</li></ul><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hashmap-constant.jpg" alt></p><ul><li><strong>TREEIFY_THRESHOLD</strong> 这两个是限定值 当节点数大于8时会转为<strong>红黑树</strong>存储</li><li><strong>UNTREEIFY_THRESHOLD</strong> 当节点数小于6时会转为<strong>单向链表</strong>存储</li><li><strong>MIN_TREEIFY_CAPACITY</strong> <strong>红黑树</strong>最小长度为 64</li><li><strong>DEFAULT_INITIAL_CAPACITY</strong> <code>HashMap</code>容量初始大小</li><li><strong>MAXIMUM_CAPACITY</strong> <code>HashMap</code>容量极限</li><li><strong>DEFAULT_LOAD_FACTOR</strong> 负载因子默认大小</li></ul><h2 id="死磕源码"><a href="#死磕源码" class="headerlink" title="死磕源码"></a>死磕源码</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><blockquote><p>默认无参构造函数，使用默认的负载因子 0.75f ，由于 <code>loadFactor</code>是<code>final</code>类型，一经设定无法修改。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// all other fields defaulted</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>指定初始容量构造 <code>HashMap</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>指定初始化容量和负载因子构造 <code>HashMap</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 指定的容量大小不可以小于 0,否则将抛出 IllegalArgumentException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal initial capacity: "</span> + initialCapacity);</span><br><span class="line">    <span class="comment">// 判定指定的容量大小是否大于HashMap的容量极限    </span></span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</span><br><span class="line">        initialCapacity = MAXIMUM_CAPACITY;</span><br><span class="line">    <span class="comment">// 指定的负载因子不可以小于 0 或为 Null，若判定成立则抛出 IllegalArgumentException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal load factor: "</span> + loadFactor);</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = loadFactor;</span><br><span class="line">    <span class="comment">// 设置 HashMap 阈值，当 HashMap 中存储数据的数量达到 threshold 时，就需要将 HashMap 的容量加倍。</span></span><br><span class="line">    <span class="keyword">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>从一个<code>Map</code>中构建<code>HashMap</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传入一个Map集合,将Map集合中元素Map.Entry全部添加进HashMap实例中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(Map&lt;? extends K, ? extends V&gt; m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class="line">    <span class="comment">// 此构造方法主要实现了 Map.putAll()</span></span><br><span class="line">    putMapEntries(m, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="Node单向链表的实现"><a href="#Node单向链表的实现" class="headerlink" title="Node单向链表的实现"></a><code>Node</code>单向链表的实现</h3><blockquote><p>单向链表的实现还是比较简单的</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// 节点的哈希值</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">    <span class="comment">// 节点的 key</span></span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    <span class="comment">// 节点的 value</span></span><br><span class="line">    V value;</span><br><span class="line">    <span class="comment">// 后继节点</span></span><br><span class="line">    Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hash = hash;</span><br><span class="line">        <span class="keyword">this</span>.key = key;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> K <span class="title">getKey</span><span class="params">()</span>        </span>&#123; <span class="keyword">return</span> key; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">getValue</span><span class="params">()</span>      </span>&#123; <span class="keyword">return</span> value; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> key + <span class="string">"="</span> + value; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算哈希值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hashCode(key) ^ Objects.hashCode(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置新值，返回旧值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">setValue</span><span class="params">(V newValue)</span> </span>&#123;</span><br><span class="line">        V oldValue = value;</span><br><span class="line">        value = newValue;</span><br><span class="line">        <span class="keyword">return</span> oldValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// equals 属性对比</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">this</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Map.Entry) &#123;</span><br><span class="line">            Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o;</span><br><span class="line">            <span class="keyword">if</span> (Objects.equals(key, e.getKey()) &amp;&amp;</span><br><span class="line">                Objects.equals(value, e.getValue()))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="TreeNode红黑树实现"><a href="#TreeNode红黑树实现" class="headerlink" title="TreeNode红黑树实现"></a><code>TreeNode</code>红黑树实现</h3><blockquote><p>红黑树的实现还是比较复杂的，这里就不列出所有源码，不了解红黑树的朋友，可以移步<a href="https://blog.csdn.net/Sun_TTTT/article/details/65445754" target="_blank" rel="noopener">最容易懂得红黑树</a></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">// 红黑树的根节点</span></span><br><span class="line">    TreeNode&lt;K,V&gt; parent;  <span class="comment">// red-black tree links</span></span><br><span class="line">    <span class="comment">// 左树</span></span><br><span class="line">    TreeNode&lt;K,V&gt; left;</span><br><span class="line">    <span class="comment">// 右树</span></span><br><span class="line">    TreeNode&lt;K,V&gt; right;</span><br><span class="line">    <span class="comment">// 上一个节点</span></span><br><span class="line">    TreeNode&lt;K,V&gt; prev;    <span class="comment">// needed to unlink next upon deletion</span></span><br><span class="line">    <span class="comment">// 是否为红色节点</span></span><br><span class="line">    <span class="keyword">boolean</span> red;</span><br><span class="line">    TreeNode(<span class="keyword">int</span> hash, K key, V val, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">        <span class="keyword">super</span>(hash, key, val, next);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Returns root of tree containing this node.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 根节点的实现</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> TreeNode&lt;K,V&gt; <span class="title">root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (TreeNode&lt;K,V&gt; r = <span class="keyword">this</span>, p;;) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((p = r.parent) == <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">return</span> r;</span><br><span class="line">            r = p;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="哈希值的计算实现"><a href="#哈希值的计算实现" class="headerlink" title="哈希值的计算实现"></a>哈希值的计算实现</h3><blockquote><p>主要是将传入的参数<code>key</code>本身的<code>hashCode</code>与h无符号右移 16 位进行二进制异或运算得出一个新的<code>hash</code>值</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="put插入新的键值对"><a href="#put插入新的键值对" class="headerlink" title="put插入新的键值对"></a><code>put</code>插入新的键值对</h3><blockquote><p><code>put</code>方法调用<code>putVal</code>实现插入操作</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现了 Map.put 及相关方法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> hash key 的哈希值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key key</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value 插入的 value</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> onlyIfAbsent 如果 true，就不需要更改现有值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> evict 如果为 false，则该表处于创建模式。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 前一个值，如果没有则为空</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent, <span class="keyword">boolean</span> evict)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, i;</span><br><span class="line">    <span class="comment">// 判断表是否为 null 或 空，如果是就对表通过 resize 获取新表</span></span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)</span><br><span class="line">        n = (tab = resize()).length;</span><br><span class="line">    <span class="comment">// 判断数组对应索引位置为 null 就创建新的节点插入该位置    </span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)</span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 说明可能出现相同 key ，也有可能出现哈希碰撞</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;K,V&gt; e; K k;</span><br><span class="line">        <span class="comment">// 判断 hash 和 key 是否匹配，如果匹配就是覆盖了。覆盖原有的 key 的值</span></span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            e = p;</span><br><span class="line">        <span class="comment">// 是否为红黑树结构    </span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value);</span><br><span class="line">        <span class="comment">// 是否为单链表结构    </span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;</span><br><span class="line">                <span class="comment">// next 节点为 null，直接创建新节点插入到当前节点的后继节点中</span></span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);</span><br><span class="line">                    <span class="comment">// 是否需要转单链表为红黑树结构</span></span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st</span></span><br><span class="line">                        treeifyBin(tab, hash);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 判断 hash 和 key 是否匹配，如果是就跳出循环，因为找到了啊</span></span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                p = e; <span class="comment">// p 记录下一个节点</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//  e 不为 null ，就是存在对于 key 映射</span></span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// existing mapping for key</span></span><br><span class="line">            <span class="comment">// 获取原 value</span></span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            <span class="comment">// 如果需要改变现有值 后者 原 value 为 null</span></span><br><span class="line">            <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)</span><br><span class="line">                e.value = value;</span><br><span class="line">            afterNodeAccess(e);</span><br><span class="line">            <span class="comment">// 返回原 value</span></span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 修改次数 +1</span></span><br><span class="line">    ++modCount;</span><br><span class="line">    <span class="comment">// 大小 +1 ，是否需要扩容</span></span><br><span class="line">    <span class="keyword">if</span> (++size &gt; threshold)</span><br><span class="line">        resize();</span><br><span class="line">    afterNodeInsertion(evict);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="get获取对应值"><a href="#get获取对应值" class="headerlink" title="get获取对应值"></a><code>get</code>获取对应值</h3><blockquote><p>调用<code>getNode</code>方法获取指定<code>key</code>对应的<code>value</code>，未找到就返回<code>null</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据<code>key</code>的哈希值和<code>key</code>找到对应的节点</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;</span><br><span class="line">        Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</span><br><span class="line">        <span class="comment">// 判断数组不为 null，且不为空，且数组对应索引位的节点不为 null</span></span><br><span class="line">        <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">            (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 判断 hash 和 key 是否匹配，匹配了就直接返回    </span></span><br><span class="line">            <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// always check first node</span></span><br><span class="line">                ((k = first.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                <span class="keyword">return</span> first;</span><br><span class="line">            <span class="comment">//节点的后继节点不为 null</span></span><br><span class="line">            <span class="keyword">if</span> ((e = first.next) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">// 如果是红黑树结构</span></span><br><span class="line">                <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</span><br><span class="line">                <span class="comment">// 当前节点是链表结构，遍历链表直到找到 hash 和 key 都匹配的节点 </span></span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                        <span class="keyword">return</span> e;</span><br><span class="line">                &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">```   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### `resize`扩容</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">    <span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">        <span class="comment">// 记录旧哈希表</span></span><br><span class="line">        Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">        <span class="comment">// 记录旧哈希表数组大小</span></span><br><span class="line">        <span class="keyword">int</span> oldCap = (oldTab == <span class="keyword">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">        <span class="comment">// 记录原 threshold</span></span><br><span class="line">        <span class="keyword">int</span> oldThr = threshold;</span><br><span class="line">        <span class="keyword">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 说明 HashMap 已经初始化过</span></span><br><span class="line">        <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 旧哈希表大小超过最大允许容量大小，旧将 threshold 置为 Integer.MAX_VALUE，就直接返回旧哈希表</span></span><br><span class="line">            <span class="keyword">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class="line">                threshold = Integer.MAX_VALUE;</span><br><span class="line">                <span class="keyword">return</span> oldTab;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 原数组大小 * 2 小于最大允许容量大小，且原数组大小超过默认初始化大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((newCap = oldCap &lt;&lt; <span class="number">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class="line">                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class="line">                <span class="comment">// 新 threshold 就等于原哈希表长度 * 2</span></span><br><span class="line">                newThr = oldThr &lt;&lt; <span class="number">1</span>; <span class="comment">// double threshold</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数组为空，第一次初始化，新数组大小就等于 threshold</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// initial capacity was placed in threshold</span></span><br><span class="line">            newCap = oldThr;</span><br><span class="line">        <span class="comment">// threshold为零表示使用默认值 </span></span><br><span class="line">        <span class="keyword">else</span> &#123;               <span class="comment">// zero initial threshold signifies using defaults</span></span><br><span class="line">            newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class="line">            newThr = (<span class="keyword">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 新的 threshold 为 0</span></span><br><span class="line">        <span class="keyword">if</span> (newThr == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 通过新表大小乘以负载因子获取 threshold</span></span><br><span class="line">            <span class="keyword">float</span> ft = (<span class="keyword">float</span>)newCap * loadFactor;</span><br><span class="line">            newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class="keyword">float</span>)MAXIMUM_CAPACITY ?</span><br><span class="line">                      (<span class="keyword">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line">        &#125;</span><br><span class="line">        threshold = newThr; <span class="comment">// 得到新的 threshold</span></span><br><span class="line">        <span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"rawtypes"</span>,<span class="string">"unchecked"</span>&#125;)</span><br><span class="line">        <span class="comment">// 创建新的哈希表</span></span><br><span class="line">            Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> Node[newCap];    </span><br><span class="line">        table = newTab;</span><br><span class="line">        <span class="comment">// 如果旧表有数据，就需要把旧表数据重新 put 到新表</span></span><br><span class="line">        <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 开始遍历哈希表数组</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">                Node&lt;K,V&gt; e;</span><br><span class="line">                <span class="comment">// 当前索引位置节点不为 null</span></span><br><span class="line">                <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="comment">// 没有下一个节点，就是单节点的单向链表，直接重新通过哈希取模获取需要插入新表的位置</span></span><br><span class="line">                    <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                        newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                    <span class="comment">// 红黑树结构节点    </span></span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                        ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                    <span class="comment">// 单向链表结构    </span></span><br><span class="line">                    <span class="keyword">else</span> &#123; <span class="comment">// preserve order</span></span><br><span class="line">                        <span class="comment">// 存储与旧索引的相同的节点</span></span><br><span class="line">                        Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="comment">// /存储与新索引相同的节点</span></span><br><span class="line">                        Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                        Node&lt;K,V&gt; next;</span><br><span class="line">                        <span class="comment">// 循环获取旧索引的节点</span></span><br><span class="line">                        <span class="keyword">do</span> &#123;</span><br><span class="line">                            <span class="comment">// 获取下一个节点</span></span><br><span class="line">                            next = e.next;</span><br><span class="line">                            <span class="comment">// e.hash &amp; oldCap 等于 0 ，最高位 为 0，这是索引不变的链表，就说明索引不变</span></span><br><span class="line">                            <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                                <span class="comment">// 第一次循环，尾节点为 null，将 e 赋值给头节点</span></span><br><span class="line">                                <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                    loHead = e;</span><br><span class="line">                                <span class="comment">// 将原尾节点的下一个节点设置为当前节点，当前节点就是尾节点了</span></span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    loTail.next = e;</span><br><span class="line">                                <span class="comment">// 尾节点为当前节点</span></span><br><span class="line">                                loTail = e;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//最高位 为 1 ，说明索引发生了变化</span></span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                    hiHead = e;</span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    hiTail.next = e;</span><br><span class="line">                                hiTail = e;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line">                        <span class="comment">// 尾节点不为 null，说明节点数为 &gt; 1</span></span><br><span class="line">                        <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                            newTab[j] = loHead;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                            <span class="comment">// rehash　后节点新的位置一定为 原索引 +　oldCap</span></span><br><span class="line">                            newTab[j + oldCap] = hiHead;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newTab;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><code>HashMap</code>的扩容特别占用系统资源，涉及到内存拷贝。所以我们在使用中尽量避免<code>HashMap</code>触发扩容。当 <code>size</code> &gt; <code>threshold</code> 的时候会触发扩容操作，所以尽量根据实际场景给定<code>HashMap</code>初始化容量。避免因为默认容量过小导致频繁扩容。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之LinkedList</title>
      <link href="/post/jdk-source-linkedlist.html"/>
      <url>/post/jdk-source-linkedlist.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>死磕Jdk源码之<code>LinkedList</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/LinkedList.png" alt></p><blockquote><p>双向链表实现了列表和<code>Deque</code>接口。实现所有可选的列表操作，并允许所有元素(包括<code>null</code>)。<br>所有操作的执行都符合双向链表的预期。索引到列表中的操作将从头或尾遍历列表，以更接近指定索引的操作为准。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li><code>LinkedList</code>是一个继承于<code>AbstractSequentialList</code>的双向链表。它也可以被当做堆栈、队列或双端队列进行使用。</li><li><code>LinkedList</code>实现<code>List</code>接口，能让它进行队列操作。</li><li><code>LinkedList</code>实现<code>Deque</code>接口，即能将<code>LinkedList</code>当做双端队列使用。</li><li><code>LinkedList</code>实现<code>Cloneable</code>，即覆盖了函数<code>clone()</code>，能被克隆。</li><li><code>LinkedList</code>实现了<code>java.io.Serializable</code>接口，这意味着<code>LinkedList</code>支持序列化，能通过序列化去传输。</li><li><code>LinkedList</code>中的操作不是线程安全的。</li></ol><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p><code>LinkedList</code>内部维护一个双向列表</p><h3 id="线程安全性"><a href="#线程安全性" class="headerlink" title="线程安全性"></a>线程安全性</h3><p>这个实现不是同步的。如果多个线程同时访问一个链表，并且至少有一个线程从结构上修改了链表，那么它必须在外部同步。(结构修改是指增加或删除一个或多个元素的任何操作;仅仅设置元素的值并不是一种结构修改。)这通常是通过对一些自然封装列表的对象进行同步来实现的。如果不存在这样的对象，则应该使用集合对列表进行“包装”。<code>synchronizedList</code>方法。这最好在创建时完成，以防止意外的不同步访问列表:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List list = Collections.synchronizedList(<span class="keyword">new</span> LinkedList());</span><br></pre></td></tr></table></figure></div><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><p><code>LinkedList</code>有三个个关键的成员变量</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/linkedlist-member-variables.jpg" alt></p><blockquote><p>还有一个记录集合修改次数的变量，由<code>iterator</code>和<code>listIterator</code>，如果在迭代过程中，<code>modCount</code>的值变更，就会抛出<code>ConcurrentModificationException</code>异常。</p></blockquote><ul><li><strong>size</strong></li></ul><p>表示<code>LinkedList</code>中的元素个数</p><ul><li><strong>first</strong></li></ul><p><code>LinkedList</code>的第一个节点</p><p>满足要么第一个节点和最后一个节点都为<code>null</code>，要么第一个节点不为null，第一个的前驱节点为空</p><ul><li><strong>last</strong></li></ul><p><code>LinkedList</code>的最后一个节点</p><p>满足要么第一个节点和最后一个节点都为<code>null</code>，要么最后一个节点不为null，第一个的后继节点为空</p><h2 id="死磕源码"><a href="#死磕源码" class="headerlink" title="死磕源码"></a>死磕源码</h2><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><h4 id="add-E-e"><a href="#add-E-e" class="headerlink" title="add(E e)"></a>add(E e)</h4><blockquote><p>将指定的元素追加到此列表的末尾。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 将元素 e 追加到链表末尾</span></span><br><span class="line">    linkLast(e);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Links e as last element.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkLast</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前 last 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">    <span class="comment">// 创建一个新节点，节点的前驱节点为原 last 节点，节点的后继节点为 null</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(l, e, <span class="keyword">null</span>);</span><br><span class="line">    <span class="comment">// 将当前节点置为末尾绩点</span></span><br><span class="line">    last = newNode;</span><br><span class="line">    <span class="comment">// 如果原 last 节点为 null，就说明链表为空，将 first 设置为新节点</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="comment">// 如果原末尾节点不为 null，将原 last 节点的后继节点指向新节点</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        l.next = newNode;</span><br><span class="line">    <span class="comment">// 链表大小 +1</span></span><br><span class="line">    size++;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="add-int-index-E-element"><a href="#add-int-index-E-element" class="headerlink" title="add(int index, E element)"></a>add(int index, E element)</h4><blockquote><p>将指定元素插入到列表中的指定位置。通过改变后续元素的指向。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 检查给定的索引是否合法</span></span><br><span class="line">    checkPositionIndex(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果索引值等于链表大小，就相当于在尾部追加节点</span></span><br><span class="line">    <span class="keyword">if</span> (index == size)</span><br><span class="line">        linkLast(element);</span><br><span class="line">    <span class="comment">// 调用 linkBefore ，在指定节点前插入元素 element</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        linkBefore(element, node(index));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>node</code>方法根据索引返回指定位置的节点，其实就是遍历链表</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the (non-null) Node at the specified element index.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert isElementIndex(index);</span></span><br><span class="line">    <span class="comment">// 等同于 index &lt; size/2，如果索引在链表的前半部分就从 first 节点往后遍历</span></span><br><span class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;</span><br><span class="line">        Node&lt;E&gt; x = first;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)</span><br><span class="line">            x = x.next;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="comment">// 如果 索引在链表的后半部分就从 last 节点往前遍历    </span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Node&lt;E&gt; x = last;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)</span><br><span class="line">            x = x.prev;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>在指定节点 succ 前插入 元素 e</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Inserts element e before non-null Node succ.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">linkBefore</span><span class="params">(E e, Node&lt;E&gt; succ)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert succ != null;</span></span><br><span class="line">    <span class="comment">// 获取被插入节点的前驱节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; pred = succ.prev;</span><br><span class="line">    <span class="comment">// 创建一个新的节点，前驱节点为 succ 节点的前驱节点，后继节点为 succ 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; newNode = <span class="keyword">new</span> Node&lt;&gt;(pred, e, succ);</span><br><span class="line">    <span class="comment">// 将 succ 节点的前驱节点置为新节点</span></span><br><span class="line">    succ.prev = newNode;</span><br><span class="line">    <span class="comment">// 如果 succ 节点的 前驱节点为null，也就是说原链表为空，新节点就是第一个元素，新节点同时也是 first 节点</span></span><br><span class="line">    <span class="keyword">if</span> (pred == <span class="keyword">null</span>)</span><br><span class="line">        first = newNode;</span><br><span class="line">    <span class="comment">// 否则就将原 succ 节点的前驱节点的后继节点置为新节点 </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        pred.next = newNode;</span><br><span class="line">    <span class="comment">// 链表大小 +1    </span></span><br><span class="line">    size++;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><h4 id="remove-Object-o"><a href="#remove-Object-o" class="headerlink" title="remove(Object o)"></a>remove(Object o)</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果 o 为 null，就移除第一个元素为 null 的节点</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x.item == <span class="keyword">null</span>) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">// 否则移除第一个 equals o 的元素节点    </span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Node&lt;E&gt; x = first; x != <span class="keyword">null</span>; x = x.next) &#123;</span><br><span class="line">            <span class="keyword">if</span> (o.equals(x.item)) &#123;</span><br><span class="line">                unlink(x);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>从链表中移除对应的节点</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null node x.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">E <span class="title">unlink</span><span class="params">(Node&lt;E&gt; x)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert x != null;</span></span><br><span class="line">    <span class="comment">// 获取当前节点的元素 element</span></span><br><span class="line">    <span class="keyword">final</span> E element = x.item;</span><br><span class="line">    <span class="comment">// 获取当前节点的后继节点 next</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = x.next;</span><br><span class="line">    <span class="comment">// 获取当前节点的前驱节点 prev</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = x.prev;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果 prev 节点为 null，说明是 first 节点，就将 next 节点指向 first</span></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>) &#123;</span><br><span class="line">        first = next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 否则</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 将 prev 节点的后继节点指向 next 节点</span></span><br><span class="line">        prev.next = next;</span><br><span class="line">        <span class="comment">// 当前节点的前驱节点置为 null</span></span><br><span class="line">        x.prev = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果 next 节点为 null，说明是 last 节点，就将 prev 节点指向 last</span></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>) &#123;</span><br><span class="line">        last = prev;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 否则</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/// 将 next 节点的前驱节点指向 prev 节点</span></span><br><span class="line">        <span class="comment">// 当前节点的后继节点置为 null</span></span><br><span class="line">        next.prev = prev;</span><br><span class="line">        x.next = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当前节点元素置为 null</span></span><br><span class="line">    x.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1</span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="removeFirst"><a href="#removeFirst" class="headerlink" title="removeFirst()"></a>removeFirst()</h4><blockquote><p>移除链表的 first 节点并返回被移除的元素</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前 first 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; f = first;</span><br><span class="line">    <span class="comment">// 如果 first 节点为 null，也就是链表为空，就抛出 NoSuchElementException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (f == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">    <span class="comment">// 移除 first 节点</span></span><br><span class="line">    <span class="keyword">return</span> unlinkFirst(f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null first node f.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">unlinkFirst</span><span class="params">(Node&lt;E&gt; f)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert f == first &amp;&amp; f != null;</span></span><br><span class="line">    <span class="comment">// 获取 f 节点的元素</span></span><br><span class="line">    <span class="keyword">final</span> E element = f.item;</span><br><span class="line">    <span class="comment">// 获取 f (原 first)节点的后继节点 next</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; next = f.next;</span><br><span class="line">    <span class="comment">// 将 f 节点 元素置为 null</span></span><br><span class="line">    f.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 将 f 节点 后继节点置为 null</span></span><br><span class="line">    f.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">    <span class="comment">// 将 first 节点指向 f (原 first) 节点的 next 节点</span></span><br><span class="line">    first = next;</span><br><span class="line">    <span class="comment">// 如果 next 节点为 null，说明此时链表为空，last 节点也应该为 null</span></span><br><span class="line">    <span class="keyword">if</span> (next == <span class="keyword">null</span>)</span><br><span class="line">        last = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 否则，将 next (当前 first)节点的前驱节点置为 null   </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        next.prev = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1        </span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="removeLast"><a href="#removeLast" class="headerlink" title="removeLast()"></a>removeLast()</h4><blockquote><p>移除链表的 last 节点并返回被移除的元素</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Removes and returns the last element from this list.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the last element from this list</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> NoSuchElementException if this list is empty</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 获取当前 last 节点</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; l = last;</span><br><span class="line">     <span class="comment">// 如果 last 节点为 null，也就是链表为空，就抛出 NoSuchElementException 异常</span></span><br><span class="line">    <span class="keyword">if</span> (l == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</span><br><span class="line">    <span class="comment">// 移除 last 节点    </span></span><br><span class="line">    <span class="keyword">return</span> unlinkLast(l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Unlinks non-null last node l.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> E <span class="title">unlinkLast</span><span class="params">(Node&lt;E&gt; l)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// assert l == last &amp;&amp; l != null;</span></span><br><span class="line">    <span class="comment">// 获取 l 节点的元素</span></span><br><span class="line">    <span class="keyword">final</span> E element = l.item;</span><br><span class="line">    <span class="comment">// 获取 l (原 last)节点的前驱节点 prev</span></span><br><span class="line">    <span class="keyword">final</span> Node&lt;E&gt; prev = l.prev;</span><br><span class="line">    <span class="comment">// 将 l 节点 元素置为 null</span></span><br><span class="line">    l.item = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 将 l 节点 前驱节点置为 null</span></span><br><span class="line">    l.prev = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">    <span class="comment">// 将 last 节点指向 原 last 节点的前驱节点 prev</span></span><br><span class="line">    last = prev;</span><br><span class="line">    <span class="comment">//  如果 prev 为 null，说明链表为空，将 first置为 null</span></span><br><span class="line">    <span class="keyword">if</span> (prev == <span class="keyword">null</span>)</span><br><span class="line">        first = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 否则，将 prev (当前 last)节点的后继节点置为 null   </span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        prev.next = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// 链表大小 -1        </span></span><br><span class="line">    size--;</span><br><span class="line">    <span class="comment">// 修改次数 + 1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> element;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><code>LinkedList</code>插入效率很高，通过索引插入效率较低需要遍历链表，根据索引值选择从 <code>last</code> 或 <code>first</code> 节点开始遍历。最坏结果为需要遍历 size/2 个元素。<br><code>LinkedList</code>移除元素效率很高，通过索引移除元素同通过索引插入元素，需要遍历节点。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死磕Jdk源码之ArrayList</title>
      <link href="/post/jdk-source-arraylist.html"/>
      <url>/post/jdk-source-arraylist.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>死磕Jdk源码之<code>ArrayList</code></strong>:</p><p>本博客目前所有 死磕 Jdk 源码系列都是使用 <code>jdk1.8</code>版本。</p></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ArrayList.png" alt></p><blockquote><p><code>List</code>接口的可调整大小的数组实现。实现所有可选的列表操作，并允许所有元素，包括<code>null</code>。除了实现<code>List</code>接口之外，该类还提供了一些方法来操作数组的大小，该数组在内部用于存储<code>List</code>。(这个类大致相当于<code>Vector</code>，只是它是不同步的。)<br><code>size</code>、<code>isEmpty</code>、<code>get</code>、<code>set</code>、<code>iterator</code>和<code>listIterator</code>操作在常数时间内运行。添加操作在平摊常数时间内运行，也就是说，添加n个元素需要O(n)个时间。所有其他操作都在线性时间内运行(粗略地说)。与<code>LinkedList</code>实现相比，常量因子较低。</p></blockquote><p>以上是官方<a href="https://docs.oracle.com/javase/8/docs/api/" target="_blank" rel="noopener">docs</a>对<code>ArrayList</code>的描述</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li><code>ArrayList</code>实现<code>List</code>，得到了<code>List</code>集合框架基础功能</li><li><code>ArrayList</code>实现<code>RandomAccess</code>，获得了快速随机访问存储元素的功能，<code>RandomAccess</code>是一个标记接口，没有任何方法</li><li><code>ArrayList</code>实现<code>Cloneable</code>，得到了<code>clone()</code>方法，可以实现克隆功能</li><li><code>ArrayList</code>实现<code>Serializable</code>，表示可以被序列化，通过序列化去传输，典型的应用就是<code>hessian</code>协议。</li></ol><p>它具有如下特点：</p><ul><li>容量不固定，随着容量的增加而动态扩容（阈值基本不会达到）</li><li>有序集合（插入的顺序 == 输出的顺序）</li><li>插入的元素可以为<code>null</code></li><li>增删改查效率更高（相对于<code>LinkedList</code>来说）</li><li>线程不安全</li></ul><h3 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h3><p><code>ArrayList</code>的底层数据结构就是一个数组，对<code>ArrayList</code>的所有操作底层都是基于数组的。</p><h3 id="线程安全性"><a href="#线程安全性" class="headerlink" title="线程安全性"></a>线程安全性</h3><p>如果非要在多线程的环境下使用<code>ArrayList</code>，就需要保证它的线程安全性，通常有两种解决办法：</p><ol><li>使用<code>synchronized</code>关键字</li><li>使用<code>Collections</code>类中的静态方法<code>synchronizedList()</code>对<code>ArrayList</code>进行调用即可。</li></ol><h3 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h3><p><code>ArrayList</code>有两个关键的成员变量</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/arraylist-member-variables.jpg" alt></p><blockquote><p>还有一个记录集合修改次数的变量，由<code>iterator</code>和<code>listIterator</code>，如果在迭代过程中，<code>modCount</code>的值变更，就会抛出<code>ConcurrentModificationException</code>异常。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">transient</span> <span class="keyword">int</span> modCount = <span class="number">0</span>;</span><br></pre></td></tr></table></figure></div><ul><li><strong>elementData</strong></li></ul><blockquote><p>存储<code>ArrayList</code>元素的数组缓冲区。<code>ArrayList</code>的容量是这个数组缓冲区的长度。任何空<code>ArrayList</code>与<code>elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA</code>,将在添加第一个元素时扩展为<code>DEFAULT_CAPACITY</code>。</p></blockquote><p><code>elementData</code>就是实际维护的数组,对于一个空<code>ArrayList</code>来说,<code>elementData</code>就是一个空数组。会在第一次<code>add</code>元素时扩容为长度为<code>DEFAULT_CAPACITY</code>的数组。</p><ul><li><strong>size</strong></li></ul><p><code>ArrayList</code>的大小(它包含的元素的数量)。这里的<code>size</code>指的是元素的个数，而不是数组的大小。</p><h2 id="死磕源码"><a href="#死磕源码" class="headerlink" title="死磕源码"></a>死磕源码</h2><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><blockquote><p>无参构造函数，elementData 等于默认的空数组</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Constructs an empty list with an initial capacity of ten.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.elementData = DEFAULTCAPACITY_EMPTY_ELEMENTDATA;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>根据给定的初始化容量大小创建<code>ArrayList</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.elementData = <span class="keyword">new</span> Object[initialCapacity];</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (initialCapacity == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal Capacity: "</span> + initialCapacity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>从一个<code>Collection</code>集合创建<code>ArrayList</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(Collection&lt;? extends E&gt; c)</span> </span>&#123;</span><br><span class="line">    elementData = c.toArray();</span><br><span class="line">    <span class="keyword">if</span> ((size = elementData.length) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// c.toArray might (incorrectly) not return Object[] (see 6260652)</span></span><br><span class="line">        <span class="keyword">if</span> (elementData.getClass() != Object[]<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">            <span class="title">elementData</span> </span>= Arrays.copyOf(elementData, size, Object[]<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// replace with empty array.</span></span><br><span class="line">        <span class="keyword">this</span>.elementData = EMPTY_ELEMENTDATA;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><p><code>ArrayList</code>提供两个方法添加单个元素，一个可以指定索引的添加元素方法，一个不需要指定索引的添加元素方法。</p><ul><li><code>add(E e)</code></li></ul><blockquote><p>将指定的元素追加到此列表的末尾。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">add</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line">    elementData[size++] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>在<code>ensureCapacityInternal</code>方法中对<code>modCount</code>成员变量 +1,表示集合的修改次数，检查数组容量，是否需要扩容。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    ensureExplicitCapacity(calculateCapacity(elementData, minCapacity));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>calculateCapacity</code>方法是为了计算最小扩容量</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calculateCapacity</span><span class="params">(Object[] elementData, <span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 也就是当前数组是个默认空数组,集合内无元素,此时返回 DEFAULT_CAPACITY 和 minCapacity 的最大值,否则就返回 minCapacity</span></span><br><span class="line">    <span class="keyword">if</span> (elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA) &#123;</span><br><span class="line">        <span class="keyword">return</span> Math.max(DEFAULT_CAPACITY, minCapacity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> minCapacity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>ensureExplicitCapacity</code>方法需要判断数组是否需要扩容</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureExplicitCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// modCount + 1 记录修改次数</span></span><br><span class="line">    modCount++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断数组容量是否溢出</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 这里对数组进行扩容</span></span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><strong>grow</strong>方法，<code>ArrayList</code>扩容的核心方法。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前数组大小</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="comment">// 计算新的容量大小  =  oldCapacity * 1.5 (右移一位 相当于 oldCapacity / 2)</span></span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 计算的新容量小于 minCapacity，就取 minCapacity</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="comment">// 如果新容量大于 MAX_ARRAY_SIZE,取 Integer.MAX_VALUE</span></span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><code>add(int index, E element)</code></li></ul><blockquote><p>将指定元素插入其中的指定位置列表。移动当前处于该位置的元素(如果有)并向右的任何后续元素(将一个元素添加到它们的索引中)。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E element)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查 index 是否合法</span></span><br><span class="line">    rangeCheckForAdd(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 同 add(E e)</span></span><br><span class="line">    ensureCapacityInternal(size + <span class="number">1</span>);  <span class="comment">// Increments modCount!!</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这里使用数组拷贝，把添加位置后的元素往后移，目的是为了空出当前索引位</span></span><br><span class="line">    System.arraycopy(elementData, index, elementData, index + <span class="number">1</span>, size - index);</span><br><span class="line">    <span class="comment">// 将元素插入指定的索引位</span></span><br><span class="line">    elementData[index] = element;</span><br><span class="line">    size++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h3><ul><li><code>remove(int index)</code></li></ul><blockquote><p>根据指定索引移除元素</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查索引是否合法</span></span><br><span class="line">    rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// modCount 修改次数 +1</span></span><br><span class="line">    modCount++;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据索引从数组中获取元素</span></span><br><span class="line">    E oldValue = elementData(index);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算需要拷贝的数组长度</span></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 对移除元素之后的元素进行数组拷贝，就是将被移除位之后的元素前移</span></span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index, numMoved);</span><br><span class="line">    <span class="comment">// 集合的最后一位元素置空</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回被移除的元素</span></span><br><span class="line">    <span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li><code>remove(Object o)</code></li></ul><blockquote><p>从列表中删除指定元素的第一个匹配项</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">remove</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 如果 o 为 null，就删除第一个空元素</span></span><br><span class="line">    <span class="keyword">if</span> (o == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; size; index++)</span><br><span class="line">            <span class="keyword">if</span> (elementData[index] == <span class="keyword">null</span>) &#123;</span><br><span class="line">                fastRemove(index);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="comment">// 否则就移除第一个 equals o 的元素</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; size; index++)</span><br><span class="line">            <span class="keyword">if</span> (o.equals(elementData[index])) &#123;</span><br><span class="line">                fastRemove(index);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>与<code>remove(int index)</code>方法逻辑相同,只是这里没有进行索引检查，因为索引本来就是从数组中遍历出来的</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">fastRemove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// modCount 修改次数 +1</span></span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// 计算需要拷贝的数组长度</span></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 对移除元素之后的元素进行数组拷贝，就是将被移除位之后的元素前移</span></span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index, numMoved);</span><br><span class="line">    <span class="comment">// 集合的最后一位元素置空</span></span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// clear to let GC do its work</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><code>ArrayList</code>底层维护一个数组</li><li><code>ArrayList</code>默认数组是一个空数组 <code>{}</code></li><li><code>ArrayList</code>第一次添加元素时才会扩容到 <code>capacity</code> 大小</li><li><code>ArrayList</code>扩容为原容量到 <code>1.5</code> 倍</li><li><code>ArrayList</code>通过索引添加元素可能会导致内存拷贝</li><li><code>ArrayList</code>移除元素可能需要内存拷贝</li></ol><blockquote><p>所以尽量不要使用索引去添加元素，索引添加元素的效率取决于索引的位置。理论上 <code>size</code> - <code>index</code> 的值越大，效率越低，因为需要拷贝的元素越多。(移除元素同理)</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> jdk源码 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> jdk源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现堆排序</title>
      <link href="/post/heap-sort.html"/>
      <url>/post/heap-sort.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>堆排序是利用<strong>堆</strong>这种数据结构而设计的一种排序算法，堆排序是一种<strong>选择排序</strong>，它的最坏，最好，平均时间复杂度均为O(nlogn)，它也是不稳定排序。首先简单了解下堆结构。</p></blockquote><p>堆是具有以下性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。</p><ul><li>大顶堆：arr[i] &gt;= arr[2i+1] &amp;&amp; arr[i] &gt;= arr[2i+2]</li><li>小顶堆：arr[i] &lt;= arr[2i+1] &amp;&amp; arr[i] &lt;= arr[2i+2]</li></ul><blockquote><p>堆排序的基本思想是：将待排序序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根节点。将其与末尾元素进行交换，此时末尾就为最大值。然后将剩余<code>n-1</code>个元素重新构造成一个堆，这样会得到<code>n</code>个元素的次小值。如此反复执行，便能得到一个有序序列了</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww1.sinaimg.cn/large/0065JV1Hgy1gb1ta7e0ukg30qe0eutlm.gif" alt referrerpolicy="no-referrer"></p><p>Java实现堆排序</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeapSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第一步：将数组堆化 beginIndex = 第一个非叶子节点。 从第一个非叶子节点开始即可。无需从最后一个叶子节点开始。</span></span><br><span class="line"><span class="comment">         * 叶子节点可以看作已符合堆要求的节点，根节点就是它自己且自己以下值为最大。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">int</span> len = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> beginIndex = (len - <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = beginIndex; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            adjustHeap(array, i, len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 第二步：对堆化数据排序 每次都是移出最顶层的根节点A[0]，与最尾部节点位置调换，同时遍历长度 - 1。</span></span><br><span class="line"><span class="comment">         * 然后从新整理被换到根节点的末尾元素，使其符合堆的特性。 直至未排序的堆长度为 0。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            swap(array, <span class="number">0</span>, i);</span><br><span class="line">            adjustHeap(array, <span class="number">0</span>, i - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调整大顶堆（仅是调整过程，建立在大顶堆已构建的基础上）</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> len</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">adjustHeap</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> index, <span class="keyword">int</span> len)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> li = (index &lt;&lt; <span class="number">1</span>) + <span class="number">1</span>; <span class="comment">// 左子节点索引</span></span><br><span class="line">        <span class="keyword">int</span> ri = li + <span class="number">1</span>; <span class="comment">// 右子节点索引</span></span><br><span class="line">        <span class="keyword">int</span> cMax = li; <span class="comment">// 子节点值最大索引，默认左子节点。</span></span><br><span class="line">        <span class="keyword">if</span> (li &gt; len) &#123;</span><br><span class="line">            <span class="keyword">return</span>; <span class="comment">// 左子节点索引超出计算范围，直接返回。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ri &lt;= len &amp;&amp; array[ri] &gt; array[li]) &#123; <span class="comment">// 先判断左右子节点，哪个较大。</span></span><br><span class="line">            cMax = ri;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (array[cMax] &gt; array[index]) &#123; <span class="comment">// 若“&lt;”这是从大到小</span></span><br><span class="line">            swap(array, cMax, index); <span class="comment">// 如果父节点被子节点调换，</span></span><br><span class="line">            adjustHeap(array, cMax, len); <span class="comment">// 则需要继续判断换下后的父节点是否符合堆的特性。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 交换元素</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = arr[a];</span><br><span class="line">        arr[a] = arr[b];</span><br><span class="line">        arr[b] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据结构 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现LRU算法</title>
      <link href="/post/lru-java.html"/>
      <url>/post/lru-java.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong><code>LRU</code>算法</strong>:</p><p><code>LRU</code>是<code>Least Recently Used</code>的缩写，即最近最少使用，是一种常用的页面置换算法，选择最近最久未使用的页面予以淘汰。该算法赋予每个页面一个访问字段，用来记录一个页面自上次被访问以来所经历的时间 t，当须淘汰一个页面时，选择现有页面中其 t 值最大的，即最近最少使用的页面予以淘汰。</p></div><blockquote><p>基于 <strong>哈希表</strong> + <strong>双向链表</strong> 的 <code>Java</code> 实现</p></blockquote><ul><li><strong>查找</strong> : 通过哈希表查找到，然后移动到双向链表的头部。</li><li><strong>删除</strong> : 通过哈希表查找到，通过双向链表拿到前驱节点，直接删除即可。</li><li><strong>插入</strong> : 先看是否存在，如果存在移动到链表头部，如果不存在，链表满的话删除尾节点，然后插入链表尾头部，否则不满，则直接插入链表头部。</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">private</span> Hashtable&lt;String, DLinkedNode&gt;  cache = <span class="keyword">new</span> Hashtable&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="keyword">private</span> DLinkedNode head, tail;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">        head.pre = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        tail = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">        tail.post = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        head.post = tail;</span><br><span class="line">        tail.pre = head;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        DLinkedNode node = cache.get(key);</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>; <span class="comment">// should raise exception here.</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// move the accessed node to the head;</span></span><br><span class="line">        <span class="keyword">this</span>.moveToHead(node);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node.value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(String key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        DLinkedNode node = cache.get(key);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">            DLinkedNode newNode = <span class="keyword">new</span> DLinkedNode();</span><br><span class="line">            newNode.key = key;</span><br><span class="line">            newNode.value = value;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.cache.put(key, newNode);</span><br><span class="line">            <span class="keyword">this</span>.addNode(newNode);</span><br><span class="line"></span><br><span class="line">            ++count;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(count &gt; capacity)&#123;</span><br><span class="line">                <span class="comment">// pop the tail</span></span><br><span class="line">                DLinkedNode tail = <span class="keyword">this</span>.popTail();</span><br><span class="line">                <span class="keyword">this</span>.cache.remove(tail.key);</span><br><span class="line">                --count;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// update the value.</span></span><br><span class="line">            node.value = value;</span><br><span class="line">            <span class="keyword">this</span>.moveToHead(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Always add the new node right after head;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addNode</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        node.pre = head;</span><br><span class="line">        node.post = head.post;</span><br><span class="line"></span><br><span class="line">        head.post.pre = node;</span><br><span class="line">        head.post = node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Remove an existing node from the linked list.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">removeNode</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        DLinkedNode pre = node.pre;</span><br><span class="line">        DLinkedNode post = node.post;</span><br><span class="line"></span><br><span class="line">        pre.post = post;</span><br><span class="line">        post.pre = pre;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Move certain node in between to the head.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">moveToHead</span><span class="params">(DLinkedNode node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.removeNode(node);</span><br><span class="line">        <span class="keyword">this</span>.addNode(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// pop the current tail.</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> DLinkedNode <span class="title">popTail</span><span class="params">()</span></span>&#123;</span><br><span class="line">        DLinkedNode res = tail.pre;</span><br><span class="line">        <span class="keyword">this</span>.removeNode(res);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DLinkedNode</span> </span>&#123;</span><br><span class="line">        String key;</span><br><span class="line">        <span class="keyword">int</span> value;</span><br><span class="line">        DLinkedNode pre;</span><br><span class="line">        DLinkedNode post;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>基于 <code>LinkedHashMap</code>的实现</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>&lt;<span class="title">K</span>, <span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> CACHE_SIZE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传递进来最多能缓存多少数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> cacheSize 缓存大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> cacheSize)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// true 表示让 linkedHashMap 按照访问顺序来进行排序，最近访问的放在头部，最老访问的放在尾部。</span></span><br><span class="line">        <span class="keyword">super</span>((<span class="keyword">int</span>) Math.ceil(cacheSize / <span class="number">0.75</span>) + <span class="number">1</span>, <span class="number">0.75f</span>, <span class="keyword">true</span>);</span><br><span class="line">        CACHE_SIZE = cacheSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">removeEldestEntry</span><span class="params">(Map.Entry&lt;K, V&gt; eldest)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 当 map中的数据量大于指定的缓存个数的时候，就自动删除最老的数据。</span></span><br><span class="line">        <span class="keyword">return</span> size() &gt; CACHE_SIZE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java实现布隆过滤器</title>
      <link href="/post/bloom-filter-java.html"/>
      <url>/post/bloom-filter-java.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><div class="note info"><p><strong>布隆过滤器</strong>:</p><p>布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是一个很长的<strong>二进制向量</strong>和一系列<strong>随机映射函数</strong>。布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是<strong>空间效率</strong>和<strong>查询时间</strong>都比一般的算法要好的多，缺点是有一定的<strong>误识别率</strong>和<strong>删除困难</strong>。</p></div><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote><p>如果想要判断一个元素是不是在一个集合里，一般想到的是将所有元素保存起来，然后通过比较确定。链表，树等等数据结构都是这种思路. 但是随着集合中元素的增加，我们需要的存储空间越来越大，检索速度也越来越慢(<code>O(n)</code>,<code>O(logn)</code>)。不过世界上还有一种叫作散列表（又叫哈希表，<code>Hash table</code>）的数据结构。它可以通过一个<code>Hash</code>函数将一个元素映射成一个位阵列（Bit array）中的一个点。这样一来，我们只要看看这个点是不是<code>1</code>就可以知道集合中有没有它了。这就是布隆过滤器的基本思想。</p></blockquote><blockquote><p><code>Hash</code>面临的问题就是冲突。假设Hash函数是良好的，如果我们的位阵列长度为m个点，那么如果我们想将冲突率降低到例如 1%, 这个散列表就只能容纳m / 100个元素。显然这就不叫空间效率了（Space-efficient）了。解决方法也简单，就是使用多个<code>Hash</code>，如果它们有一个说元素不在集合中，那肯定就不在。如果它们都说在，虽然也有一定可能性它们在说谎，不过直觉上判断这种事情的概率是比较低的。</p></blockquote><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><blockquote><p>相比于其它的数据结构，布隆过滤器在空间和时间方面都有巨大的优势。</p></blockquote><ol><li>布隆过滤器存储空间和插入/查询时间都是常数。</li><li><code>Hash</code>函数相互之间没有关系，方便由硬件并行实现。</li><li>布隆过滤器不需要存储元素本身，在某些对保密要求非常严格的场合有优势。</li></ol><p>布隆过滤器可以表示全集，其它任何数据结构都不能。</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><blockquote><p>但是布隆过滤器的缺点和优点一样明显。误算率是其中之一。随着存入的元素数量增加，误算率随之增加。常见的补救办法是建立一个小的白名单，存储那些可能被误判的元素。但是如果元素数量太少，则使用散列表足矣。</p></blockquote><blockquote><p>另外，一般情况下不能从布隆过滤器中删除元素。我们很容易想到把位列阵变成整数数组，每插入一个元素相应的计数器加1, 这样删除元素时将计数器减掉就可以了。然而要保证安全的删除元素并非如此简单。首先我们必须保证删除的元素的确在布隆过滤器里面. 这一点单凭这个过滤器是无法保证的。另外计数器回绕也会造成问题。</p></blockquote><p>在降低误算率方面，有不少工作，使得出现了很多布隆过滤器的变种。</p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><p>网页<code>URL</code>的去重，垃圾邮件的判别，集合重复元素的判别，查询加速（比如基于<code>key-value</code>的存储系统）等。</p><h2 id="Java-实现"><a href="#Java-实现" class="headerlink" title="Java 实现"></a>Java 实现</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BloomFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_SIZE = <span class="number">2</span> &lt;&lt; <span class="number">24</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span>[] seeds = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">31</span>, <span class="number">37</span>, <span class="number">61</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BitSet bits = <span class="keyword">new</span> BitSet(DEFAULT_SIZE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SimpleHash[] func = <span class="keyword">new</span> SimpleHash[seeds.length];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BloomFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; seeds.length; i++) &#123;</span><br><span class="line">            func[i] = <span class="keyword">new</span> SimpleHash(DEFAULT_SIZE, seeds[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (SimpleHash f : func) &#123;</span><br><span class="line">            bits.set(f.hash(value), <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> ret = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (SimpleHash f : func) &#123;</span><br><span class="line">            ret = ret &amp;&amp; bits.get(f.hash(value));</span><br><span class="line">            <span class="keyword">if</span>(!ret) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleHash</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> cap;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> seed;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SimpleHash</span><span class="params">(<span class="keyword">int</span> cap, <span class="keyword">int</span> seed)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.cap = cap;</span><br><span class="line">            <span class="keyword">this</span>.seed = seed;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(String value)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> len = value.length();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                result = seed * result + value.charAt(i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (cap - <span class="number">1</span>) &amp; result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个简约的 vuepress 主题 dew</title>
      <link href="/post/vuepress-theme-dew.html"/>
      <url>/post/vuepress-theme-dew.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><p>推荐一款自制的 <code>vuepress</code> 主题 - <a href="https://github.com/hvnobug/vuepress-theme-dew" target="_blank" rel="noopener">dew</a></p><div class="note success"><p><strong><code>dew</code>主题的特性</strong>:</p><ul><li>🎉 以 <code>Markdown</code> 为中心的项目结构</li><li>🌈 <code>VuePress</code> 为每个页面预渲染生成静态的 <code>HTML</code>。</li><li>🌹 <code>Gulp</code> 生成简历页面和<code>PDF</code>文件</li></ul></div><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p><code>vuepress-theme-dew</code>主题是根据 default 主题修改,吸收了<code>vuepress-theme-reco</code> 、<code>vuepress-theme-yur</code> 的一些特性,<br>旨在快速构建引导页或文档页,同时扩展了快速构建简历页,该主题不适合作为个人博客主题。</p></blockquote><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><h3 id="首页预览"><a href="#首页预览" class="headerlink" title="首页预览"></a>首页预览</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-index.png" alt></p><h3 id="简历预览"><a href="#简历预览" class="headerlink" title="简历预览"></a>简历预览</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-resume.png" alt></p><h3 id="PDF-简历预览"><a href="#PDF-简历预览" class="headerlink" title="PDF 简历预览"></a>PDF 简历预览</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-resume-pdf.png" alt></p><h3 id="文档预览"><a href="#文档预览" class="headerlink" title="文档预览"></a>文档预览</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/dew-preview.png" alt></p><p><a href="https://hvnobug.com/pages/theme-document/" target="_blank" rel="noopener">预览地址</a></p><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p><a href="https://hvnobug.com/pages/theme-document/" target="_blank" rel="noopener">文档地址</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> vuepress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vuepress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 加速</title>
      <link href="/post/github-accelerate.html"/>
      <url>/post/github-accelerate.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>Github 慢到爆炸,再也受不了一秒 12kb 的下载速度了。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww1.sinaimg.cn/large/0065JV1Hgy1gafw6k04y3j30re07gtao.jpg" alt referrerpolicy="no-referrer"></p><h2 id="ipaddress获取ip"><a href="#ipaddress获取ip" class="headerlink" title="ipaddress获取ip"></a><code>ipaddress</code>获取<code>ip</code></h2><p>需要加速的域名:</p><ul><li>github.com</li><li>github.global.ssl.fastly.net</li></ul><p>访问<a href="https://github.com.ipaddress.com/" target="_blank" rel="noopener">github.com - ipaddress</a>获取真实 ip</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafviprezcj31u20lk42o.jpg" alt referrerpolicy="no-referrer"></p><p>访问<a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net" target="_blank" rel="noopener">github.global.ssl.fastly.net - ipaddress</a>获取真实 ip</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafvm709hsj31tu0cutas.jpg" alt referrerpolicy="no-referrer"></p><h2 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改<code>hosts</code></h2><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww1.sinaimg.cn/large/0065JV1Hgy1gafvq8yfrgj30og03sdgc.jpg" alt referrerpolicy="no-referrer"></p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>windows 修改, 开始 -&gt; 运行 -&gt; 输入<code>drivers</code> -&gt; 修改 etc/hosts</li><li>刷新<code>DNS</code>缓存,CMD运行 <code>ipconfig /flushdns</code></li></ul><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li><code>sudo vim /etc/hosts</code>修改 hosts</li><li>刷新<code>DNS</code>缓存, <code>sudo /etc/init.d/network restart</code></li></ul><blockquote><p>速度基本在 2.5mb/s 左右,完美。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gafvail4nwj30sg0ek0vx.jpg" alt referrerpolicy="no-referrer"></p><div class="note success"><p><strong>注意</strong>:<br><code>ip</code>不是固定不变了,如果速度慢了,就重新获取<code>ip</code>。</p></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为你的 hexo 添加 loading page</title>
      <link href="/post/hexo-loading-page.html"/>
      <url>/post/hexo-loading-page.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><p>先看效果图。</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/loading-page-example.gif" alt></p><p>思路:</p><ol><li>页面加载完成前,先加载 <code>loading page</code></li><li>页面加载完毕,隐藏<code>loading page</code></li></ol><h2 id="生成loading-page"><a href="#生成loading-page" class="headerlink" title="生成loading page"></a>生成<code>loading page</code></h2><blockquote><p>在<code>body</code>标签起始位置追加 <code>loading page</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"loading-container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"loading-text"</span>&gt;</span>玩命加载中 . . . <span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"loading-image"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="添加css样式和加载完毕事件"><a href="#添加css样式和加载完毕事件" class="headerlink" title="添加css样式和加载完毕事件"></a>添加<code>css</code>样式和加载完毕事件</h2><blockquote><p>在<code>head</code>标签中追加<code>css</code>样式</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">lang</span>=<span class="string">"css"</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#loading-container</span>&#123;</span></span><br><span class="line">        position: fixed;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">        min-height: 100vh;</span><br><span class="line">        width: 100vw;</span><br><span class="line">        z-index: 9999;</span><br><span class="line">        display: flex;</span><br><span class="line">        flex-direction: column;</span><br><span class="line">        justify-content: center;</span><br><span class="line">        align-items: center;</span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="comment">/* loader页面消失采用渐隐的方式*/</span></span></span><br><span class="line">        -webkit-transition: opacity 1s ease;</span><br><span class="line">        -moz-transition: opacity 1s ease;</span><br><span class="line">        -o-transition: opacity 1s ease;</span><br><span class="line">        transition: opacity 1s ease;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span>&#123;</span></span><br><span class="line">        width: 120px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        transform: translate(-50%);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span><br><span class="line">        animation: pacman-balls 1s linear 0s infinite</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.33s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.33s</span> <span class="selector-tag">infinite</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.66s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.66s</span> <span class="selector-tag">infinite</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.99s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">pacman-balls</span> 1<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-class">.99s</span> <span class="selector-tag">infinite</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">   <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:first-of-type</span> &#123;</span></span><br><span class="line">        width: 0;</span><br><span class="line">        height: 0;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 25<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#49b1f5</span>;</span></span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">rotate_pacman_half_up</span> <span class="selector-class">.5s</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">rotate_pacman_half_up</span> <span class="selector-class">.5s</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span></span><br><span class="line">        width: 0;</span><br><span class="line">        height: 0;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 25<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#49b1f5</span>;</span></span><br><span class="line">        border-right-color: transparent;</span><br><span class="line">        border-radius: 25px;</span><br><span class="line"><span class="css">        <span class="selector-tag">-webkit-animation</span>: <span class="selector-tag">rotate_pacman_half_down</span> <span class="selector-class">.5s</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">animation</span>: <span class="selector-tag">rotate_pacman_half_down</span> <span class="selector-class">.5s</span> 0<span class="selector-tag">s</span> <span class="selector-tag">infinite</span>;</span></span><br><span class="line">        margin-top: -50px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> rotate_pacman_half_up &#123;0% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;50% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> rotate_pacman_half_up &#123;0% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;50% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">1turn</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">270deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> rotate_pacman_half_down &#123;0% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;50% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> rotate_pacman_half_down &#123;0% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;50% &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>)&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">90deg</span>)&#125;&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> pacman-balls &#123;75% &#123;<span class="attribute">opacity</span>: .<span class="number">7</span>&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100px</span>, -<span class="number">6.25px</span>)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> pacman-balls &#123;75% &#123;<span class="attribute">opacity</span>: .<span class="number">7</span>&#125;<span class="selector-tag">to</span> &#123;<span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">100px</span>, -<span class="number">6.25px</span>)&#125;&#125;</span></span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(3)</span>,</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(4)</span>,</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(5)</span>,</span></span><br><span class="line"><span class="css">    <span class="selector-class">.loading-image</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#49b1f5</span>;</span></span><br><span class="line">        width: 15px;</span><br><span class="line">        height: 15px;</span><br><span class="line">        border-radius: 100%;</span><br><span class="line">        margin: 2px;</span><br><span class="line">        width: 10px;</span><br><span class="line">        height: 10px;</span><br><span class="line">        position: absolute;</span><br><span class="line"><span class="css">        <span class="selector-tag">transform</span>: <span class="selector-tag">translateY</span>(<span class="selector-tag">-6</span><span class="selector-class">.25px</span>);</span></span><br><span class="line">        top: 25px;</span><br><span class="line">        left: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.loading-text</span>&#123;</span></span><br><span class="line">        margin-bottom: 20vh;</span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line">        font-size: 2rem;</span><br><span class="line">        box-sizing: border-box;</span><br><span class="line">        padding: 0 10px;</span><br><span class="line"><span class="css">        <span class="selector-tag">text-shadow</span>: 0 2<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.2</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">500px</span>) &#123;</span></span><br><span class="line"><span class="css">         <span class="selector-class">.loading-text</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">font-size</span>: 1<span class="selector-class">.5rem</span>;</span></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.fadeout</span> &#123;</span></span><br><span class="line">        opacity: 0;</span><br><span class="line">        filter: alpha(opacity=0);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* logo出现动画 */</span></span></span><br><span class="line"><span class="css">    <span class="keyword">@-webkit-keyframes</span> fadeInDown&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-webkit-transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>);<span class="attribute">transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>)&#125;100%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-webkit-transform</span>:none;<span class="attribute">transform</span>:none&#125;&#125;</span></span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> fadeInDown&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-webkit-transform</span>:<span class="built_in">translate3d</span>(<span class="number">0</span>,-<span class="number">100%</span>,<span class="number">0</span>);&#125;&#125;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>在<code>head</code>中追加加载完毕事件</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> loaded = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">       setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">const</span> loader = <span class="built_in">document</span>.getElementById(<span class="string">"loading-container"</span>);</span></span><br><span class="line"><span class="actionscript">            loader.className=<span class="string">"fadeout"</span> ;<span class="comment">//使用渐隐的方法淡出loading page</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"body-wrap"</span>).style.display=<span class="string">"flex"</span>;</span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                loader.style.display=<span class="string">"none"</span>;</span></span><br><span class="line">            &#125;,1000); </span><br><span class="line"><span class="actionscript">        &#125;,<span class="number">1000</span>);<span class="comment">//强制显示loading page 1s  </span></span></span><br><span class="line">    &#125;;</span><br><span class="line">    loaded();</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="在Hexo中使用"><a href="#在Hexo中使用" class="headerlink" title="在Hexo中使用"></a>在<code>Hexo</code>中使用</h2><blockquote><p>使用<code>Hexo</code>的<a href="https://hexo.io/zh-cn/docs/plugins#%E8%84%9A%E6%9C%AC%EF%BC%88Scripts%EF%BC%89" target="_blank" rel="noopener">scripts</a></p></blockquote><ol><li>在项目根目录新建<code>scipts</code>目录</li><li>新建<code>loading-page.js</code>文件</li><li>使用<code>after_render:html</code>过滤器</li><li>为渲染后的<code>html</code>添加<code>loading page</code></li></ol><blockquote><p><code>loading-page.js</code>代码如下:</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* global hexo */</span></span><br><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_render:html'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">htmlContent</span>) </span>&#123;</span><br><span class="line">     <span class="keyword">const</span> injectHead =</span><br><span class="line"> <span class="string">`&lt;style type="text/css" lang="css"&gt;</span></span><br><span class="line"><span class="string">    #loading-container&#123;</span></span><br><span class="line"><span class="string">        position: fixed;</span></span><br><span class="line"><span class="string">        top: 0;</span></span><br><span class="line"><span class="string">        left: 0;</span></span><br><span class="line"><span class="string">        min-height: 100vh;</span></span><br><span class="line"><span class="string">        width: 100vw;</span></span><br><span class="line"><span class="string">        z-index: 9999;</span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        flex-direction: column;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        background: #FFF;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        /* loader页面消失采用渐隐的方式*/</span></span><br><span class="line"><span class="string">        -webkit-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -moz-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        -o-transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">        transition: opacity 1s ease;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image&#123;</span></span><br><span class="line"><span class="string">        width: 120px;</span></span><br><span class="line"><span class="string">        height: 50px;</span></span><br><span class="line"><span class="string">        transform: translate(-50%);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear 0s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear 0s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .33s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .33s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .66s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .66s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5) &#123;</span></span><br><span class="line"><span class="string">        -webkit-animation: pacman-balls 1s linear .99s infinite;</span></span><br><span class="line"><span class="string">        animation: pacman-balls 1s linear .99s infinite</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   .loading-image div:first-of-type &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_up .5s 0s infinite;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(2) &#123;</span></span><br><span class="line"><span class="string">        width: 0;</span></span><br><span class="line"><span class="string">        height: 0;</span></span><br><span class="line"><span class="string">        border: 25px solid #49b1f5;</span></span><br><span class="line"><span class="string">        border-right-color: transparent;</span></span><br><span class="line"><span class="string">        border-radius: 25px;</span></span><br><span class="line"><span class="string">        -webkit-animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        animation: rotate_pacman_half_down .5s 0s infinite;</span></span><br><span class="line"><span class="string">        margin-top: -50px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_up &#123;0% &#123;transform: rotate(270deg)&#125;50% &#123;transform: rotate(1turn)&#125;to &#123;transform: rotate(270deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @-webkit-keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes rotate_pacman_half_down &#123;0% &#123;transform: rotate(90deg)&#125;50% &#123;transform: rotate(0deg)&#125;to &#123;transform: rotate(90deg)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    @-webkit-keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    @keyframes pacman-balls &#123;75% &#123;opacity: .7&#125;to &#123;transform: translate(-100px, -6.25px)&#125;&#125;</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(3),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(4),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(5),</span></span><br><span class="line"><span class="string">    .loading-image div:nth-child(6)&#123;</span></span><br><span class="line"><span class="string">        background-color: #49b1f5;</span></span><br><span class="line"><span class="string">        width: 15px;</span></span><br><span class="line"><span class="string">        height: 15px;</span></span><br><span class="line"><span class="string">        border-radius: 100%;</span></span><br><span class="line"><span class="string">        margin: 2px;</span></span><br><span class="line"><span class="string">        width: 10px;</span></span><br><span class="line"><span class="string">        height: 10px;</span></span><br><span class="line"><span class="string">        position: absolute;</span></span><br><span class="line"><span class="string">        transform: translateY(-6.25px);</span></span><br><span class="line"><span class="string">        top: 25px;</span></span><br><span class="line"><span class="string">        left: 100px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .loading-text&#123;</span></span><br><span class="line"><span class="string">        margin-bottom: 20vh;</span></span><br><span class="line"><span class="string">        text-align: center;</span></span><br><span class="line"><span class="string">        color: #2c3e50;</span></span><br><span class="line"><span class="string">        font-size: 2rem;</span></span><br><span class="line"><span class="string">        box-sizing: border-box;</span></span><br><span class="line"><span class="string">        padding: 0 10px;</span></span><br><span class="line"><span class="string">        text-shadow: 0 2px 10px rgba(0,0,0,0.2);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    @media only screen and (max-width: 500px) &#123;</span></span><br><span class="line"><span class="string">         .loading-text&#123;</span></span><br><span class="line"><span class="string">            font-size: 1.5rem;</span></span><br><span class="line"><span class="string">         &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .fadeout &#123;</span></span><br><span class="line"><span class="string">        opacity: 0;</span></span><br><span class="line"><span class="string">        filter: alpha(opacity=0);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    /* logo出现动画 */</span></span><br><span class="line"><span class="string">    @-webkit-keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)&#125;100%&#123;opacity:1;-webkit-transform:none;transform:none&#125;&#125;</span></span><br><span class="line"><span class="string">    @keyframes fadeInDown&#123;0%&#123;opacity:0;-webkit-transform:translate3d(0,-100%,0);&#125;&#125;</span></span><br><span class="line"><span class="string"> &lt;/style&gt;</span></span><br><span class="line"><span class="string"> &lt;script&gt;</span></span><br><span class="line"><span class="string">(function () &#123;</span></span><br><span class="line"><span class="string">    const loaded = function()&#123;</span></span><br><span class="line"><span class="string">       setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">            const loader = document.getElementById("loading-container");</span></span><br><span class="line"><span class="string">            loader.className="fadeout" ;//使用渐隐的方法淡出loading page</span></span><br><span class="line"><span class="string">            document.getElementById("body-wrap").style.display="flex";</span></span><br><span class="line"><span class="string">            setTimeout(function()&#123;</span></span><br><span class="line"><span class="string">                loader.style.display="none";</span></span><br><span class="line"><span class="string">            &#125;,1000); </span></span><br><span class="line"><span class="string">        &#125;,1000);//强制显示loading page 1s  </span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    loaded();</span></span><br><span class="line"><span class="string">&#125;)()</span></span><br><span class="line"><span class="string"> &lt;/script&gt;`</span>;</span><br><span class="line">     <span class="keyword">const</span> injectBody = <span class="string">`</span></span><br><span class="line"><span class="string"> &lt;div id="loading-container"&gt;</span></span><br><span class="line"><span class="string">     &lt;p class="loading-text"&gt;玩命加载中 . . . &lt;/p&gt; </span></span><br><span class="line"><span class="string">     &lt;div class="loading-image"&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">         &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">     &lt;/div&gt;</span></span><br><span class="line"><span class="string"> &lt;/div&gt;`</span>;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;\/head&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> lastIndex = htmlContent.lastIndexOf(<span class="string">'&lt;/head&gt;'</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, lastIndex) + injectHead + htmlContent.substring(lastIndex, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (<span class="regexp">/&lt;body&gt;/gi</span>.test(htmlContent)) &#123;</span><br><span class="line">         <span class="keyword">let</span> index = htmlContent.indexOf(<span class="string">'&lt;body&gt;'</span>);</span><br><span class="line">         htmlContent = htmlContent.substring(<span class="number">0</span>, index) + injectBody + htmlContent.substring(index, htmlContent.length);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> htmlContent;</span><br><span class="line"> &#125;, <span class="number">1</span>);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用脚本解决新浪图床防盗链问题</title>
      <link href="/post/hexo-no-referrer.html"/>
      <url>/post/hexo-no-referrer.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gabbg9koawj30jw0n0gqg.jpg" alt referrerpolicy="no-referrer"></p><p>打开网页发现一堆图片加载不出来,打开控制台才发现,报了一堆403.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww3.sinaimg.cn/large/9150e4e5gy1g7wybumlthj20j60kqab3.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>这里我们看到默认的<code>referrerpolicy=no-referrer-when-downgrade</code>,啥意思？<br>表示从<code>https</code>协议降为<code>http</code>协议时不发送<code>referrer</code>给跳转网站的服务器。<br>比如说你的站点走<code>https</code>协议,图片链接走<code>http</code>协议,此时请求图片不会发送<code>referrer</code>信息。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gabbmavjalj30tc12kqai.jpg" alt referrerpolicy="no-referrer"></p><p>其实就是我们传递的<code>referer</code>不符合人家要求呗,大部分站点是允许空<code>referer</code>的。也就是不要在<code>head</code>信息中传递<code>referer</code>属性</p><blockquote><p>那么问题来了,怎么不在<code>head</code>信息中传递<code>referer</code>属性,人家不是说了吗,你站点走<code>https</code>,图片走<code>http</code>协议就不会发送<code>referrer</code>信息了。</p></blockquote><p>使用 http 加载图片。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">markdown</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](http://ws1.sinaimg.cn/large/0065JV1Hgy1gabbg9koawj30jw0n0gqg.jpg)</span><br></pre></td></tr></table></figure></div><p>完美解决,😄</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww2.sinaimg.cn/bmiddle/9150e4e5gy1fznx73h64gg206o06oweo.gif" alt referrerpolicy="no-referrer"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个神奇的 python 开源项目-thefuck</title>
      <link href="/post/how-interesting-project-thefuck.html"/>
      <url>/post/how-interesting-project-thefuck.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>最近在 github 发现了一个神奇的项目,差点没笑死,也太好玩了吧</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww3.sinaimg.cn/large/9150e4e5gy1g2x649qt0zg207i07i0u1.gif" alt referrerpolicy="no-referrer"></p><p>这到底是个怎样的项目? 让我们来一探究竟</p><h2 id="项目描述"><a href="#项目描述" class="headerlink" title="项目描述"></a>项目描述</h2><blockquote><p>Fuck 是一款功能强大的 应用程序,可纠正控制台命令中的错误。</p></blockquote><p>下面我们通过一个动态图看一下它的魔性</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nvbn/thefuck@master/example.gif" alt></p><blockquote><ol><li>这哥们输入了错误命令<code>aptget install vim</code>,提示没有<code>aptget</code>这个命令</li><li>哥们吼了一声<code>fuck</code>,应用纠正为<code>apt-get install vim</code>,这时候又提示需要管理员权限</li><li>哥们又吼了一声<code>fuck</code>,应用纠正为<code>sudo apt-get install vim</code></li></ol></blockquote><p>然后我总结了,只要输错了命令,吼一声<code>fuck</code>应用就会自动纠正。(前提是你不能错的太离谱)</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6hvl8tomj308w08wq3a.jpg" alt referrerpolicy="no-referrer"></p><p>真怕我以后用惯了,写博客成这样:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm instal http-server -g</span><br><span class="line">fuck</span><br></pre></td></tr></table></figure></div><p>👉下面附上<a href="https://github.com/nvbn/thefuck" target="_blank" rel="noopener">项目地址</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringSecurity中通过Nginx转发重定向到Nginx的地址解决办法</title>
      <link href="/post/spring-security-redirect.html"/>
      <url>/post/spring-security-redirect.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>用于请求到服务端时,<code>SpringSecurity</code>会对用户进行鉴权(如果需要)。如果未认证,就会重定向到登录页进行认证授权。<code>SpringSecurity</code>的重定向是直接获取到<br>客户端Ip,如果说我们使用<code>Nginx</code>进行转发,而且使用的内网Ip,就会重定向到内网Ip。</p></blockquote><p>场景:</p><ul><li><code>tomcat</code>服务器一台,内网ip:192.168.0.101,端口8080</li><li><code>nginx</code>服务器一台,外网ip:172.1.1.1,端口80</li></ul><p>客户端使用浏览器访问 <code>http://172.1.1.1</code>,会重定向到<code>http://192/168.0.101:8080/login</code>,该ip为内网ip,肯定是访问不到的。</p><h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><h3 id="1-自定义SpringSecurity重定向逻辑"><a href="#1-自定义SpringSecurity重定向逻辑" class="headerlink" title="1. 自定义SpringSecurity重定向逻辑"></a>1. 自定义<code>SpringSecurity</code>重定向逻辑</h3><blockquote><p>要想自定义<code>SpringSecurity</code>重定向逻辑,就需要了解<code>SpringSecurity</code>的认证流程。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gaa010gmr5j30ir0jnaav.jpg" alt referrerpolicy="no-referrer"></p><p>在<code>ExceptionTranslationFilter</code>的<code>doFilter</code>方法,我们发现这里抛出了<code>AuthenticationException</code></p><p>调用<code>AccessDeniedException</code>方法处理异常</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleSpringSecurityException</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">        HttpServletResponse response, FilterChain chain, RuntimeException exception)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> AuthenticationException) &#123;</span><br><span class="line">        <span class="comment">// ...... </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (exception <span class="keyword">instanceof</span> AccessDeniedException) &#123;</span><br><span class="line">        <span class="comment">// 获取认证信息</span></span><br><span class="line">        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();</span><br><span class="line">        <span class="comment">// 是否为匿名或者记住我？当然匿名啊,都没有登录</span></span><br><span class="line">        <span class="keyword">if</span> (authenticationTrustResolver.isAnonymous(authentication) || authenticationTrustResolver.isRememberMe(authentication)) &#123;</span><br><span class="line">            logger.debug(</span><br><span class="line">                    <span class="string">"Access is denied (user is "</span> + (authenticationTrustResolver.isAnonymous(authentication) ? <span class="string">"anonymous"</span> : <span class="string">"not fully authenticated"</span>) + <span class="string">"); redirecting to authentication entry point"</span>,</span><br><span class="line">                    exception);</span><br><span class="line">            </span><br><span class="line">            sendStartAuthentication(</span><br><span class="line">                    request,</span><br><span class="line">                    response,</span><br><span class="line">                    chain,</span><br><span class="line">                    <span class="keyword">new</span> InsufficientAuthenticationException(</span><br><span class="line">                        messages.getMessage(</span><br><span class="line">                            <span class="string">"ExceptionTranslationFilter.insufficientAuthentication"</span>,</span><br><span class="line">                            <span class="string">"Full authentication is required to access this resource"</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            logger.debug(</span><br><span class="line">                    <span class="string">"Access is denied (user is not anonymous); delegating to AccessDeniedHandler"</span>,</span><br><span class="line">                    exception);</span><br><span class="line"></span><br><span class="line">            accessDeniedHandler.handle(request, response,</span><br><span class="line">                    (AccessDeniedException) exception);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>因为抛出的是<code>AccessDeniedException</code>,这里判断是否为匿名或者记住我,调用<code>sendStartAuthentication</code>方法</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">sendStartAuthentication</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">        HttpServletResponse response, FilterChain chain,</span></span></span><br><span class="line"><span class="function"><span class="params">        AuthenticationException reason)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    SecurityContextHolder.getContext().setAuthentication(<span class="keyword">null</span>);</span><br><span class="line">    requestCache.saveRequest(request, response);</span><br><span class="line">    logger.debug(<span class="string">"Calling Authentication entry point."</span>);</span><br><span class="line">    authenticationEntryPoint.commence(request, response, reason);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>在<code>sendStartAuthentication</code>方法中调用<code>authenticationEntryPoint.commence</code>,debug到它的实现类<code>LoginUrlAuthenticationEntryPoint</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">AuthenticationException authException)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">String redirectUrl = <span class="keyword">null</span>;</span><br><span class="line">       <span class="comment">// 是否使用 forward? 这里是重定向好吗。</span></span><br><span class="line"><span class="keyword">if</span> (useForward) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (forceHttps &amp;&amp; <span class="string">"http"</span>.equals(request.getScheme())) &#123;</span><br><span class="line"><span class="comment">// First redirect the current request to HTTPS.</span></span><br><span class="line"><span class="comment">// When that request is received, the forward to the login page will be</span></span><br><span class="line"><span class="comment">// used.</span></span><br><span class="line">redirectUrl = buildHttpsRedirectUrlForRequest(request);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (redirectUrl == <span class="keyword">null</span>) &#123;</span><br><span class="line">String loginForm = determineUrlToUseForThisRequest(request, response,</span><br><span class="line">authException);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Server side forward to: "</span> + loginForm);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RequestDispatcher dispatcher = request.getRequestDispatcher(loginForm);</span><br><span class="line"></span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">       <span class="comment">// 是重定向走这里</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// redirect to login page. Use https if forceHttps true</span></span><br><span class="line"></span><br><span class="line">redirectUrl = buildRedirectUrlToLoginPage(request, response, authException);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">redirectStrategy.sendRedirect(request, response, redirectUrl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>redirectUrl = buildRedirectUrlToLoginPage(request, response, authException);</code>,也就是这一句构建了重定向到登录页到<code>url</code>。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> String <span class="title">buildRedirectUrlToLoginPage</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">HttpServletResponse response, AuthenticationException authException)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">String loginForm = determineUrlToUseForThisRequest(request, response,</span><br><span class="line">authException);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (UrlUtils.isAbsoluteUrl(loginForm)) &#123;</span><br><span class="line"><span class="keyword">return</span> loginForm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> serverPort = portResolver.getServerPort(request);</span><br><span class="line">String scheme = request.getScheme();</span><br><span class="line"></span><br><span class="line">RedirectUrlBuilder urlBuilder = <span class="keyword">new</span> RedirectUrlBuilder();</span><br><span class="line"></span><br><span class="line">urlBuilder.setScheme(scheme);</span><br><span class="line">urlBuilder.setServerName(request.getServerName());</span><br><span class="line">urlBuilder.setPort(serverPort);</span><br><span class="line">urlBuilder.setContextPath(request.getContextPath());</span><br><span class="line">urlBuilder.setPathInfo(loginForm);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (forceHttps &amp;&amp; <span class="string">"http"</span>.equals(scheme)) &#123;</span><br><span class="line">Integer httpsPort = portMapper.lookupHttpsPort(Integer.valueOf(serverPort));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (httpsPort != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// Overwrite scheme and port in the redirect URL</span></span><br><span class="line">urlBuilder.setScheme(<span class="string">"https"</span>);</span><br><span class="line">urlBuilder.setPort(httpsPort.intValue());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">logger.warn(<span class="string">"Unable to redirect to HTTPS as no port mapping found for HTTP port "</span></span><br><span class="line">+ serverPort);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> urlBuilder.getUrl();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww3.sinaimg.cn/large/9150e4e5gy1g7wybumlthj20j60kqab3.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>也就是说我们重写 <code>LoginUrlAuthenticationEntryPoint</code> 的 <code>buildRedirectUrlToLoginPage</code>的方法不就可以了吗？Ok,直接贴源码。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> <span class="title">UnauthorizedEntryPoint</span> <span class="keyword">extends</span> <span class="title">LoginUrlAuthenticationEntryPoint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    UnauthorizedEntryPoint() &#123;</span><br><span class="line">        <span class="keyword">super</span>(LOGIN_PAGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> String <span class="title">buildRedirectUrlToLoginPage</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException)</span> </span>&#123;</span><br><span class="line">        String loginForm = determineUrlToUseForThisRequest(request, response, authException);</span><br><span class="line">        <span class="keyword">if</span> (UrlUtils.isAbsoluteUrl(loginForm)) &#123;</span><br><span class="line">            <span class="keyword">return</span> loginForm;</span><br><span class="line">        &#125;</span><br><span class="line">        String url = ServletUtil.getRedirectUrl(request, loginForm);</span><br><span class="line">        log.info(<span class="string">"redirect url: &#123;&#125;"</span>, url);</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">            session.setAttribute(REDIRECT_FROM_SESSION_NAME, ServletUtil.getRedirectUrl(request));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p><code>ServletUtil</code>相关源码,主要用于获取真实客户端信息。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getPort</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String port = request.getHeader(<span class="string">"X-Real-Port"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(port) || <span class="string">"unknown"</span>.equalsIgnoreCase(port)) &#123;</span><br><span class="line">            port = String.valueOf(request.getServerPort());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(port);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String ip = request.getHeader(<span class="string">"X-Real-Host"</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">"X-Real-IP"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">"X-Forwarded-For"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">"Proxy-Client-IP"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">"WL-Proxy-Client-IP"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                String host = request.getHeader(<span class="string">"host"</span>);</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.hasLength(host)) &#123;</span><br><span class="line">                    ip = host.split(<span class="string">":"</span>)[<span class="number">0</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">"unknown"</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getRemoteAddr();</span><br><span class="line">                <span class="keyword">if</span> (ip.equals(<span class="string">"127.0.0.1"</span>) || ip.equals(<span class="string">"0:0:0:0:0:0:0:1"</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 根据网卡取本机配置的IP</span></span><br><span class="line">                    InetAddress inetAddress = InetAddress.getLocalHost();</span><br><span class="line">                    ip = inetAddress.getHostAddress();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 对于通过多个代理的情况，第一个IP为客户端真实IP,多个IP按照','分割</span></span><br><span class="line">            <span class="keyword">if</span> (ip.indexOf(<span class="string">","</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                ip = ip.substring(<span class="number">0</span>, ip.indexOf(<span class="string">","</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ip;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getScheme</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String scheme = request.getHeader(<span class="string">"X-Forwarded-Proto"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(scheme) || <span class="string">"unknown"</span>.equalsIgnoreCase(scheme)) &#123;</span><br><span class="line">            scheme = String.valueOf(request.getScheme());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> scheme;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRedirectUrl</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getRedirectUrl(request, request.getServletPath());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getRedirectUrl</span><span class="params">(HttpServletRequest request, String path)</span> </span>&#123;</span><br><span class="line">        RedirectUrlBuilder urlBuilder = <span class="keyword">new</span> RedirectUrlBuilder();</span><br><span class="line">        urlBuilder.setPathInfo(path);</span><br><span class="line">        urlBuilder.setScheme(getScheme(request));</span><br><span class="line">        urlBuilder.setServerName(getIpAddr(request));</span><br><span class="line">        urlBuilder.setPort(ServletUtil.getPort(request));</span><br><span class="line">        urlBuilder.setContextPath(request.getContextPath());</span><br><span class="line">        urlBuilder.setQuery(request.getQueryString());</span><br><span class="line">        <span class="keyword">return</span> urlBuilder.getUrl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当然了,还需要在<code>WebSecurityConfigurerAdapter</code>进行配置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity httpSecurity)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        httpSecurity.exceptionHandling().authenticationEntryPoint(<span class="keyword">new</span> UnauthorizedEntryPoint()).and()</span><br><span class="line">        <span class="comment">//   ... 此处省略其他配置     </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="2-将真实的客户端信息传递给服务端"><a href="#2-将真实的客户端信息传递给服务端" class="headerlink" title="2. 将真实的客户端信息传递给服务端"></a>2. 将真实的客户端信息传递给服务端</h3><blockquote><p>那这些真实客户端信息到底怎么来的,必须<code>nginx</code>转发的啊。</p></blockquote><p>配置 nginx</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">        proxy_pass   http:&#x2F;&#x2F;192.168.0.101:8080;</span><br><span class="line">        proxy_redirect  default;</span><br><span class="line">        proxy_set_header  X-Real-Host $host;</span><br><span class="line">        proxy_set_header  X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header  X-Real-PORT $server_port;</span><br><span class="line">        proxy_set_header  X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_connect_timeout 1;</span><br><span class="line">        proxy_send_timeout 30;</span><br><span class="line">        proxy_read_timeout 60;</span><br><span class="line">        client_max_body_size 50m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这下就可以重定向到真实到客户端地址了。当然你可能会说,干嘛不做转发。转发是可以的,考虑项目使用的是相对地址,使用重定向也可以规避很多问题。绝对地址的话需要考虑到<code>contextPath</code>。</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享 Github 开源的程序员抢票神器</title>
      <link href="/post/12306-open-source.html"/>
      <url>/post/12306-open-source.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><p>马上春节了,很多胖友都在为回家的火车票抓狂呢,一票难求啊。</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7voazl70j308806wweu.jpg" alt referrerpolicy="no-referrer"></p><p>作为一个程序员,还能被抢票难住了？下面我给大家推荐几个开源的抢票神器。</p><h2 id="testerSunshine-12306"><a href="#testerSunshine-12306" class="headerlink" title="testerSunshine/12306"></a>testerSunshine/12306</h2><blockquote><p><code>testerSunshine/12306</code>项目是一个开源的,用<code>python</code>语言编写的12306智能刷票，订票系统,在 Github 拥有 21.8k 的star.</p></blockquote><p>支持自动打码,自动登录,准点预售和捡漏,智能候补,邮件通知和server酱通知,只需要一些简单的配置即可.</p><p><a href="https://github.com/testerSunshine/12306" target="_blank" rel="noopener">项目地址</a></p><h2 id="pjialin-py12306"><a href="#pjialin-py12306" class="headerlink" title="pjialin/py12306"></a>pjialin/py12306</h2><blockquote><p><code>pjialin/py12306</code>项目也是一个用<code>python</code>语言编写的12306 购票助手,支持集群,多账号,多任务购票以及 <code>Web</code> 页面管理,在 Github 拥有 8.5k 的star.</p></blockquote><p>请看项目截图:</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/pjialin/py12306@master/data/images/order_success.png" alt></p><p><a href="https://github.com/pjialin/py12306" target="_blank" rel="noopener">项目地址</a></p><p>啥玩意？不喜欢命令行工具？</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww4.sinaimg.cn/large/9150e4e5ly1fs57iatj60j205i03y0so.jpg" alt referrerpolicy="no-referrer"></p><h2 id="iccfish-12306-ticket-helper"><a href="#iccfish-12306-ticket-helper" class="headerlink" title="iccfish/12306_ticket_helper"></a>iccfish/12306_ticket_helper</h2><blockquote><p><code>iccfish/12306_ticket_helper</code>项目是一个用<code>JavaScript</code>语言编写,基于Webkit/Firefox浏览器的12306订票的助手软件。</p></blockquote><p>可以运行在 <code>遨游3</code> 、 <code>Chrome</code> 、 <code>猎豹</code> 或 <code>Firefox</code> 浏览器上的脚本扩展，可以帮助您在 12306.CN 购买火车票（或抢火车票？），反正就是偷懒呗。</p><p><a href="https://github.com/iccfish/12306_ticket_helper" target="_blank" rel="noopener">项目地址</a></p><p>如果你使用的是<code>window</code>操作系统,<a href="https://www.bypass.cn/" target="_blank" rel="noopener">Bypass-分流抢票</a> (免费)、以及一些第三方的平台(某猪、某程等。加速需要收费)也是一个不错的选择。</p><p>妈妈再也不用担心我买不到火车票了。</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww4.sinaimg.cn/large/9150e4e5ly1fnxtz17ngfg208c08c3z2.gif" alt referrerpolicy="no-referrer"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些实用的开源工具(Java篇)</title>
      <link href="/post/awesome-java-github-tool.html"/>
      <url>/post/awesome-java-github-tool.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="alibaba-arthas"><a href="#alibaba-arthas" class="headerlink" title="alibaba/arthas"></a>alibaba/arthas</h2><p>项目地址:<a href="https://github.com/alibaba/arthas" target="_blank" rel="noopener">alibaba/arthas</a></p><blockquote><p>Alibaba Java Diagnostic Tool Arthas/Alibaba Java诊断利器Arthas <a href="https://alibaba.github.io/arthas/" target="_blank" rel="noopener">https://alibaba.github.io/arthas/</a></p></blockquote><p><code>Arthas</code> 是<code>Alibaba</code>开源的<code>Java</code>诊断工具，深受开发者喜爱。</p><p>当你遇到以下类似问题而束手无策时，<code>Arthas可以帮助你解决</code>：</p><ul><li>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</li><li>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</li><li>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</li><li>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</li><li>是否有一个全局视角来查看系统的运行状况？</li><li>有什么办法可以监控到JVM的实时运行状态？</li><li>怎么快速定位应用的热点，生成火焰图？</li></ul><p><code>Arthas</code>支持JDK 6+，支持<code>Linux/Mac/Windows</code>，采用命令行交互模式，同时提供丰富的 Tab 自动补全功能，进一步方便进行问题的定位和诊断。</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/alibaba/arthas@master/site/src/site/sphinx/_static/dashboard.png" alt></p><h2 id="zouzg-mybatis-generator-gui"><a href="#zouzg-mybatis-generator-gui" class="headerlink" title="zouzg/mybatis-generator-gui"></a>zouzg/mybatis-generator-gui</h2><p>项目地址:<a href="https://github.com/zouzg/mybatis-generator-gui" target="_blank" rel="noopener">zouzg/mybatis-generator-gui</a></p><blockquote><p><code>mybatis-generator-gui</code>是基于<a href="http://mybatis.org/generator/index.html" target="_blank" rel="noopener">mybatis generator</a>开发一款界面工具, 本工具可以使你非常容易及快速生成<code>Mybatis</code>的<code>Java POJO</code>文件及数据库<code>Mapping</code>文件。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t1sx9adj31f00zatfw.jpg" alt referrerpolicy="no-referrer"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t21x9mkj30lt0cet93.jpg" alt referrerpolicy="no-referrer"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6t26sxywj30lt0l6q3t.jpg" alt referrerpolicy="no-referrer"></p><p>核心特征</p><ul><li>按照界面步骤轻松生成代码，省去<code>XML</code>繁琐的学习与配置过程</li><li>保存数据库连接与<code>Generator</code>配置，每次代码生成轻松搞定</li><li>内置常用插件，比如分页插件</li><li>支持<code>OverSSH</code> 方式，通过<code>SSH</code>隧道连接至公司内网访问数据库</li><li>把数据库中表列的注释生成为<code>Java</code>实体的注释，生成的实体清晰明了</li><li>可选的去除掉对版本管理不友好的注释，这样新增或删除字段重新生成的文件比较过来清楚</li><li>目前已经支持<code>Mysql</code>、<code>Mysql8</code>、<code>Oracle</code>、<code>PostgreSQL</code>与<code>SQL Server</code>，暂不对其他非主流数据库提供支持。(<code>MySQL</code>支持的比较好，其他数据库有什么问题可以在<code>issue</code>中反馈)</li></ul><h2 id="gedoor-MyBookshelf"><a href="#gedoor-MyBookshelf" class="headerlink" title="gedoor/MyBookshelf"></a>gedoor/MyBookshelf</h2><p>项目地址:<a href="https://github.com/gedoor/MyBookshelf" target="_blank" rel="noopener">gedoor/MyBookshelf</a></p><blockquote><p>阅读是一款可以自定义来源阅读网络内容的工具，为广大网络文学爱好者提供一种方便、快捷舒适的试读体验。 <a href="https://gedoor.github.io/MyBookshelf/" target="_blank" rel="noopener">https://gedoor.github.io/MyBookshelf/</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook1.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook2.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook3.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook4.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook5.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/gedoor/gedoor.github.io@master/MyBookshelf/image/mybook6.jpg" alt></p><h2 id="ffay-lanproxy"><a href="#ffay-lanproxy" class="headerlink" title="ffay/lanproxy"></a>ffay/lanproxy</h2><p>项目地址: <a href="https://github.com/ffay/lanproxy" target="_blank" rel="noopener">ffay/lanproxy</a></p><blockquote><p><code>lanproxy</code>是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面…）。目前市面上提供类似服务的有花生壳、<code>TeamView</code>、<code>GoToMyCloud</code>等等，但要使用第三方的公网服务器就必须为第三方付费，并且这些服务都有各种各样的限制，此外，由于数据包会流经第三方，因此对数据安全也是一大隐患。</p></blockquote><p>目前<code>lanproxy</code>有免费版和付费版,免费版可以 可创建<code>1 个</code>客户端 ,可创建<code>1 个</code>映射端口,支持最大<code>100 个</code>并发连接数,每月流量<code>1 GB</code>,不支持自定义域名,使用的是海外节点。</p><p><a href="https://nat.cdjxt.net/" target="_blank" rel="noopener">官网地址</a></p><h2 id="oldmanpushcart-greys-anatomy"><a href="#oldmanpushcart-greys-anatomy" class="headerlink" title="oldmanpushcart/greys-anatomy"></a>oldmanpushcart/greys-anatomy</h2><p>项目地址: <a href="https://github.com/oldmanpushcart/greys-anatomy" target="_blank" rel="noopener">oldmanpushcart/greys-anatomy</a></p><blockquote><p>Java诊断工具</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/oldmanpushcart/images@master/greys/greys-logo-readme.png" alt></p><p>线上系统为何经常出错？数据库为何屡遭黑手？业务调用为何频频失败？连环异常堆栈案，究竟是哪次调用所为？ 数百台服务器意外雪崩背后又隐藏着什么？是软件的扭曲还是硬件的沦丧？ 走进科学带你了解Greys, Java线上问题诊断工具。</p><h2 id="alipay-SoloPi"><a href="#alipay-SoloPi" class="headerlink" title="alipay/SoloPi"></a>alipay/SoloPi</h2><p>项目地址: <a href="https://github.com/alipay/SoloPi" target="_blank" rel="noopener">alipay/SoloPi</a></p><blockquote><p><code>SoloPi</code>是一个无线化、非侵入式的<code>Android</code>自动化工具，公测版拥有录制回放、性能测试、一机多控三项主要功能，能为测试开发人员节省宝贵时间。</p></blockquote><p>录制回放</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/replay.gif" alt></p><p>性能工具</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/performance.gif" alt></p><p>一机多控</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/alipay/SoloPi@/master/assets/oneToMany.gif" alt></p><h2 id="AbrahamCaiJin-CommonUtilLibrary"><a href="#AbrahamCaiJin-CommonUtilLibrary" class="headerlink" title="AbrahamCaiJin/CommonUtilLibrary"></a>AbrahamCaiJin/CommonUtilLibrary</h2><p>项目地址: <a href="https://github.com/AbrahamCaiJin/CommonUtilLibrary" target="_blank" rel="noopener">AbrahamCaiJin/CommonUtilLibrary</a></p><blockquote><p>快速开发工具类收集，史上最全的开发工具类,欢迎Follow、Fork、Star</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些实用的Github项目(Java篇)</title>
      <link href="/post/awesome-java-github-project.html"/>
      <url>/post/awesome-java-github-project.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="zhoutaoo-SpringCloud"><a href="#zhoutaoo-SpringCloud" class="headerlink" title="zhoutaoo/SpringCloud"></a>zhoutaoo/SpringCloud</h2><p>项目地址:<a href="https://github.com/zhoutaoo/SpringCloud" target="_blank" rel="noopener">zhoutaoo/SpringCloud</a></p><blockquote><p>基于<code>SpringCloud2.1</code>的微服务开发脚手架，整合了<code>spring-security-oauth2</code>、<code>nacos</code>、<code>feign</code>、<code>sentinel</code>、<code>springcloud-gateway</code>等。<br>服务治理方面引入<code>elasticsearch</code>、<code>skywalking</code>、<code>springboot-admin</code>、<code>zipkin</code>等，让项目开发快速进入业务开发，而不需过多时间花费在架构搭建上。</p></blockquote><blockquote><p>用户管理</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qyprazej32l618wamj.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>角色管理</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qzh3mr8j32la17w7g1.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>服务容错</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6qzvum8oj32la1audrh.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>API文档</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6r0rqi94j32l81gsgxd.jpg" alt referrerpolicy="no-referrer"></p><blockquote><p>组织架构管理</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga6r14nnv4j32la18cqba.jpg" alt referrerpolicy="no-referrer"></p><h2 id="macrozheng-mall"><a href="#macrozheng-mall" class="headerlink" title="macrozheng/mall"></a>macrozheng/mall</h2><blockquote><p><code>mall</code>项目是一套电商系统，包括前台商城系统及后台管理系统，基于<code>SpringBoot</code>+<code>MyBatis</code>实现，采用<code>Docker</code>容器化部署。<br>前台商城系统包含首页门户、商品推荐、商品搜索、商品展示、购物车、订单流程、会员中心、客户服务、帮助中心等模块。<br>后台管理系统包含商品管理、订单管理、会员管理、促销管理、运营管理、内容管理、统计报表、财务管理、权限管理、设置等模块。</p></blockquote><p>项目地址:<a href="https://github.com/macrozheng/mall" target="_blank" rel="noopener">macrozheng/mall</a></p><blockquote><p>后台管理系统</p></blockquote><p>前端项目<code>mall-admin-web</code>地址: <a href="https://github.com/macrozheng/mall-admin-web" target="_blank" rel="noopener">https://github.com/macrozheng/mall-admin-web</a><br>项目演示地址： <a href="http://www.macrozheng.com/admin/index.html" target="_blank" rel="noopener">http://www.macrozheng.com/admin/index.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/macrozheng/mall@master/document/resource/mall-admin.gif" alt></p><blockquote><p>前台商城系统</p></blockquote><p>前端项目<code>mall-app-web</code>地址：敬请期待……<br>项目演示地址：<a href="http://www.macrozheng.com/app/index.html" target="_blank" rel="noopener">http://www.macrozheng.com/app/index.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/macrozheng/mall@master/document/resource/mall-app.gif" alt></p><h2 id="shuzheng-zheng"><a href="#shuzheng-zheng" class="headerlink" title="shuzheng/zheng"></a>shuzheng/zheng</h2><blockquote><p>基于<code>Spring</code>+<code>SpringMVC</code>+<code>Mybatis</code>分布式敏捷开发系统架构，提供整套公共微服务服务模块：集中权限管理（单点登录）、<br>内容管理、支付中心、用户管理（支持第三方登录）、微信平台、存储系统、配置中心、日志分析、任务和通知等，支持服务治理、<br>监控和追踪，努力为中小型企业打造全方位J2EE企业级开发解决方案。 <a href="http://47.93.195.63/zheng-upms-server" target="_blank" rel="noopener">http://47.93.195.63/zheng-upms-server</a></p></blockquote><p>演示地址： <a href="http://upms.zhangshuzheng.cn/" target="_blank" rel="noopener">http://upms.zhangshuzheng.cn/</a></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/idea.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-login.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-upms.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/zheng-cms.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/shuzheng/zheng@master/project-bootstrap/api.png" alt></p><h2 id="lenve-vhr"><a href="#lenve-vhr" class="headerlink" title="lenve/vhr"></a>lenve/vhr</h2><p>项目地址: <a href="https://github.com/lenve/vhr" target="_blank" rel="noopener">lenve/vhr</a></p><blockquote><p>微人事是一个前后端分离的人力资源管理系统，项目采用<code>SpringBoot</code>+<code>Vue</code>开发。</p></blockquote><p>首先，不同的用户在登录成功之后，根据不同的角色，会看到不同的系统菜单，完整菜单如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1gabdlfb22zj311t0ikweq.jpg" alt referrerpolicy="no-referrer"></p><p>不同用户登录上来之后，可能看到的会有差异，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7kt2xa26j311v06sweh.jpg" alt referrerpolicy="no-referrer"></p><p>每个用户的角色是由系统管理员进行分配的，系统管理员给用户分配角色的页面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7ktvqjtej311l0idgnn.jpg" alt referrerpolicy="no-referrer"></p><p>系统管理员也可以管理不同角色可以操作的资源，页面如下：</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ws1.sinaimg.cn/large/0065JV1Hgy1ga7kud2187j311k0ia74z.jpg" alt referrerpolicy="no-referrer"></p><h2 id="halo-dev-halo"><a href="#halo-dev-halo" class="headerlink" title="halo-dev/halo"></a>halo-dev/halo</h2><p>项目地址: <a href="https://github.com/halo-dev/halo" target="_blank" rel="noopener">halo-dev/halo</a></p><blockquote><p>✍ Halo 一款现代化的个人独立博客系统 <a href="https://halo.run" target="_blank" rel="noopener">https://halo.run</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/OQtKEWcCe8xYBph.png" alt="theme-anatole.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/F6CjZKJX1N2x5dU.png" alt="theme-walker.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/4lO2wNCLiqyIJmR.png" alt="theme-icarus.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/q4t86cCPUEwlGMn.png" alt="theme-destiny.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/Iu1eMzZDg6frw97.png" alt="install.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/3CahVJAvXngwiQu.png" alt="admin-login.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/G5R6bOweYoiZKEv.png" alt="admin-dashboard.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/uMHSeIkmC4iPzfJ.png" alt="admin-posts.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/ucDh2tOZLJGTyHX.png" alt="admin-post-edit.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/UwC3ecsRpAMONgq.png" alt="admin-post-publish.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/bxmJ7OTirtvV4Gs.png" alt="admin-post-settings.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/B5UlX6vAgZ3bzaJ.png" alt="admin-attachment.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/mMageUXv5EDpfJQ.png" alt="admin-profile.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/FVA953Ljswd4c8G.png" alt="admin-themes.png"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/09/11/TK6SeMdVj1xcrDw.png" alt="admin-options.png"></p><h2 id="linlinjava-litemall"><a href="#linlinjava-litemall" class="headerlink" title="linlinjava/litemall"></a>linlinjava/litemall</h2><p>项目地址: <a href="https://github.com/linlinjava/litemall" target="_blank" rel="noopener">linlinjava/litemall</a></p><blockquote><p>又一个小商城。<code>litemall</code> = <code>Spring Boot</code>后端 + <code>Vue</code>管理员前端 + 微信小程序用户前端 + <code>Vue</code>用户移动端</p></blockquote><p>小商场实例</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/linlinjava/litemall@master/doc/pic/renard_wx_demo.png" alt></p><p>管理后台实例</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/linlinjava/litemall@master/doc/pic/4.png" alt></p><h2 id="zhangdaiscott-jeecg-boot"><a href="#zhangdaiscott-jeecg-boot" class="headerlink" title="zhangdaiscott/jeecg-boot"></a>zhangdaiscott/jeecg-boot</h2><p>项目地址: <a href="https://github.com/zhangdaiscott/jeecg-boot" target="_blank" rel="noopener">zhangdaiscott/jeecg-boot</a></p><blockquote><p>一款基于代码生成器的JAVA快速开发平台(低代码开发平台)，开源界“小普元”超越传统商业企业级开发平台！<br>采用前后端分离架构：<code>SpringBoot 2.x</code>，<code>Ant Design&amp;Vue</code>，<code>Mybatis-plus</code>，<code>Shiro</code>，<code>JWT</code>。<br>强大的代码生成器让前后端代码一键生成，无需写任何代码! 引领新的开发模式(OnlineCoding模式-&gt; 代码生成器模式-&gt; 手工MERGE智能开发)，<br>帮助Java项目解决70%的重复工作，让开发更多关注业务逻辑。既能快速提高开发效率，帮助公司节省成本，同时又不失灵活性。<br><code>JeecgBoot</code>还独创在线开发模式（No代码）：在线表单配置（表单设计器）、移动配置能力、在线工作流配置（流程设计器）、在线报表配置、在线图表配置、插件能力（可插拔）等等</p></blockquote><blockquote><p>系统效果</p></blockquote><p>PC端</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14155402_AmlV.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/ba807921197596ba56f495d4b22ee3280ca.jpg" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160657_cHwb.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160813_KmXS.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160935_Nibs.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14161004_bxQ4.png" alt></p><p>在线接口文档</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201908/27095258_M2Xq.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160957_hN3X.png" alt></p><p>报表<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160828_pkFr.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160834_Lo23.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160842_QK7B.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160849_GBm5.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160858_6RAM.png" alt></p><p>流程<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160623_8fwk.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160917_9Ftz.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201904/14160633_u59G.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://static.oschina.net/uploads/img/201907/05165142_yyQ7.png" alt></p><p>手机端<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/da543c5d0d57baab0cecaa4670c8b68c521.jpg" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/fda4bd82cab9d682de1c1fbf2060bf14fa6.jpg" alt></p><p>PAD端<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/e90fef970a8c33790ab03ffd6c4c7cec225.jpg" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/d78218803a9e856a0aa82b45efc49849a0c.jpg" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/0404054d9a12647ef6f82cf9cfb80a5ac02.jpg" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://oscimg.oschina.net/oscnet/59c23b230f52384e588ee16309b44fa20de.jpg" alt></p><h2 id="paascloud-paascloud-master"><a href="#paascloud-paascloud-master" class="headerlink" title="paascloud/paascloud-master"></a>paascloud/paascloud-master</h2><p>项目地址: <a href="https://github.com/paascloud/paascloud-master" target="_blank" rel="noopener">paascloud/paascloud-master</a></p><blockquote><p><code>spring cloud</code> + <code>vue</code> + <code>oAuth2.0</code>全家桶实战，前后端分离模拟商城，完整的购物流程、后端运营平台，可以实现快速搭建企业级微服务项目。<br>支持微信登录等三方登录。<a href="http://www.paascloud.net" target="_blank" rel="noopener">http://www.paascloud.net</a></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">功能点：</span><br><span class="line">    模拟商城，完整的购物流程、后端运营平台对前端业务的支撑，和对项目的运维，有各项的监控指标和运维指标。</span><br><span class="line">技术点：</span><br><span class="line">       核心技术为springcloud+vue两个全家桶实现，采取了取自开源用于开源的目标，所以能用开源绝不用收费框架，整体技术栈只有</span><br><span class="line">    阿里云短信服务是收费的，都是目前java前瞻性的框架，可以为中小企业解决微服务架构难题，可以帮助企业快速建站。由于服务</span><br><span class="line">    器成本较高，尽量降低开发成本的原则，本项目由10个后端项目和3个前端项目共同组成。真正实现了基于RBAC、jwt和oauth2的</span><br><span class="line">    无状态统一权限认证的解决方案，实现了异常和日志的统一管理，实现了MQ落地保证100%到达的解决方案。</span><br><span class="line"></span><br><span class="line">核心框架：springcloud Edgware全家桶</span><br><span class="line">安全框架：Spring Security Spring Cloud Oauth2</span><br><span class="line">分布式任务调度：elastic-job</span><br><span class="line">持久层框架：MyBatis、通用Mapper4、Mybatis_PageHelper</span><br><span class="line">数据库连接池：Alibaba Druid</span><br><span class="line">日志管理：Logback前端框架：Vue全家桶以及相关组件</span><br><span class="line">三方服务： 邮件服务、阿里云短信服务、七牛云文件服务、钉钉机器人服务、高德地图API</span><br></pre></td></tr></table></figure></div><h2 id="hs-web-hsweb-framework"><a href="#hs-web-hsweb-framework" class="headerlink" title="hs-web/hsweb-framework"></a>hs-web/hsweb-framework</h2><p>项目地址: <a href="https://github.com/hs-web/hsweb-framework" target="_blank" rel="noopener">hs-web/hsweb-framework</a></p><blockquote><p>hsweb (haʊs wɛb) 是一个用于快速搭建企业后台管理系统的基础项目,集成一揽子便捷功能如:便捷的通用增删改查,强大的权限管理,动态多数据源,动态表单,在线数据库维护等. 基于 <code>spring-boot</code>,<code>mybaits</code>. <a href="http://framework.hsweb.io" target="_blank" rel="noopener">http://framework.hsweb.io</a></p></blockquote><p>应用场景</p><ol><li>完全开源的后台管理系统.</li><li>细粒度(按钮,行,列)权限控制的后台管理系统.</li><li>模块化的后台管理系统.</li><li>功能可拓展的后台管理系统.</li><li>集成各种常用功能的后台管理系统.</li><li>前后分离的后台管理系统.</li></ol><h2 id="justauth-JustAuth"><a href="#justauth-JustAuth" class="headerlink" title="justauth/JustAuth"></a>justauth/JustAuth</h2><p>项目地址: <a href="https://github.com/justauth/JustAuth" target="_blank" rel="noopener">justauth/JustAuth</a></p><blockquote><p>💯 史上最全的整合第三方登录的开源库。目前已支持<code>Github</code>、<code>Gitee</code>、<code>微博</code>、<code>钉钉</code>、<code>百度</code>、<code>Coding</code>、<code>腾讯云开发者平台</code>、<code>OSChina</code>、<code>支付宝</code>、<code>QQ</code>、<code>微信</code>、<code>淘宝</code>、<code>Google</code>、<code>Facebook</code>、<code>抖音</code>、<code>领英</code>、<code>小米</code>、<code>微软</code>、<code>今日头条</code>、<code>Teambition</code>、<code>StackOverflow</code>、<code>Pinterest</code>、<code>人人</code>、<code>华为</code>、<code>企业微信</code>、<code>酷家乐</code>、<code>Gitlab</code>、<code>美团</code>、<code>饿了么</code>和<code>推特</code>等第三方平台的授权登录。 Login, so easy! <a href="https://docs.justauth.whnb.wang" target="_blank" rel="noopener">https://docs.justauth.whnb.wang</a></p></blockquote><p>支持的平台:</p><center><table><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/gitee.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/github.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/weibo.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/dingtalk.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/baidu.png" width="20"></td></tr><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/coding.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/tencentCloud.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/oschina.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/alipay.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/qq.png" width="20"></td></tr><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/wechat.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/taobao.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/google.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/facebook.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/douyin.png" width="20"></td></tr><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/linkedin.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/microsoft.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/mi.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/toutiao.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/teambition.png" width="20"></td></tr><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/renren.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/pinterest.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/stackoverflow.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/huawei.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/csdn.png" width="20"></td></tr><tr><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/kujiale.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/gitlab.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/meituan.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/eleme.png" width="20"></td><td align="center" width="200"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://gitee.com/yadong.zhang/static/raw/master/JustAuth/twitter.png" width="20"></td></tr></table><center><a href="https://docs.justauth.whnb.wang/#/?id=%E5%B7%B2%E9%9B%86%E6%88%90%E7%9A%84%E5%B9%B3%E5%8F%B0" target="_blank">查看更多</a></center></center><h2 id="lunez-eladmin"><a href="#lunez-eladmin" class="headerlink" title="lunez/eladmin"></a>lunez/eladmin</h2><p>项目地址: <a href="https://github.com/elunez/eladmin" target="_blank" rel="noopener">lunez/eladmin</a></p><blockquote><p>项目基于 <code>Spring Boot 2.1.0</code> 、 <code>Jpa</code>、 <code>Spring Security</code>、<code>redis</code>、<code>Vue</code>的前后端分离的后台管理系统，项目采用分模块开发方式， 权限控制采用 RBAC，支持数据字典与数据权限管理，支持一键生成前后端代码，支持动态路由 <a href="https://auauz.net" target="_blank" rel="noopener">https://auauz.net</a></p></blockquote><p>主要特性</p><ul><li>使用最新技术栈，社区资源丰富。</li><li>项目按功能模块化，提升开发，测试效率。</li><li>高效率开发，使用代码生成器可以一键生成前后端代码</li><li>支持数据字典，可方便的对一些状态进行管理</li><li>支持接口限流，避免恶意请求导致服务层压力过大</li><li>支持接口级别的功能权限与数据权限，可自定义操作</li><li>自定义权限注解与匿名接口注解，可快速对某一接口拦截与放行</li><li>对一些常用的前端组件封装：表格数据请求、数据字典等</li><li>前后端统一异常拦截处理，统一输出异常，避免繁琐的判断</li></ul><p>系统功能</p><ul><li>用户管理：提供用户的相关配置，新增用户后，默认密码为123456</li><li>角色管理：对权限与菜单进行分配，可根据部门设置角色的数据权限</li><li>菜单管理：已实现菜单动态路由，后端可配置化，支持多级菜单</li><li>部门管理：可配置系统组织架构，树形表格展示</li><li>岗位管理：配置各个部门的职位</li><li>字典管理：可维护常用一些固定的数据，如：状态，性别等</li><li>操作日志：记录用户操作的日志</li><li>异常日志：记录异常日志，方便开发人员定位错误</li><li>SQL监控：采用druid 监控数据库访问性能，默认用户名admin，密码123456</li><li>定时任务：整合Quartz做定时任务，加入任务日志，任务运行情况一目了然</li><li>代码生成：高灵活度一键生成前后端代码，减少百分之80左右的工作任务</li><li>邮件工具：配合富文本，发送html格式的邮件</li><li>免费图床：使用sm.ms图床，用作公共图片上传使用，该图床不怎么稳定，不太建议使用</li><li>七牛云存储：可同步七牛云存储的数据到系统，无需登录七牛云直接操作云数据</li><li>支付宝支付：整合了支付宝支付并且提供了测试账号，可自行测试</li></ul><p>项目预览</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf77fa8144d68788.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf7763993e361778.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf7763971d453615.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf77632e85a60423.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf77632b4b090165.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf77639929277783.png" alt><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2019/05/18/5cdf78969adc389599.png" alt></p><h2 id="lihengming-spring-boot-api-project-seed"><a href="#lihengming-spring-boot-api-project-seed" class="headerlink" title="lihengming/spring-boot-api-project-seed"></a>lihengming/spring-boot-api-project-seed</h2><p>项目地址: <a href="https://github.com/lihengming/spring-boot-api-project-seed" target="_blank" rel="noopener">lihengming/spring-boot-api-project-seed</a></p><blockquote><p>🌱🚀一个基于<code>Spring Boot</code> &amp; <code>MyBatis</code>的种子项目，用于快速构建中小型<code>API</code>、<code>RESTful API</code>项目~</p></blockquote><p><code>Spring Boot API Project Seed</code> 是一个基于<code>Spring Boot</code> &amp;<code>MyBatis</code>的种子项目，用于快速构建中小型<code>API</code>、<code>RESTful API</code>项目，该种子项目已经有过多个真实项目的实践，稳定、简单、快速，使我们摆脱那些重复劳动，专注于业务代码的编写，减少加班。下面是一个简单的使用演示，看如何基于本项目在短短几十秒钟内实现一套简单的API，并运行提供服务。</p><p>特征&amp;提供</p><ul><li>最佳实践的项目结构、配置文件、精简的<code>POM</code>（[查看项目结构图](<a href="https://github.com/lihengming/java-codes/blob/master/shared-resources/github-images/project-struct.png）" target="_blank" rel="noopener">https://github.com/lihengming/java-codes/blob/master/shared-resources/github-images/project-struct.png）</a></li><li>统一响应结果封装及生成工具</li><li>统一异常处理</li><li>简单的接口签名认证</li><li>常用基础方法抽象封装</li><li>使用<code>Druid</code> <code>Spring Boot Starter</code> 集成<code>Drui</code>d数据库连接池与监控</li><li>使用<code>FastJsonHttpMessageConverter</code>，提高<code>JSON</code>序列化速度</li><li>集成<code>MyBatis</code>、通用<code>Mapper</code>插件、<code>PageHelper</code>分页插件，实现单表业务零<code>SQL</code></li><li>提供代码生成器根据表名生成对应的<code>Model</code>、<code>Mapper</code>、<code>MapperXML</code>、<code>Service</code>、<code>ServiceImpl</code>、<code>Controller</code>等基础代码，其中<code>Controller</code>模板默认提供<code>POST</code>和<code>RESTful</code>两套，根据需求在CodeGenerator.genController(tableName)方法中自己选择，默认使用POST模板。代码模板可根据实际项目的需求来扩展，由于每个公司业务都不太一样，所以只提供了一些比较基础、通用的模板，主要是提供一个思路来减少重复代码的编写，我在实际项目的使用中，其实根据公司业务的抽象编写了大量的模板。另外，使用模板也有助于保持团队代码风格的统一</li><li>另有彩蛋，待你探索</li></ul><h2 id="Exrick-xmall"><a href="#Exrick-xmall" class="headerlink" title="Exrick/xmall"></a>Exrick/xmall</h2><p>项目地址: <a href="https://github.com/Exrick/xmall" target="_blank" rel="noopener">Exrick/xmall</a></p><blockquote><p>基于<code>SOA</code>架构的分布式电商购物商城 前后端分离 前台商城:<code>Vue</code>全家桶 后台管理系统:<code>Dubbo</code>/<code>SSM</code>/<code>Elasticsearch</code>/<code>Redis</code>/<code>MySQL</code>/<code>ActiveMQ</code>/<code>Shiro</code>/<code>Zookeeper</code>等 <a href="http://xmall.exrick.cn" target="_blank" rel="noopener">http://xmall.exrick.cn</a></p></blockquote><p>在线Demo</p><p>前台商城：<a href="http://xmall.exrick.cn/" target="_blank" rel="noopener">http://xmall.exrick.cn/</a><br>后台管理系统：<a href="http://xmadmin.exrick.cn/" target="_blank" rel="noopener">http://xmadmin.exrick.cn/</a></p><blockquote><p>基于SOA架构的分布式购物电商商城</p></blockquote><ul><li><input checked disabled type="checkbox"> 后台管理系统：管理商品、订单、类目、商品规格属性、用户、权限、系统统计、系统日志以及前台内容等功能</li><li><input checked disabled type="checkbox"> 前台系统：用户可以在前台系统中进行注册、登录、浏览商品、首页、下单等操作</li><li><input checked disabled type="checkbox"> 会员系统：用户可以在该系统中查询已下的订单、管理订单、我的优惠券等信息</li><li><input checked disabled type="checkbox"> 订单系统：提供下单、查询订单、修改订单状态、定时处理订单</li><li><input checked disabled type="checkbox"> 搜索系统：提供商品的搜索功能</li><li><input checked disabled type="checkbox"> 单点登录系统：为多个系统之间提供用户登录凭证以及查询登录用户的信息</li></ul><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b5461099039e.jpg" alt title="后台首页"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b546125886ca.jpg" alt title="商品管理"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b54613bc866f.jpg" alt title="管理员编辑"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b54615b95788.jpg" alt title="前台首页"></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b5461756b2b0.jpg" alt title="ES分词搜索"></p><blockquote><p>项目架构及功能模块图</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b5461926969b.png" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b5461aa2fdee.jpg" alt></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://i.loli.net/2018/07/22/5b5461c54cb55.jpg" alt></p><h2 id="lenve-VBlog"><a href="#lenve-VBlog" class="headerlink" title="lenve/VBlog"></a>lenve/VBlog</h2><p>项目地址: <a href="https://github.com/lenve/VBlog" target="_blank" rel="noopener">lenve/VBlog</a></p><blockquote><p>V部落是一个多用户博客管理平台，采用<code>Vue</code>+<code>SpringBoot</code>开发。</p></blockquote><p>登陆页面</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/login.png" alt></p><p>文章列表</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/article.png" alt></p><p>发表文章</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/post.png" alt></p><p>用户管理</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/usermana.png" alt></p><p>栏目管理</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/category.png" alt></p><p>数据统计</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lenve/VBlog@master/doc/datastatistics.png" alt></p><h2 id="roncoo-roncoo-pay"><a href="#roncoo-roncoo-pay" class="headerlink" title="roncoo/roncoo-pay"></a>roncoo/roncoo-pay</h2><p>项目地址: <a href="https://github.com/roncoo/roncoo-pay" target="_blank" rel="noopener">roncoo/roncoo-pay</a></p><blockquote><p>龙果支付系统（roncoo-pay）是国内首款开源的互联网支付系统，拥有独立的账户体系、用户体系、支付接入体系、支付交易体系、对账清结算体系。目标是打造一款集成主流支付方式且轻量易用的支付收款系统，满足互联网业务系统打通支付通道实现支付收款和业务资金管理等功能。 <a href="https://pay.roncoo.net" target="_blank" rel="noopener">https://pay.roncoo.net</a></p></blockquote><p>主要特点：</p><blockquote><ol><li>有支付系统通用的支付通道接入、用户管理、资金账户管理、对账清算管理、支付订单管理等功能；</li><li>已接通支付宝支付和微信支付的多种支付方式，满足大部分企业业务系统的支付需求；</li><li>独立的支付网关接入系统，为下游商户或业务平台提供统一支付接入接口，轻松实现统一支付接入；</li><li>项目代码免费开源且定期更新维护，扩展自由、使用无忧；</li><li>配套完善的系统使用文档、部署文档、视频教程，学习使用更轻松；</li><li>拥有活跃的产品技术学习交流社群，学习交流更高效；</li><li>由专业的支付系统产品技术团队提供服务支持，专业性及持续性有保障；</li></ol></blockquote><h2 id="Exrick-xpay"><a href="#Exrick-xpay" class="headerlink" title="Exrick/xpay"></a>Exrick/xpay</h2><p>项目地址: <a href="https://github.com/Exrick/xpay" target="_blank" rel="noopener">Exrick/xpay</a></p><blockquote><p>XPay个人免签收款支付系统 完全免费 资金直接到达本人账号 支持 支付宝 微信 QQ 云闪付 无需备案 无需签约 无需挂机监控APP 无需插件 无需第三方支付SDK 无需营业执照身份证 只需收款码 搞定支付流程 现已支持移动端支付 <a href="http://xpay.exrick.cn/" target="_blank" rel="noopener">http://xpay.exrick.cn/</a></p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Opencv 开源项目</title>
      <link href="/post/opencv-opensource.html"/>
      <url>/post/opencv-opensource.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="Roujack-mathAI"><a href="#Roujack-mathAI" class="headerlink" title="Roujack/mathAI"></a>Roujack/mathAI</h2><blockquote><p>一个拍照做题程序。输入一张包含数学计算题的图片，输出识别出的数学计算式以及计算结果。This is a mathematic expression recognition project.</p></blockquote><p><a href="https://github.com/Roujack/mathAI" target="_blank" rel="noopener">mathAI</a></p><p>一个拍照做题程序。输入一张包含数学计算题的图片，输出识别出的数学计算式以及计算结果。<br><strong>请查看系统文档说明来运行程序。注意，这是一个半开源的项目，目前上传的版本只能处理简单的一维加减乘除算术表达式（如果想要识别更加复杂的表达式，可以参考数学公式识别的论文）。可以参考的代码是前面字符识别部分以及整个算法处理框架。</strong><br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Roujack/mathAI/test.png" alt></p><p>整个程序使用python实现，具体处理流程包括了图像预处理、字符识别、数学公式识别、数学公式语义理解、结果输出。</p><p>本程序使用opencv对输入的图像进行预处理，并将字符裁剪出来再归一化成固定大小的矩阵。我在TensorFlow上实现了一个lenet5<br>的卷积神经网络用来识别数学字符，训练使用CHROME数据集。对于数学公式的识别，主要是将识别出的独立的字符组织成计算机能够<br>理解的数学公式（这里的数学公式就是纯字符的可求解的数学计算题）。大概的方法是使用编译原理的算符优先法和递归下降法进行实现。<br>然后根据属性文法的值传递思想，将数学公式的值计算出来。最后使用python的matlibplot库把计算过程和答案打印出来。</p><p>优点：这是一整套拍照做题的算法框架，同时能够处理多种多样的计算题，目前市面上还没有看到实现。OCR技术如此成熟的今天字符识别<br>已经不算有挑战的东西了。<br>缺点：字符空间关系判断只用了人类启发式规则，图像预处理不够鲁棒，数学公式的结构识别算法不够完美（可以考虑使用二维文法来做）。<br>系统还有很大的提升空间。</p><p>这本来是一个很有野心的project，因为它试图解决所有的我们遇到的数学题。更一般的是，我试图实现一个演算系统，<br>在这个系统里，输入一些规则（公理），以及已知条件，我们希望它能够推出一些结论出来。但是我发现这是一个很难的问题。<br>最近的学习结论告诉我，一方面循环不变式的寻找无法自动化，另一方面演算的时间和空间复杂度太高（可以参考prolog语言的实现）。</p><p>什么是智能？是现在的机器学习吗？我觉得不像。SVM是最大化函数间隔的算法，神经网络是寻找损失函数局部最优解的过程。这些技术只是数学层面的优化。<br>还是某种推理能力？我不知道。如果给它一些演算规则，和一些具有现实意义的符号，再加上一些公理，它能够演算出一些结论，这个结论具有现实意义，<br>是不是就意味着智能？我觉着是的，不过很难实现。据说吴文俊采用了自动化的方法证明了几何定理（吴方法）。</p><p>我们的意识或者思维到底是什么东西？信息在大脑里面到底是如何表示的？我们为什么具有泛华的学习能力？一方面脑认知科学在求索，一方面计算科学也在求索。<br>我希望意识是能够认识物质的，并在最终达到越来越完美的过程。这才是科研的意义。我愿一直去寻找真理。</p><h2 id="oarriaga-face-classification"><a href="#oarriaga-face-classification" class="headerlink" title="oarriaga/face_classification"></a>oarriaga/face_classification</h2><blockquote><p>Real-time face detection and emotion/gender classification using fer2013/imdb datasets with a keras CNN model and openCV.</p></blockquote><p>一个实时人脸检测,表情/性别分析</p><p><a href="https://github.com/oarriaga/face_classification" target="_blank" rel="noopener">face_classification</a></p><h3 id="Face-classification-and-detection"><a href="#Face-classification-and-detection" class="headerlink" title="Face classification and detection."></a>Face classification and detection.</h3><p>Real-time face detection and emotion/gender classification using fer2013/IMDB datasets with a keras CNN model and openCV.</p><ul><li>IMDB gender classification test accuracy: 96%.</li><li>fer2013 emotion classification test accuracy: 66%.</li></ul><p>For more information please consult the <a href="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/report.pdf" target="_blank" rel="noopener">publication</a></p><h3 id="Emotion-gender-examples"><a href="#Emotion-gender-examples" class="headerlink" title="Emotion/gender examples:"></a>Emotion/gender examples:</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/demo_results.png" alt></p><p>Guided back-prop<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/gradcam_results.png" alt></p><p>Real-time demo:</p><div align="center"><img src="https://github.com/oarriaga/face_classification/raw/master/images/color_demo.gif" width="400px"></div><p><a href="https://mas-group.inf.h-brs.de/?page_id=622" target="_blank" rel="noopener">B-IT-BOTS</a> robotics team :)<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/oarriaga/face_classification@master/images/robocup_team.png" alt></p><h4 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h4><h5 id="Run-real-time-emotion-demo"><a href="#Run-real-time-emotion-demo" class="headerlink" title="Run real-time emotion demo:"></a>Run real-time emotion demo:</h5><blockquote><p>python3 video_emotion_color_demo.py</p></blockquote><h5 id="Run-real-time-guided-back-prop-demo"><a href="#Run-real-time-guided-back-prop-demo" class="headerlink" title="Run real-time guided back-prop demo:"></a>Run real-time guided back-prop demo:</h5><blockquote><p>python3 image_gradcam_demo.py</p></blockquote><h5 id="Make-inference-on-single-images"><a href="#Make-inference-on-single-images" class="headerlink" title="Make inference on single images:"></a>Make inference on single images:</h5><blockquote><p>python3 image_emotion_gender_demo.py<image_path></image_path></p></blockquote><p>e.g.</p><blockquote><p>python3 image_emotion_gender_demo.py ../images/test_image.jpg</p></blockquote><h5 id="Running-with-Docker"><a href="#Running-with-Docker" class="headerlink" title="Running with Docker"></a>Running with Docker</h5><p>With a few steps one can get its own face classification and detection running. Follow the commands below:</p><ul><li><code>docker pull ekholabs/face-classifier</code></li><li><code>docker run -d -p 8084:8084 --name=face-classifier ekholabs/face-classifier</code></li><li><code>curl -v -F image=@[path_to_image] http://localhost:8084/classifyImage &gt; image.png</code></li></ul><h5 id="To-train-previous-new-models-for-emotion-classification"><a href="#To-train-previous-new-models-for-emotion-classification" class="headerlink" title="To train previous/new models for emotion classification:"></a>To train previous/new models for emotion classification:</h5><ul><li><p>Download the fer2013.tar.gz file from <a href="https://www.kaggle.com/c/challenges-in-representation-learning-facial-expression-recognition-challenge/data" target="_blank" rel="noopener">here</a></p></li><li><p>Move the downloaded file to the datasets directory inside this repository.</p></li><li><p>Untar the file:</p><blockquote><p>tar -xzf fer2013.tar</p></blockquote></li><li><p>Run the train_emotion_classification.py file</p><blockquote><p>python3 train_emotion_classifier.py</p></blockquote></li></ul><h5 id="To-train-previous-new-models-for-gender-classification"><a href="#To-train-previous-new-models-for-gender-classification" class="headerlink" title="To train previous/new models for gender classification:"></a>To train previous/new models for gender classification:</h5><ul><li><p>Download the imdb_crop.tar file from <a href="https://data.vision.ee.ethz.ch/cvl/rrothe/imdb-wiki/" target="_blank" rel="noopener">here</a> (It’s the 7GB button with the tittle Download faces only).</p></li><li><p>Move the downloaded file to the datasets directory inside this repository.</p></li><li><p>Untar the file:</p><blockquote><p>tar -xfv imdb_crop.tar</p></blockquote></li><li><p>Run the train_gender_classification.py file</p><blockquote><p>python3 train_gender_classifier.py</p></blockquote></li></ul><h2 id="Fingers-Detection-using-OpenCV-and-Python"><a href="#Fingers-Detection-using-OpenCV-and-Python" class="headerlink" title="Fingers-Detection-using-OpenCV-and-Python"></a>Fingers-Detection-using-OpenCV-and-Python</h2><blockquote><p>A simple Fingers Detection (or Gesture Recognition) using OpenCV and Python with background substraction 简单手势识别</p></blockquote><p><a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python" target="_blank" rel="noopener">Fingers-Detection-using-OpenCV-and-Python</a></p><blockquote><p>for people using python2 and opencv2, please check out the <a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python/tree/py2_opencv2" target="_blank" rel="noopener"><code>lzane:py2_opencv2</code></a> branch.</p></blockquote><blockquote><p>for people using opencv4, please change line 96 in the <code>new.py</code> to <code>contours, hierarchy = cv2.findContours(thresh1, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)</code> according to the <a href="https://github.com/lzane/Fingers-Detection-using-OpenCV-and-Python/issues/7#issuecomment-509925971" target="_blank" rel="noopener">opencv api change</a>.</p></blockquote><h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><ul><li>OS: MacOS El Capitan</li><li>Platform: Python 3</li><li>Librarys:<ul><li>OpenCV 3</li><li>appscript</li></ul></li></ul><h3 id="Demo-Videos"><a href="#Demo-Videos" class="headerlink" title="Demo Videos"></a>Demo Videos</h3><ul><li>Youtube: <a href="https://youtu.be/CmBxUnp7XwM" target="_blank" rel="noopener">Click here</a></li><li>Youku: <a href="http://v.youku.com/v_show/id_XMTc3MjI4MjQwOA==.html" target="_blank" rel="noopener">Click here</a></li></ul><h3 id="How-to-run-it"><a href="#How-to-run-it" class="headerlink" title="How to run it?"></a>How to run it?</h3><ul><li>run it in python</li><li>press <code>&#39;b&#39;</code> to capture the background model (Remember to move your hand out of the blue rectangle)</li><li>press <code>&#39;r&#39;</code> to reset the backgroud model</li><li>press <code>&#39;ESC&#39;</code> to exit</li></ul><h3 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h3><h4 id="Capture-original-image"><a href="#Capture-original-image" class="headerlink" title="Capture original image"></a>Capture original image</h4><p>Capture video from camera and pick up a frame.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508814843.png" alt="Alt text"></p><h4 id="Capture-background-model-amp-Background-subtraction"><a href="#Capture-background-model-amp-Background-subtraction" class="headerlink" title="Capture background model &amp; Background subtraction"></a>Capture background model &amp; Background subtraction</h4><p>Use background subtraction method called <strong>Gaussian Mixture-based Background/Foreground Segmentation Algorithm</strong> to subtract background.</p><p>For more information about the method, check <a href="http://www.zoranz.net/Publications/zivkovic2004ICPR.pdf" target="_blank" rel="noopener">Zivkovic2004</a></p><p>Here I use the OpenCV’s built-in function <code>BackgroundSubtractorMOG2</code> to subtract background.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bgModel = cv2.BackgroundSubtractorMOG2(<span class="number">0</span>, bgSubThreshold)</span><br></pre></td></tr></table></figure></div><p>Build a background subtractor model</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fgmask = bgModel.apply(frame)</span><br></pre></td></tr></table></figure></div><p>Apply the model to a frame</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = cv2.bitwise_and(frame, frame, mask=fgmask)</span><br></pre></td></tr></table></figure></div><p>Get the foreground(hand) image</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508613267.png" alt="Alt text"></p><h4 id="Gaussian-blur-amp-Threshold"><a href="#Gaussian-blur-amp-Threshold" class="headerlink" title="Gaussian blur &amp; Threshold"></a>Gaussian blur &amp; Threshold</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br></pre></td></tr></table></figure></div><p>First convert the image to gray scale.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blur = cv2.GaussianBlur(gray, (blurValue, blurValue), <span class="number">0</span>)</span><br></pre></td></tr></table></figure></div><p>By Gaussian blurring, we create smooth transition from one color to another and reduce the edge content.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508640877.png" alt="Alt text"></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ret, thresh = cv2.threshold(blur, threshold, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br></pre></td></tr></table></figure></div><p>We use thresholding to create binary images from grayscale images.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508661044.png" alt="Alt text"></p><h4 id="Contour-amp-Hull-amp-Convexity"><a href="#Contour-amp-Hull-amp-Convexity" class="headerlink" title="Contour &amp; Hull &amp; Convexity"></a>Contour &amp; Hull &amp; Convexity</h4><p>We now need to find out the hand contour from the binary image we created before and detect fingers (or in other words, recognize gestures)</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">contours, hierarchy = cv2.findContours(thresh1, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)</span><br></pre></td></tr></table></figure></div><p>This function will find all the contours from the binary image. We need to get the biggest contours (our hand) based on their area since we can assume that our hand will be the biggest contour in this situation. (it’s obvious)</p><p>After picking up our hand, we can create its hull and detect the defects by calling :</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hull = cv2.convexHull(res)</span><br><span class="line">defects = cv2.convexityDefects(res, hull)</span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474508788185.png" alt="Alt text"></p><p>Now we have the number of fingers. How to use this information? It’s based on your imagination…</p><p>I add in a keyboard simulation package named <strong>appscript</strong> as interface to control Chrome’s dinosaur game.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/lzane/Fingers-Detection-using-OpenCV-and-Python@master/material/-1474522195081.png" alt="Alt text"></p><hr><h3 id="References-amp-Tutorials"><a href="#References-amp-Tutorials" class="headerlink" title="References &amp; Tutorials"></a>References &amp; Tutorials</h3><ol><li>OpenCV documentation:<br><a href="http://docs.opencv.org/2.4.13/" target="_blank" rel="noopener">http://docs.opencv.org/2.4.13/</a></li><li>Opencv python hand gesture recognition:<br><a href="http://creat-tabu.blogspot.com/2013/08/opencv-python-hand-gesture-recognition.html" target="_blank" rel="noopener">http://creat-tabu.blogspot.com/2013/08/opencv-python-hand-gesture-recognition.html</a></li><li>Mahaveerverma’s hand gesture recognition project:<br><a href="https://github.com/mahaveerverma/hand-gesture-recognition-opencv" target="_blank" rel="noopener">hand-gesture-recognition-opencv</a></li></ol><h2 id="Kr1s77-flask-video-streaming-recorder"><a href="#Kr1s77-flask-video-streaming-recorder" class="headerlink" title="Kr1s77/flask-video-streaming-recorder"></a>Kr1s77/flask-video-streaming-recorder</h2><blockquote><p>opencv+flask 家庭监控系统(surveillance_system)</p></blockquote><p><span align="center"><code>Raspberry Pi flask+opencv Surveillance System</code></span></p><br><p align="center"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/CriseLYJ/flask-video-streaming-recorder@master/img/main.jpg" alt="Master"></p><br><p align="center">"<i>Did you know all your doors were locked?</i>" - Riddick (The Chronicles of Riddick)</p><br><p align="center"><a href="https://github.com/CriseLYJ/flask-video-streaming-recorder/tree/master" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Branch-master-green.svg?longCache=true" alt="Branch"> </a><a href="https://github.com/CriseLYJ/flask-video-streaming-recorder/pulls" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?longCache=true" alt="Pull Requests"> </a><a href="http://www.gnu.org/licenses/" target="_blank" rel="noopener"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/License-GNU-blue.svg?longCache=true" alt="License"></a></p><div align="center"><sub>Created by <a href="https://criselyj.github.io/" target="_blank" rel="noopener">CriseLYJ</a></sub></div><br><hr><h3 id="Installing"><a href="#Installing" class="headerlink" title="Installing"></a>Installing</h3><h4 id="🐍First-you-should-install-Python3-x-on-your-Raspberry-Pi"><a href="#🐍First-you-should-install-Python3-x-on-your-Raspberry-Pi" class="headerlink" title="🐍First you should install Python3.x on your Raspberry Pi"></a>🐍First you should install <code>Python3.x</code> on your Raspberry Pi</h4><blockquote><p>$ sudo apt-get update<br>$ sudo apt-get upgrade</p></blockquote><ul><li>Install python<code>dependent environment</code></li><li>install python <code>Dependent environment</code></li></ul><blockquote><p>$ sudo apt-get install build-essential libsqlite3-dev sqlite3 bzip2 libbz2-dev</p></blockquote><ul><li>Download the python3.6 version source and extract it</li><li>Download the python version 3.6 source code and decompress it</li></ul><blockquote><pre><code>$ wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz$ tar zxvf Python-3.6.1.tgz</code></pre></blockquote><ul><li>Compilation and installation</li></ul><blockquote><pre><code>$ cd Python-3.6.1$ sudo ./configure$ sudo make$ sudo make install</code></pre></blockquote><ul><li>Check installation</li></ul><blockquote><pre><code>$ ls -al /usr/local/bin/python*</code></pre></blockquote><h4 id="Next-install-the-module"><a href="#Next-install-the-module" class="headerlink" title="Next install the module"></a>Next install the module</h4><ul><li>Install flask</li></ul><blockquote><pre><code>$ pip3 install flask==0.10.1</code></pre></blockquote><ul><li>Install opencv</li><li>install opencv</li></ul><blockquote><p>$ pip3 install opencv_python</p></blockquote><h3 id="Running-the-tests"><a href="#Running-the-tests" class="headerlink" title="Running the tests"></a>Running the tests</h3><ul><li>Download all files to run</li><li>run main.py</li></ul><blockquote><pre><code>$ python3 main.py -p 0.0.0.0</code></pre><p>当然你也可以使用Gunicorn来当做你的多线程服务器</p></blockquote><ul><li><p>2019.2.21 update</p></li><li><p>Increased login, a simple login interface, does not need a database</p></li><li><p>Test account</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Username:  admin</span><br><span class="line">Password:  admin</span><br></pre></td></tr></table></figure></div></li><li><p>2019.3.4 update</p></li><li><p>Add multi-threading and recording downloads</p></li><li><p>Support multi-device access, logout login is normal</p></li><li><p>2019.3.14 update</p></li><li><p>现在的目录结构是这个样子</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/tree.png" alt></p></li></ul><ul><li><p>抽取了代码，进行了优化，就是这样目录看起来会很多</p><ul><li><p>Added a beautiful login interface<br><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/login.png" alt="Alt text"></p></li><li><p>Optimization homepage</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/index.jpg" alt="Alt text"></p><ul><li>Add video recording and download capabilities</li><li>Realized the <code>high performance</code>, using the yield generator, and multi-threading, silky smooth!</li></ul></li></ul><h3 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h3><ul><li>Crise LYJ</li></ul><h3 id="Acknowledgments"><a href="#Acknowledgments" class="headerlink" title="Acknowledgments"></a>Acknowledgments</h3><ul><li><p>Thanks for all!</p></li><li><p>Have a good time!</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Kr1s77/flask-video-streaming-recorder@master/img/hha.jpeg" alt="Alt text"></p></li></ul><h2 id="nuno-faria-tiler"><a href="#nuno-faria-tiler" class="headerlink" title="nuno-faria/tiler"></a>nuno-faria/tiler</h2><blockquote><p>👷 Build images with images</p></blockquote><p><a href="https://github.com/nuno-faria/tiler" target="_blank" rel="noopener">nuno-faria/tiler</a></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/title_stripes.png" alt="title"></p><p>👷 Build images with images.</p><h3 id="About"><a href="#About" class="headerlink" title="About"></a>About</h3><p>Tiler is a tool to create an image using all kinds of other smaller images (tiles). It is different from other mosaic tools since it can adapt to tiles with multiple shapes and sizes (i.e. not limited to squares).</p><p>An image can be built out of circles, lines, waves, cross stitches, legos, minecraft blocks, paper clips, letters, … The possibilities are endless!</p><h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><ul><li>Clone the repo: <code>git clone https://github.com/nuno-faria/tiler.git</code>;</li><li>Install Python 3;</li><li>Install pip (optional, to install the dependencies);</li><li>Install dependencies: <code>pip install -r requirements.txt</code></li></ul><h3 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h3><ul><li>Make a folder with the tiles (and only the tiles) to build the image;<ul><li>The script <code>gen_tiles.py</code> can help in this task; it builds tiles with multiple colors based on the source tile (note: its recommended for the source file to have an RGB color of (240,240,240)). It is used as <code>python gen_tiles.py path/to/image</code> and creates a folder with a ‘gen_’ prefix in the same path as the base image.</li></ul></li><li>Run <code>python tiler.py path/to/image path/to/tiles_folder/</code>.</li></ul><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>All configurations can be changed in the <code>conf.py</code> file.</p><h4 id="gen-tiles-py"><a href="#gen-tiles-py" class="headerlink" title="gen_tiles.py"></a><code>gen_tiles.py</code></h4><ul><li><code>DEPTH</code> - number of divisions in each color channel (ex: DEPTH = 4 -&gt; 4 * 4 * 4 = 64 colors);</li><li><code>ROTATIONS</code> - list of rotations, in degrees, to apply over the original image (ex: [0, 90]).</li></ul><h4 id="tiler-py"><a href="#tiler-py" class="headerlink" title="tiler.py"></a><code>tiler.py</code></h4><ul><li><code>COLOR_DEPTH</code> - number of divisions in each color channel (ex: COLOR_DEPTH = 4 -&gt; 4 * 4 * 4 = 64 colors);</li><li><code>RESIZING_SCALES</code> - scale to apply to each tile (ex: [1, 0.75, 0.5, 0.25]);</li><li><code>PIXEL_SHIFT</code> - number of pixels shifted to create each box (ex: (5,5)); if None, shift will be the same as the tile dimension); <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/pixel_shift.png" width="100%"></li><li><code>OVERLAP_TILES</code> - if tiles can overlap;</li><li><code>RENDER</code> - render image as its being built;</li><li><code>POOL_SIZE</code> - multiprocessing pool size;</li><li><code>IMAGE_TO_TILE</code> - image to tile (ignored if passed as the 1st arg);</li><li><code>TILES_FOLDER</code> - folder with tiles (ignored if passed as the 2nd arg);</li><li><code>OUT</code> - result image filename.</li></ul><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="Circles"><a href="#Circles" class="headerlink" title="Circles"></a>Circles</h4><h5 id="Various-sizes"><a href="#Various-sizes" class="headerlink" title="Various sizes"></a>Various sizes</h5><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_circles.png" width="40%"><p><a href="https://www.flaticon.com/free-icon/cake_1102780" target="_blank" rel="noopener">Original</a> cake image by <a href="https://www.flaticon.com/authors/pongsakornred" target="_blank" rel="noopener">pongsakornred</a> from <a href="https://www.flaticon.com" target="_blank" rel="noopener">FLATICON</a>.</p><h5 id="Fixed"><a href="#Fixed" class="headerlink" title="Fixed"></a>Fixed</h5><ul><li>10x10<img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_circles_simple.png" width="40%"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_10x10.png" width="100%"></li><li>25x25<img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_25x25.png" width="100%"></li><li>50x50<img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_circles_50x50.png" width="100%"></li></ul><h4 id="Paper-clips"><a href="#Paper-clips" class="headerlink" title="Paper clips"></a>Paper clips</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_clips.png" width="40%"><h4 id="Cross-stitch-times"><a href="#Cross-stitch-times" class="headerlink" title="Cross stitch (times)"></a>Cross stitch (times)</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_times.png" width="40%"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_times.png" width="100%"><h4 id="Hearts"><a href="#Hearts" class="headerlink" title="Hearts"></a>Hearts</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/heart_hearts.png" width="40%"><h4 id="Legos"><a href="#Legos" class="headerlink" title="Legos"></a>Legos</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_lego.png" width="40%"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_lego.png" width="100%"><h4 id="Minecraft-blocks"><a href="#Minecraft-blocks" class="headerlink" title="Minecraft blocks"></a>Minecraft blocks</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_minecraft.png" width="40%"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/starry_night_minecraft.png" width="100%"><h4 id="Stripes-lines"><a href="#Stripes-lines" class="headerlink" title="Stripes (lines)"></a>Stripes (lines)</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/cake_stripes.png" width="50%"><h4 id="At"><a href="#At" class="headerlink" title="At"></a>At</h4><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/nuno-faria/tiler@master/images/github_logo_at.png" width="50%"><h2 id="Hironsan-BossSensor"><a href="#Hironsan-BossSensor" class="headerlink" title="Hironsan/BossSensor"></a>Hironsan/BossSensor</h2><blockquote><p>Hide screen when boss is approaching.</p></blockquote><p><a href="https://github.com/Hironsan/BossSensor" target="_blank" rel="noopener">BossSensor</a></p><h3 id="BossSensor"><a href="#BossSensor" class="headerlink" title="BossSensor"></a>BossSensor</h3><p>Hide your screen when your boss is approaching.</p><h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><p>The boss stands up. He is approaching.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/standup.jpg" alt="standup"></p><p>When he is approaching, the program fetches face images and classifies the image.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/approach.jpg" alt="approaching"></p><p>If the image is classified as the Boss, it will monitor changes.</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor@master/resource_for_readme/editor.jpg" alt="editor"></p><h4 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h4><ul><li>WebCamera</li><li>Python3.5</li><li>OSX</li><li>Anaconda</li><li>Lots of images of your boss and other person image</li></ul><p>Put images into <a href="https://cdn.jsdelivr.net/gh/Hironsan/BossSensor/tree/master/data/boss" target="_blank" rel="noopener">data/boss</a> and <a href="https://github.com/Hironsan/BossSensor/tree/master/data/other" target="_blank" rel="noopener">data/other</a>.</p><h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><p>First, Train boss image.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python boss_train.py</span><br></pre></td></tr></table></figure></div><p>Second, start BossSensor.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python camera_reader.py</span><br></pre></td></tr></table></figure></div><h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><p>Install OpenCV, PyQt4, Anaconda.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">conda create -n venv python&#x3D;3.5</span><br><span class="line">source activate venv</span><br><span class="line">conda install -c https:&#x2F;&#x2F;conda.anaconda.org&#x2F;menpo opencv3</span><br><span class="line">conda install -c conda-forge tensorflow</span><br><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></div><p>Change Keras backend from Theano to TensorFlow.</p><h4 id="Licence"><a href="#Licence" class="headerlink" title="Licence"></a>Licence</h4><p><a href="https://github.com/Hironsan/BossSensor/blob/master/LICENSE" target="_blank" rel="noopener">MIT</a></p><h4 id="Author-1"><a href="#Author-1" class="headerlink" title="Author"></a>Author</h4><p><a href="https://github.com/Hironsan" target="_blank" rel="noopener">Hironsan</a></p><h2 id="vipstone-faceai"><a href="#vipstone-faceai" class="headerlink" title="vipstone/faceai"></a>vipstone/faceai</h2><blockquote><p>一款入门级的人脸、视频、文字检测以及识别的项目.</p></blockquote><p><a href="https://github.com/vipstone/faceai" target="_blank" rel="noopener">vipstone/faceai</a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ol><li>人脸检测、识别（图片、视频）</li><li>轮廓标识</li><li>头像合成（给人戴帽子）</li><li>数字化妆（画口红、眉毛、眼睛等）</li><li>性别识别</li><li>表情识别（生气、厌恶、恐惧、开心、难过、惊喜、平静等七种情绪）</li><li>视频对象提取</li><li>图片修复（可用于水印去除）</li><li>图片自动上色</li><li>眼动追踪（待完善）</li><li>换脸（待完善）</li></ol><p><strong>查看功能预览↓↓↓</strong></p><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ul><li>Windows 10（x64）</li><li>Python 3.6.4</li><li>OpenCV 3.4.1</li><li>Dlib 19.8.1</li><li>face_recognition 1.2.2</li><li>keras 2.1.6</li><li>tensorflow 1.8.0</li><li>Tesseract OCR 4.0.0-beta.1</li></ul><h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><p><a href="doc/settingup.md">OpenCV环境搭建</a></p><p><a href="doc/tesseractOCR.md">Tesseract OCR文字识别</a></p><p><a href="doc/detectionOpenCV.md">图片人脸检测（OpenCV版）</a></p><p><a href="doc/detectionDlib.md">图片人脸检测（Dlib版）</a></p><p><a href="doc/videoOpenCV.md">视频人脸检测（OpenCV版）</a></p><p><a href="doc/videoDlib.md">视频人脸检测（Dlib版）</a></p><p><a href="doc/faceRecognitionOutline.md">脸部轮廓绘制</a></p><p><a href="doc/faceRecognitionMakeup.md">数字化妆</a></p><p><a href="doc/faceRecognition.md">视频人脸识别</a></p><p><a href="doc/compose.md">头像特效合成</a></p><p><a href="doc/gender.md">性别识别</a></p><p><a href="doc/emotion.md">表情识别</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/hsv-opencv.md" target="_blank" rel="noopener">视频对象提取</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/inpaint.md" target="_blank" rel="noopener">图片修复</a></p><h3 id="其他教程"><a href="#其他教程" class="headerlink" title="其他教程"></a>其他教程</h3><p><a href="doc/ubuntuChange.md">Ubuntu apt-get和pip源更换</a></p><p><a href="doc/pipChange.md">pip/pip3更换国内源——Windows版</a></p><p><a href="doc/chinese.md">OpenCV添加中文</a></p><p><a href="https://github.com/vipstone/faceai/blob/master/doc/opencv/mouse.md" target="_blank" rel="noopener">使用鼠标绘图——OpenCV</a></p><h3 id="功能预览"><a href="#功能预览" class="headerlink" title="功能预览"></a>功能预览</h3><p><strong>绘制脸部轮廓</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/face_recognition-outline.png" width="250" height="300" alt="绘制脸部轮廓"><hr><p><strong>人脸68个关键点标识</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/dlib68.png" width="230" height="300" alt="人脸68个关键点标识"><hr><p><strong>头像特效合成</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/compose.png" width="200" height="300" alt="头像特效合成"><hr><p><strong>性别识别</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/gender.png" width="430" height="220" alt="性别识别"><hr><p><strong>表情识别</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/emotion.png" width="250" height="300" alt="表情识别"><hr><p><strong>数字化妆</strong></p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/faceRecognitionMakeup-1.png" width="450" height="300" alt="视频人脸识别"><hr><p><strong>视频人脸检测</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/video-jiance.gif" alt></p><hr><p><strong>视频人脸识别</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/vipstone/faceai@master/res/faceRecognition.gif" alt></p><hr><p><strong>视频人脸识别</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://icdn.apigo.cn/opencv-hsv.gif" alt></p><hr><p><strong>图片修复</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://icdn.apigo.cn/inpaint.png?2" alt></p><hr><p><strong>图片自动上色</strong></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://icdn.apigo.cn/colorize-faceai.png" alt></p><hr><h3 id="技术方案"><a href="#技术方案" class="headerlink" title="技术方案"></a>技术方案</h3><p>技术实现方案介绍</p><pre><code>人脸识别：OpenCV / Dlib人脸检测：face_recognition性别识别：keras + tensorflow文字识别：Tesseract OCR</code></pre><h4 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h4><p>换脸——待完善</p><p>眼睛移动方向检测——待完善</p><p>Dlib性能优化方案</p><p>Dlib模型训练方法</p><p>Tesseract模型训练方法</p><h2 id="youyuge34-Anime-InPainting"><a href="#youyuge34-Anime-InPainting" class="headerlink" title="youyuge34/Anime-InPainting"></a>youyuge34/Anime-InPainting</h2><blockquote><p>An application tool of edge-connect, which can do anime inpainting and drawing. 动漫人物图片自动修复，去马赛克，填补，去瑕疵</p></blockquote><p><a href="https://github.com/youyuge34/Anime-InPainting" target="_blank" rel="noopener">youyuge34/Anime-InPainting</a></p><p>Anime-InPainting: An application Tool based on <a href="https://github.com/knazeri/edge-connect" target="_blank" rel="noopener">Edge-Connect</a></p><p align="left"><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/version-0.2-brightgreen.svg?style=flat-square" alt="Version"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/status-Release-gold.svg?style=flat-square" alt="Status"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/platform-win | linux-lightgrey.svg?style=flat-square" alt="Platform"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/PyTorch version-1.0-blue.svg?style=flat-square" alt="PyTorch"> <img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://img.shields.io/badge/License-CC BY·NC 4.0-green.svg?style=flat-square" alt="License"></p><hr><h3 id="重要"><a href="#重要" class="headerlink" title="重要"></a>重要</h3><p><strong>2019.3.27 更新:</strong><br>我们的最新模型 <a href="https://github.com/youyuge34/PI-REC" target="_blank" rel="noopener">PI-REC</a> 更强大.<br>如果你想用最新的AI绘画黑科技，而非仅仅是修补图像，请点击上面的链接👆</p><hr><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Tool效果看上面👆 | Bilibili视频教程：TO DO</p><p>这是图像修补方向最新研究成果<a href="https://github.com/knazeri/edge-connect" target="_blank" rel="noopener">Edge-Connect</a>的<del>阿姆斯特朗氮气加速魔改</del>（优化）版。<br>用<code>Opencv</code>写了个前端部分，后端是<a href="https://github.com/knazeri/edge-connect" target="_blank" rel="noopener">Edge-Connect</a>，方便当作工具使用。<br>此工具可以用来自动图像修补，去马赛克……同样优化了模型训练的过程。具体优化内容请看<a href="#improve">英文版Improvements</a>。</p><p>更新：<a href="https://github.com/youyuge34/Anime-InPainting/blob/master/training_manual.md#jump_zh" target="_blank" rel="noopener">训练手册</a>已经填坑完发布了！你可以照着指南训练自己数据集了~</p><h3 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h3><ul><li>Python 3</li><li>PyTorch <code>1.0</code> (<code>0.4</code> 会报错)</li><li>NVIDIA GPU + CUDA cuDNN （当前版本已可选cpu，请修改<code>config.yml</code>中的<code>DEVICE</code>）</li></ul><h3 id="第三方库安装"><a href="#第三方库安装" class="headerlink" title="第三方库安装"></a>第三方库安装</h3><ul><li>Clone this repo</li><li>安装PyTorch和torchvision –&gt; <a href="http://pytorch.org" target="_blank" rel="noopener">http://pytorch.org</a></li><li>安装 python requirements:<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="运行Tool"><a href="#运行Tool" class="headerlink" title="运行Tool"></a>运行Tool</h3><p>教练！我有个大胆的想法🈲……别急，一步步来：</p><p><strong>注意：以下模型是在动漫头像数据集上训练的，所以对动漫全身大图修补效果一般，想自己再训练的参考下面的训练指南</strong></p><ol><li>下训练好的模型文件 –&gt; <a href="https://drive.google.com/file/d/12I-K7GQEXEL_rEOVJnRv7ecVHyuZE-1-/view?usp=sharing" target="_blank" rel="noopener">Google Drive</a> | <a href="https://pan.baidu.com/s/1WkeRtYViGGGw4fUqPo3nsg" target="_blank" rel="noopener">Baidu</a></li><li>解压 <code>.7z</code> 放到你的根目录下.<br>确保你的目录现在是这样: <code>./model/getchu/&lt;xxxxx.pth&gt;</code></li><li>完成上面的基础环境和第三方库安装步骤</li><li>(可选) 检查并编辑 <code>./model/getchu/config.yml</code> 配置文件</li><li>使用以下命令运行：</li></ol><h4 id="默认Tool"><a href="#默认Tool" class="headerlink" title="默认Tool:"></a>默认Tool:</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py --path model/getchu/</span><br></pre></td></tr></table></figure></div><h4 id="带Edge编辑窗口的Tool"><a href="#带Edge编辑窗口的Tool" class="headerlink" title="带Edge编辑窗口的Tool:"></a>带Edge编辑窗口的Tool:</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py --edge --path model/getchu/</span><br></pre></td></tr></table></figure></div><h4 id="命令行参数帮助"><a href="#命令行参数帮助" class="headerlink" title="命令行参数帮助"></a>命令行参数帮助</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tool_patch.py -h</span><br></pre></td></tr></table></figure></div><blockquote><p>PS. 你也能用tool跑别的任何模型，在这里下载原作更多模型<a href="https://github.com/knazeri/edge-connect" target="_blank" rel="noopener">Edge-Connect</a>.<br>文件组织方式参考上面，其余运行命令都一样。唯一注意的是这个项目的 <code>config.yml</code> 比原作的多了几个选项，报错了的话注意修改。</p></blockquote><h3 id="Tool操作指南"><a href="#Tool操作指南" class="headerlink" title="Tool操作指南"></a>Tool操作指南</h3><p>详细内容请翻看控制台的打印内容，或查看<code>tool_patch.py</code>里的<code>__doc__</code><br>简略版tool使用指南：</p><table><thead><tr><th>按键</th><th>说明</th></tr></thead><tbody><tr><td>鼠标左键</td><td>Input窗口：画出瑕疵区域的遮盖，Edge窗口：手动画边缘</td></tr><tr><td>鼠标右键</td><td>Edge窗口：橡皮擦</td></tr><tr><td>按键 <code>[</code></td><td>笔刷变细 （控制台打印粗细大小）</td></tr><tr><td>按键 <code>]</code></td><td>笔刷变粗</td></tr><tr><td>按键 <code>0</code></td><td>Todo</td></tr><tr><td>按键 <code>1</code></td><td>Todo</td></tr><tr><td>按键 <code>n</code></td><td>修补黑色涂抹区域，只使用一张输入图片</td></tr><tr><td>按键 <code>e</code></td><td>修补黑色涂抹区域，使用输入图片和边缘图片（仅当edge窗口启动时有效）</td></tr><tr><td>按键 <code>r</code></td><td>全部重置</td></tr><tr><td>按键 <code>s</code></td><td>保存输出图片</td></tr><tr><td>按键 <code>q</code></td><td>退出</td></tr></tbody></table><h3 id="训练指南"><a href="#训练指南" class="headerlink" title="训练指南"></a>训练指南</h3><p>训练指南 –&gt; <a href="https://github.com/youyuge34/Anime-InPainting/blob/master/training_manual.md#jump_zh" target="_blank" rel="noopener">阅读</a></p><h3 id="Feature-Matching-特征匹配"><a href="#Feature-Matching-特征匹配" class="headerlink" title="Feature Matching(特征匹配)"></a>Feature Matching(特征匹配)</h3><ul><li>对水印模板图片进行了一些初始化处理，比如二值化后去除非文字部分等</li><li>尝试了 OpenCV 的多种算法<ul><li>比如 ORB + Brute-Force，即蛮力匹配，对应 cv2.BFMatcher() 方法</li><li>比如 SIFT + FLANN，即快速最近邻匹配，对应 cv2.BFMatcher() 方法</li><li>比如 Template Matching，即模板匹配，对应 cv2.matchTemplate() 方法</li></ul></li><li>最后发现 Template Matching 最简单方便，效果也最好。</li><li>如果水印位置固定的话则可以跳过Feature Matching(特征匹配)，直接进行下一步的Inpainting(图片修复)</li></ul><h3 id="Inpainting-图片修复"><a href="#Inpainting-图片修复" class="headerlink" title="Inpainting(图片修复)"></a>Inpainting(图片修复)</h3><ul><li>修复图片前需要做一些前置处理<ul><li>首先要得到图片的去水印 Mask 图片，即和待处理图片一样大小的除了水印部分的文字部分外其他部分全部是黑色的位图</li><li>因为前面对水印做了二值化等处理，最终效果发现会有水印轮廓，所以需要对 Mask 图片做一次膨胀处理覆盖掉轮廓</li></ul></li><li>选用了Telea在2004年提出的Telea算法，即基于快速行进（FMM）的修复算法<ul><li>对应 cv2.inpaint(img, mask, 5, cv2.INPAINT_TELEA)</li><li>对应论文：<a href="http://www.cs.rug.nl/~alext/PAPERS/JGT04/paper.pdf" target="_blank" rel="noopener">An Image Inpainting Technique Based on the Fast Marching Method (2004)</a></li></ul></li></ul><h3 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h3><ul><li>由于某些图片的水印和背景图片相似程度太高，如何提高水印位置的识别正确率</li><li>改进修复图片算法，可以考虑用深度学习来做做看？</li><li>Google CVPR 2017, <a href="https://watermark-cvpr17.github.io" target="_blank" rel="noopener">《On the Effectiveness of Visible Watermarks》</a>这个据说很牛的，回头可以读一读</li></ul><h4 id="License"><a href="#License" class="headerlink" title="License"></a>License</h4><p><a href="https://tldrlegal.com/license/mit-license" target="_blank" rel="noopener">MIT</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> opencv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博客文章加密的设计</title>
      <link href="/post/about-document-encrypt.html"/>
      <url>/post/about-document-encrypt.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>目前开源的博客框架很多种,从架构来分,大致分为两种<br>一种生成纯静态页面的无后台博客(例如 hexo,vuepress 等)<br>另一种是用户后台管理的博客框架(例如 wordpress,typecho 等)</p></blockquote><p>本文主要以 hexo(或者静态 html 博客) 为主</p><h2 id="什么是-Hexo"><a href="#什么是-Hexo" class="headerlink" title="什么是 Hexo"></a>什么是 Hexo</h2><blockquote><p>如果你不知道什么是 <code>Hexo</code>,这篇文章同样适合你,本文主要讨论如何实现对博客文章加密。<code>hexo</code> 最终也是生成静态对 html 文件。</p></blockquote><p><code>Hexo</code> 是一个快速、简洁且高效的博客框架。</p><p><code>Hexo</code> 的特点:</p><ul><li><strong>超快速度</strong> - Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li><strong>支持 Markdown</strong> - <code>Hexo</code> 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 <code>Octopress</code> 的大多数插件。</li><li><strong>一键部署</strong> - 只需一条指令即可部署到 GitHub Pages, Heroku 或其他平台。</li><li><strong>插件和可扩展性</strong> - 强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成</li></ul><h1 id="加密方式"><a href="#加密方式" class="headerlink" title="加密方式"></a>加密方式</h1><h2 id="无后台"><a href="#无后台" class="headerlink" title="无后台"></a>无后台</h2><blockquote><p>你可能没有自己的域名,可能没有自己的服务器,你只是使用了 (Github,Gitlab,Coding,Gitee 等) Pages 服务。</p></blockquote><h3 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h3><blockquote><p>第一种加密方式,我叫它伪加密,正如它的名字,它不是真正的加密,只是做了一个伪装。</p></blockquote><p>所谓实现方式,就是在文章前面加上一个遮罩层,待输入正确的密码,再将遮罩层隐藏。</p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="http://ww4.sinaimg.cn/large/6af89bc8gw1f8pz61bw7zj2064064t8s.jpg" alt referrerpolicy="no-referrer"></p><p>你可能会说:”你是在逗我吗?稍微懂点技术的人,分分钟就能破解了”。</p><p>所以这种加密方式只适用于,非技术内博客,且对安全性要求不高(感觉这种”加密”基本没什么X用)</p><h3 id="绝对加密"><a href="#绝对加密" class="headerlink" title="绝对加密"></a>绝对加密</h3><blockquote><p>这种方式相对来说很安全了,先说一下加密过程:</p></blockquote><ol><li>对原始密码(password)进行非对称加密(假设用 Md5) <code>md5Password = md5(password)</code>,生成 md5Password</li><li>使用原始密码对文章 html 文本进行对称加密(假设使用 DES)<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DESHtml = CryptoJS.DES.encrypt(</span><br><span class="line">    html, CryptoJS.enc.Utf8.parse(password),</span><br><span class="line">    &#123;</span><br><span class="line">        mode: CryptoJS.mode.ECB,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></div></li></ol><blockquote><p>解密过程:</p></blockquote><ol><li>对用户输入的密码进行校验,得到正确的明文密码(password)</li><li>使用 DES 算法解密得到 html文本<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">html = CryptoJS.DES.decrypt(message, password, &#123;</span><br><span class="line">        mode: CryptoJS.mode.ECB,</span><br><span class="line">        padding: CryptoJS.pad.Pkcs7</span><br><span class="line">    &#125;).toString(CryptoJS.enc.Utf8);</span><br></pre></td></tr></table></figure></div></li><li>将得到的 html 渲染到 dom 中。</li></ol><blockquote><p>可以这种方式已经是很安全了,为了增加安全性,我们可以对加密算法进行优化(比如对 md5 算法加 salt)</p></blockquote><h2 id="有后台"><a href="#有后台" class="headerlink" title="有后台"></a>有后台</h2><blockquote><p>有后台就很好办了,想怎么玩就怎么玩,让用户登录也好,输入密码也好</p></blockquote><h3 id="伪加密升级版"><a href="#伪加密升级版" class="headerlink" title="伪加密升级版"></a>伪加密升级版</h3><blockquote><p>将伪加密的 dom 交由后台管理,调用后台接口,验证通过返回 html,再渲染到 dom 中即可<br>但是这种方式实现起来复杂,增加部署成本</p></blockquote><p>需要将文章的 html 从静态文件中抽取出来保存到数据库(数据库中至少还要包括 密码,url等信息),<br>然后为这些 html 增加 请求后台接口的代码。<br>至于静态文章可以部署到 Pages 服务中.</p><h3 id="过滤器拦截"><a href="#过滤器拦截" class="headerlink" title="过滤器拦截"></a>过滤器拦截</h3><blockquote><p>这种方式可以对文章进行分类,对于需要加密对文章放在统一对 url 下,通过 url 进行拦截过滤,验证密码或者验证身份.<br>同样是使用原始对静态文件,只是由 web 服务器控制访问。</p></blockquote><p>这种方式部署方式不变,一般都是 ftp 上传到个人服务器。</p><hr><p>当然还有很多方式实现加密,还有一些实现起来太复杂,对于有需要对博客加密的胖友可以拿来参考。</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github 上的学习资源</title>
      <link href="/post/github-learning.html"/>
      <url>/post/github-learning.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>统计一些 github 上的学习资源,感觉对你有帮助的朋友,可以给我一个 star🌟. Github仓库地址:<a href="https://github.com/hvnobug/awesome-learning" target="_blank" rel="noopener">hvnobug/awesome-learning</a></p></blockquote><h2 id="Java-Kotlin"><a href="#Java-Kotlin" class="headerlink" title="Java/Kotlin"></a>Java/Kotlin</h2><blockquote><p>基础/面试/算法</p></blockquote><ul><li><a href="https://github.com/doocs/advanced-java" target="_blank" rel="noopener">doocs/advanced-java</a> 😮 互联网 <code>Java</code> 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识</li><li><a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener">Snailclimb/JavaGuide</a> 【<code>Java</code>学习+面试指南】 一份涵盖大部分Java程序员所需要掌握的核心知识。</li><li><a href="https://github.com/JackChan1999/Kotlin-Tutorials" target="_blank" rel="noopener">JackChan1999/Kotlin-Tutorials</a> <code>Kotlin</code>基础教程</li><li><a href="https://github.com/JackyAndroid/AndroidInterview-Q-A" target="_blank" rel="noopener">JackyAndroid/AndroidInterview-Q-A</a> 一线互联网公司的 Java 和 Android 方面的内部面试题</li><li><a href="https://github.com/crossoverJie/JCSprout" target="_blank" rel="noopener">crossoverJie/JCSprout</a> 处于萌芽阶段的 <code>Java</code> 核心知识库。</li><li><a href="https://github.com/AweiLoveAndroid/CommonDevKnowledge" target="_blank" rel="noopener">AweiLoveAndroid/CommonDevKnowledge</a> :octocat:🔥 🌟⭐️⭐️⭐️ ⭐️ 史上最全的BAT大厂<code>Android</code>面试题汇集，以及常用的<code>Android</code>开发的一些技能点，冷门知识点汇总，开发中遇到的坑汇总等干货。</li><li><a href="https://github.com/Blankj/awesome-java-leetcode" target="_blank" rel="noopener">Blankj/awesome-java-leetcode</a> <code>LeetCode</code> 上面主要收集了各大 IT 公司的笔试面试题,该项目为 <code>LeetCode</code> <code>Java</code> 语言的题解集合</li><li><a href="https://github.com/heibaiying/BigData-Notes" target="_blank" rel="noopener">heibaiying/BigData-Notes</a> 大数据入门指南 ⭐️</li><li><a href="https://github.com/ZXZxin/ZXBlog" target="_blank" rel="noopener">ZXZxin/ZXBlog</a> 记录各种学习笔记(算法、<code>Java</code>、数据库、并发……)</li><li><a href="https://github.com/iluwatar/java-design-patterns" target="_blank" rel="noopener">iluwatar/java-design-patterns</a> Design patterns implemented</li></ul><blockquote><p>进阶/博客/笔记</p></blockquote><ul><li><a href="https://github.com/francistao/LearningNotes" target="_blank" rel="noopener">francistao/LearningNotes</a> 很全面的学习笔记，偏向 <code>Android</code> 和 <code>Java</code></li><li><a href="https://github.com/hollischuang/toBeTopJavaer" target="_blank" rel="noopener">hollischuang/toBeTopJavaer</a> To Be Top Javaer - <code>Java</code>工程师成神之路</li><li><a href="https://github.com/javagrowing/JGrowing" target="_blank" rel="noopener">javagrowing/JGrowing</a> Java is Growing up but not only <code>Java</code>。<code>Java</code>成长路线，但学到不仅仅是<code>Java</code>。</li><li><a href="https://github.com/qiurunze123/miaosha" target="_blank" rel="noopener">qiurunze123/miaosha</a> ⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓</li></ul><blockquote><p>Spring系列</p></blockquote><ul><li><a href="https://github.com/spring-projects/spring-data-examples" target="_blank" rel="noopener">spring-projects/spring-data-examples</a> <code>Spring Data</code> Example Projects</li><li><a href="https://github.com/ityouknow/spring-boot-examples" target="_blank" rel="noopener">ityouknow/spring-boot-examples</a> about learning <code>Spring Boot</code> via examples. <code>Spring Boot</code> 教程、技术栈示例代码，快速简单上手教程</li><li><a href="https://github.com/seaswalker/spring-analysis" target="_blank" rel="noopener">seaswalker/spring-analysis</a> <code>Spring</code>源码阅读</li><li><a href="https://github.com/dyc87112/SpringBoot-Learning" target="_blank" rel="noopener">dyc87112/SpringBoot-Learning</a> <code>Spring Boot</code>基础教程</li><li><a href="https://github.com/JeffLi1993/springboot-learning-example" target="_blank" rel="noopener">JeffLi1993/springboot-learning-example</a> <code>spring boot</code> 实践学习案例，是 <code>spring boot</code> 初学者及核心技术巩固的最佳实践。</li><li><a href="https://github.com/xkcoding/spring-boot-demo" target="_blank" rel="noopener">xkcoding/spring-boot-demo</a> <code>spring boot demo</code> 是一个用来深度学习并实战 <code>spring boot</code> 的项目，目前总共包含 65 个集成demo，已经完成 52 个。</li><li><a href="https://github.com/forezp/SpringCloudLearning" target="_blank" rel="noopener">forezp/SpringCloudLearning</a> 《史上最简单的Spring Cloud教程源码》</li><li><a href="https://github.com/dyc87112/SpringCloud-Learning" target="_blank" rel="noopener">dyc87112/SpringCloud-Learning</a> <code>Spring Cloud</code>基础教程，持续连载更新中</li><li><a href="https://github.com/wuyouzhuguli/SpringAll" target="_blank" rel="noopener">wuyouzhuguli/SpringAll</a> 循序渐进，学习<code>Spring Boot</code>、<code>Spring Boot</code> &amp; <code>Shiro</code>、<code>Spring Cloud</code>、<code>Spring Security</code> &amp; <code>Spring Security OAuth2</code>，博客<code>Spring</code>系列源码</li><li><a href="https://github.com/ityouknow/spring-cloud-examples" target="_blank" rel="noopener">ityouknow/spring-cloud-examples</a> <code>Spring Cloud</code> 学习案例，服务发现、服务治理、链路追踪、服务监控等</li></ul><blockquote><p>其他</p></blockquote><ul><li><a href="https://github.com/DuGuQiuBai/Java" target="_blank" rel="noopener">DuGuQiuBai/Java</a> 27天成为<code>Java</code>大神</li><li><a href="https://github.com/jobbole/awesome-java-cn" target="_blank" rel="noopener">jobbole/awesome-java-cn</a> <code>Java</code>资源大全中文版</li><li><a href="https://github.com/zhanglei-workspace/shopping-management-system" target="_blank" rel="noopener">zhanglei-workspace/shopping-management-system</a> 该项目为多个小项目的集合（持续更新中…）。内容类似淘宝、京东等网购管理系统以及图书管理、超市管理等系统。目的在于便于Java初级爱好者在学习完某一部分Java知识后有一个合适的项目锻炼、运用所学知识，完善知识体系。适用人群：Java基础到入门的爱好者。</li><li><a href="https://github.com/zhisheng17/flink-learning" target="_blank" rel="noopener">zhisheng17/flink-learning</a> flink learning blog. <a href="http://www.54tianzhisheng.cn" target="_blank" rel="noopener">http://www.54tianzhisheng.cn</a> 含 <code>Flink</code> 入门、概念、原理、实战、性能调优、源码解析等内容。涉及 <code>Flink Connector</code>、<code>Metrics</code>、<code>Library</code>、<code>DataStream API</code>、<code>Table API</code> &amp; <code>SQL</code> 等内容的学习案例，还有 <code>Flink</code> 落地应用的大型项目案例（PVUV、日志存储、百亿数据实时去重、监控告警）分享。</li><li><a href="https://github.com/huanglizhuo/kotlin-in-chinese" target="_blank" rel="noopener">huanglizhuo/kotlin-in-chinese</a> <code>kotlin</code> 官方文档翻译</li><li><a href="https://github.com/2227324689/gpmall" target="_blank" rel="noopener">2227324689/gpmall</a> 【咕泡学院实战项目】-基于<code>SpringBoot</code>+<code>Dubbo</code>构建的电商平台-微服务架构、商城、电商、微服务、高并发、<code>kafka</code>、<code>Elasticsearch</code></li><li><a href="https://github.com/macrozheng/mall-learning" target="_blank" rel="noopener">macrozheng/mall-learning</a> mall学习教程，架构、业务、技术要点全方位解析。mall项目（25k+star）是一套电商系统，使用现阶段主流技术实现。 涵盖了<code>SpringBoot2.1.3</code>、<code>MyBatis3.4.6</code>、<code>Elasticsearch6.2.2</code>、<code>RabbitMQ3.7.15</code>、<code>Redis3.2</code>、<code>Mongodb3.2</code>、<code>Mysql5.7</code>等技术，采用<code>Docker</code>容器化部署。</li><li><a href="https://github.com/winterbe/java8-tutorial" target="_blank" rel="noopener">winterbe/java8-tutorial</a> Modern Java - A Guide to Java 8 <a href="http://winterbe.com" target="_blank" rel="noopener">http://winterbe.com</a></li></ul><h2 id="Html-Css"><a href="#Html-Css" class="headerlink" title="Html/Css"></a>Html/Css</h2><ul><li><a href="https://github.com/l-hammer/You-need-to-know-css" target="_blank" rel="noopener">l-hammer/You-need-to-know-css</a> 该项目包含了一些常用的 <code>CSS</code> 样式示例和作者阅读《CSS揭秘》的收获分享，适合于想要提高 <code>CSS</code> 技能的同学</li></ul><h2 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h2><blockquote><p>React系列</p></blockquote><ul><li><a href="https://github.com/yiminghe/learning-react" target="_blank" rel="noopener">yiminghe/learning-react</a> <code>react</code> 中文教程</li><li><a href="https://github.com/adam-golab/react-developer-roadmap" target="_blank" rel="noopener">adam-golab/react-developer-roadmap</a> 该仓库中的线路图展示了学习 <code>React</code> 的路径，为成为一名 <code>React</code> 开发者指明了方向。</li><li><a href="https://github.com/jasonslyvia/a-cartoon-intro-to-redux-cn" target="_blank" rel="noopener">jasonslyvia/a-cartoon-intro-to-redux-cn</a> 看漫画，学 <code>Redux</code></li><li><a href="https://github.com/shimohq/react-cookbook" target="_blank" rel="noopener">shimohq/react-cookbook</a> 编写简洁漂亮，可维护的 <code>React</code> 应用</li><li><a href="https://github.com/Juliiii/React-Cnode" target="_blank" rel="noopener">Juliiii/React-Cnode</a> 适合新手的 <code>React</code> 全家桶项目学习</li></ul><blockquote><p>Nodejs</p></blockquote><ul><li><a href="https://github.com/alsotang/node-lessons" target="_blank" rel="noopener">alsotang/node-lessons</a> <code>Node.js</code> 包教不包会</li><li><a href="https://github.com/nqdeng/7-days-nodejs" target="_blank" rel="noopener">nqdeng/7-days-nodejs</a> 七天学会<code>NodeJS</code></li></ul><blockquote><p>其他</p></blockquote><ul><li><a href="https://github.com/Platform-CUF/use-gulp" target="_blank" rel="noopener">Platform-CUF/use-gulp</a> gulp资料收集</li><li><a href="https://github.com/dolymood/AngularLearning" target="_blank" rel="noopener">dolymood/AngularLearning</a> <code>Angular.js</code> 的一些学习资源</li><li><a href="https://github.com/elsewhencode/project-guidelines" target="_blank" rel="noopener">project-guidelines</a> <code>JavaScript</code> 项目规范</li><li><a href="https://github.com/lydiahallie/javascript-questions" target="_blank" rel="noopener">lydiahallie/javascript-questions</a> <code>JavaScript</code> 进阶问题列表 ✨</li><li><a href="https://github.com/pd4d10/js-stack-from-scratch" target="_blank" rel="noopener">pd4d10/js-stack-from-scratch</a> 从零开始构建 <code>JavaScript</code> 技术栈</li><li><a href="https://github.com/wx-chevalier/Web-Series" target="_blank" rel="noopener">chevalier/Web-Series</a> 📚 现代 <code>Web</code> 开发</li><li><a href="https://github.com/DMQ/mvvm" target="_blank" rel="noopener">DMQ/mvvm</a> 剖析<code>Vue</code>实现原理 - 如何实现双向绑定 <code>mvvm</code></li><li><a href="https://github.com/jobbole/awesome-javascript-cn" target="_blank" rel="noopener">jobbole/awesome-javascript-cn</a> <code>JavaScript</code> 资源大全中文版，内容包括：包管理器、加载器、测试框架、运行器、<code>QA、MVC</code>框架和库、模板引擎等</li><li><a href="https://github.com/airbnb/javascript" target="_blank" rel="noopener">airbnb/javascript</a> A mostly reasonable approach to <code>JavaScript</code></li></ul><h2 id="Typescript"><a href="#Typescript" class="headerlink" title="Typescript"></a>Typescript</h2><ul><li><a href="https://github.com/xcatliu/typescript-tutorial" target="_blank" rel="noopener">xcatliu/typescript-tutorial</a> <code>TypeScript</code> 入门教程</li><li><a href="https://github.com/zhongsp/TypeScript" target="_blank" rel="noopener">zhongsp/TypeScript</a> <code>TypeScript</code>使用手册</li><li><a href="https://github.com/basarat/typescript-book" target="_blank" rel="noopener">basarat/typescript-book</a> 📚 The definitive guide to TypeScript and possibly the best TypeScript book 📖. Free and Open Source 🌹</li></ul><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><blockquote><p>基础/算法/面试</p></blockquote><ul><li><a href="https://github.com/wangzheng0822/algo" target="_blank" rel="noopener">wangzheng0822/algo</a> 数据结构和算法必知必会的50个代码实现</li><li><a href="https://github.com/jackfrued/Python-100-Days" target="_blank" rel="noopener">jackfrued/Python-100-Days</a> <code>Python</code> - 100天从新手到大师</li><li><a href="https://github.com/donnemartin/system-design-primer" target="_blank" rel="noopener">donnemartin/system-design-primer</a> 系统设计入门</li><li><a href="https://github.com/xianhu/LearnPython" target="_blank" rel="noopener">xianhu/LearnPython</a> 以撸代码的形式学习<code>Python</code></li><li><a href="https://github.com/qiwsir/algorithm" target="_blank" rel="noopener">qiwsir/algorithm</a> 老齐的 <code>Python</code> 算法教程</li><li><a href="https://github.com/taizilongxu/interview_python" target="_blank" rel="noopener">taizilongxu/interview_python</a> 关于<code>Python</code>的面试题</li><li><a href="https://github.com/TheAlgorithms/Python" target="_blank" rel="noopener">TheAlgorithms/Python</a> All Algorithms implemented in <code>Python</code></li><li><a href="https://github.com/faif/python-patterns" target="_blank" rel="noopener">faif/python-patterns</a> A collection of design patterns and idioms in <code>Python</code>.</li><li><a href="https://github.com/microsoft/c9-python-getting-started" target="_blank" rel="noopener">microsoft/c9-python-getting-started</a> Sample code for Channel 9 Python for Beginners course</li></ul><blockquote><p>机器学习/人工智能</p></blockquote><ul><li><a href="https://github.com/apachecn/AiLearning" target="_blank" rel="noopener">apachecn/AiLearning</a> AiLearning: 机器学习 - MachineLearning - ML、深度学习 - DeepLearning - DL、自然语言处理 NLP</li><li><a href="https://github.com/yunjey/pytorch-tutorial" target="_blank" rel="noopener">yunjey/pytorch-tutorial</a> PyTorch Tutorial for Deep Learning Researchers</li></ul><blockquote><p>Opencv</p></blockquote><ul><li><a href="https://github.com/1zlab/1ZLAB_OpenCV_Tutorial" target="_blank" rel="noopener">1zlab/1ZLAB_OpenCV_Tutorial</a> 写给机器人爱好者的<code>OpenCV</code>基础入门教程</li><li><a href="https://github.com/TonyStark1997/OpenCV-Python" target="_blank" rel="noopener">TonyStark1997/OpenCV-Python</a> <code>OpenCV-Python</code>教程的中文翻译</li><li><a href="https://github.com/ex2tron/OpenCV-Python-Tutorial" target="_blank" rel="noopener">ex2tron/ex2tron/OpenCV-Python-Tutorial</a> <code>OpenCV-Python</code>图像处理教程</li><li><a href="https://github.com/QianMo/OpenCV3-Intro-Book-Src" target="_blank" rel="noopener">QianMo/OpenCV3-Intro-Book-Src</a> 📘《OpenCV3编程入门》书本配套源码 《Introduction to OpenCV3 Programming》Book Source Code</li><li><a href="https://github.com/techfort/pycv" target="_blank" rel="noopener">techfort/pycv</a> Website of the book “Learn OpenCV 3 with Python”</li></ul><blockquote><p>爬虫</p></blockquote><ul><li><a href="https://github.com/lining0806/PythonSpiderNotes" target="_blank" rel="noopener">lining0806/PythonSpiderNotes</a> <code>Python</code>入门网络爬虫之精华版</li></ul><blockquote><p>其他</p></blockquote><ul><li><a href="https://github.com/Tim9Liu9/TimLiu-Python" target="_blank" rel="noopener">Tim9Liu9/TimLiu-Python</a> <code>python</code>资源集合与开源硬件</li><li><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">jobbole/awesome-python-cn</a> <code>Python</code>资源大全中文版，包括：Web框架、网络爬虫、模板引擎、数据库、数据可视化、图片处理等</li><li><a href="https://github.com/michaelliao/awesome-python-webapp" target="_blank" rel="noopener">michaelliao/awesome-python-webapp</a> 小白的<code>Python</code>入门教程实战篇：网站+<code>iOS App</code>源码</li><li><a href="https://github.com/makelove/OpenCV-Python-Tutorial" target="_blank" rel="noopener">makelove/OpenCV-Python-Tutorial</a> 这个repo是这本书PDF的所有源代码，几乎都被测试过，能正常运行。程序使用的图片和视频，都在 data 文件内。平时会添加一些有趣的代码，实现某种功能。</li><li><a href="https://github.com/shihyu/python_ebook" target="_blank" rel="noopener">shihyu/python_ebook</a> <code>Python</code> 编程相关的电子书资源集合项目</li><li><a href="https://github.com/aosabook/500lines" target="_blank" rel="noopener">aosabook/500lines</a> （英文）用少于 500 行的 <code>Python</code> 代码，你可以写出什么东西？相信你看完这个项目，会学到很多（每个项目的作者都是业内大神写的）。<a href="https://github.com/HT524/500LineorLess_CN" target="_blank" rel="noopener">中文翻译版（未翻译完）</a></li><li><a href="https://github.com/MrKiven/PyZh" target="_blank" rel="noopener">MrKiven/PyZh</a> 📚 一起写<code>Python</code>文章，一起看Python文章 - 利用<code>readthedocs</code>的<code>Python</code>技术文章的收集和翻译。</li><li><a href="https://github.com/satwikkansal/wtfpython" target="_blank" rel="noopener">satwikkansal/wtfpython</a> Exploring Python through counter-intuitive snippets. If you think you know Python, think once more!</li></ul><h2 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h2><ul><li><a href="https://github.com/hackstoic/golang-open-source-projects" target="_blank" rel="noopener">hackstoic/golang-open-source-projects</a> 为互联网IT人打造的中文版awesome-go</li></ul><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="noopener">jikeytang/sublime-text</a> <code>sublime-text</code></li><li><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">xirong/my-git</a> <code>git</code>的资料整理</li><li><a href="https://github.com/phodal/github" target="_blank" rel="noopener">phodal/github</a> <code>GitHub</code> 漫游指南</li><li><a href="https://github.com/521xueweihan/git-tips" target="_blank" rel="noopener">521xueweihan/git-tips</a> <code>Git</code>的奇技淫巧🙈</li><li><a href="https://github.com/tiimgreen/github-cheat-sheet" target="_blank" rel="noopener">tiimgreen/github-cheat-sheet</a> <code>GitHub</code> 和 <code>Git</code> 的秘籍</li><li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial" target="_blank" rel="noopener">judasn/IntelliJ-IDEA-Tutorial</a> <code>IntelliJ IDEA</code> 简体中文专题教程</li><li><a href="https://github.com/wsdjeg/vim-galore-zh_cn" target="_blank" rel="noopener">wsdjeg/vim-galore-zh_cn</a> <code>Vim</code> 从入门到精通</li><li><a href="https://github.com/jaywcjlove/linux-command" target="_blank" rel="noopener">jaywcjlove/linux-command</a> <code>Linux</code>命令大全搜索工具，内容包含<code>Linux</code>命令手册、详解、学习、搜集。</li><li><a href="https://github.com/me115/linuxtools_rst" target="_blank" rel="noopener">me115/linuxtools_rst</a> <code>Linux</code>工具快速教程</li><li><a href="https://github.com/OrwillT/Visual-Studio-Code-Keymap-CN" target="_blank" rel="noopener">OrwillT/Visual-Studio-Code-Keymap-CN</a> <code>VS Code</code> 编辑器官方快捷键查图汉化版</li></ul><h2 id="培训-课程"><a href="#培训-课程" class="headerlink" title="培训/课程"></a>培训/课程</h2><ul><li><a href="https://github.com/PKUanonym/REKCARC-TSC-UHT" target="_blank" rel="noopener">PKUanonym/REKCARC-TSC-UHT</a> 清华大学计算机系课程攻略</li><li><a href="https://github.com/CoolPhilChen/SJTU-Courses" target="_blank" rel="noopener">CoolPhilChen/SJTU-Courses</a> 上海交通大学课程资料分享</li><li><a href="https://github.com/USTC-Resource/USTC-Course" target="_blank" rel="noopener">USTC-Resource/USTC-Course</a> 中国科学技术大学课程资源</li><li><a href="https://github.com/lib-pku/libpku" target="_blank" rel="noopener">lib-pku/libpku</a> 贵校课程资料民间整理</li><li><a href="https://github.com/QSCTech/zju-icicles" target="_blank" rel="noopener">QSCTech/zju-icicles</a> 浙江大学课程攻略共享计划</li><li><a href="https://github.com/ruanyf/jstraining" target="_blank" rel="noopener">ruanyf/jstraining</a> 全栈工程师培训材料</li><li><a href="https://github.com/prakhar1989/awesome-courses" target="_blank" rel="noopener">prakhar1989/awesome-courses</a> 📚 List of awesome university courses for learning Computer Science!</li><li><a href="https://github.com/Pierian-Data/Complete-Python-3-Bootcamp" target="_blank" rel="noopener">Pierian-Data/Complete-Python-3-Bootcamp</a> Course Files for Complete Python 3 Bootcamp Course on Udemy</li></ul><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><blockquote><p>Javascript</p></blockquote><ul><li><a href="https://github.com/es6-org/exploring-es6" target="_blank" rel="noopener">es6-org/exploring-es6</a> 《 Exploring ES6 》的翻译</li><li><a href="https://github.com/ruanyf/es6tutorial" target="_blank" rel="noopener">ruanyf/es6tutorial</a> 《ECMAScript 6入门》是一本开源的 <code>JavaScript</code> 语言教程，全面介绍 ECMAScript 6 新增的语法特性。</li><li><a href="https://github.com/huzidaha/react-naive-book" target="_blank" rel="noopener">huzidaha/react-naive-book</a> 开源、免费、专业、简单的 <code>React.js</code> 在线教程</li></ul><blockquote><p>Typescript</p></blockquote><ul><li><a href="https://github.com/jkchao/typescript-book-chinese" target="_blank" rel="noopener">jkchao/typescript-book-chinese</a> TypeScript Deep Dive 中文版</li></ul><blockquote><p>Java</p></blockquote><ul><li><a href="https://github.com/LingCoder/OnJava8" target="_blank" rel="noopener">LingCoder/OnJava8</a> 《On Java 8》中文版，又名《Java编程思想》 第5版</li><li><a href="https://github.com/sorenduan/awesome-java-books" target="_blank" rel="noopener">sorenduan/awesome-java-books</a> <code>Java</code> 技术书籍大全</li></ul><blockquote><p>Python</p></blockquote><ul><li><a href="https://github.com/eastlakeside/interpy-zh" target="_blank" rel="noopener">eastlakeside/interpy-zh</a> 📘《Python进阶》（Intermediate Python 中文版）</li><li><a href="https://github.com/BrambleXu/pydata-notebook" target="_blank" rel="noopener">BrambleXu/pydata-notebook</a> 利用<code>Python</code>进行数据分析 第二版 (2017) 中文翻译笔记</li><li><a href="https://github.com/ethan-funny/explore-python" target="_blank" rel="noopener">ethan-funny/explore-python</a> <code>Python</code> 之旅</li><li><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="noopener">python3-cookbook</a>《Python Cookbook》 3rd Edition 翻译</li><li><a href="https://github.com/Prodesire/Python-Guide-CN" target="_blank" rel="noopener">Python-Guide-CN</a> 《Python最佳实践指南》</li></ul><blockquote><p>Go</p></blockquote><ul><li><a href="https://github.com/go101/go101" target="_blank" rel="noopener">go101/go101</a> An online book focusing on <code>Go</code> syntax/semantics.</li><li><a href="https://github.com/chai2010/advanced-go-programming-book" target="_blank" rel="noopener">chai2010/advanced-go-programming-book</a> 📚 《Go语言高级编程》开源图书，涵盖<code>CGO</code>、<code>Go</code>汇编语言、<code>RPC</code>实现、<code>Protobuf</code>插件实现、<code>Web</code>框架实现、分布式系统等高阶主题</li><li><a href="https://github.com/astaxie/build-web-application-with-golang" target="_blank" rel="noopener">astaxie/build-web-application-with-golang</a> 《Go Web 编程》中文</li></ul><blockquote><p>Rust</p></blockquote><ul><li><a href="https://github.com/KaiserY/rust-book-chinese" target="_blank" rel="noopener">KaiserY/rust-book-chinese</a> <code>Rust</code> 程序设计语言</li></ul><blockquote><p>Shell</p></blockquote><ul><li><a href="https://github.com/tinyclub/open-shell-book" target="_blank" rel="noopener">tinyclub/open-shell-book</a> 开源书籍：《Shell 编程范例》，面向操作对象学 <code>Shell</code>！</li></ul><blockquote><p>Redis</p></blockquote><ul><li><a href="https://github.com/huangz1990/redis" target="_blank" rel="noopener">huangz1990/redis</a> 《Redis Command Reference》全文的中文翻译版。</li><li><a href="https://github.com/huangz1990/redisbook" target="_blank" rel="noopener">huangz1990/redisbook</a> 《Redis 设计与实现》（网络版）的书稿源码</li></ul><blockquote><p>Deeplearning</p></blockquote><ul><li><a href="https://github.com/d2l-ai/d2l-zh" target="_blank" rel="noopener">d2l-ai/d2l-zh</a> 《动手学深度学习》：面向中文读者、能运行、可讨论。英文版即伯克利“深度学习导论”教材</li><li><a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="noopener">exacity/deeplearningbook-chinese</a> <code>Deep Learning</code> 中文翻译</li></ul><blockquote><p>Docker</p></blockquote><ul><li><a href="https://github.com/yeasy/docker_practice" target="_blank" rel="noopener">yeasy/docker_practice</a> <code>Docker</code> — 从入门到实践</li><li><a href="https://github.com/rootsongjc/kubernetes-handbook" target="_blank" rel="noopener">rootsongjc/kubernetes-handbook</a> <code>Kubernetes</code>中文指南/云原生应用架构实践手册</li></ul><blockquote><p>其他</p></blockquote><ul><li><a href="https://github.com/ruanyf/free-books" target="_blank" rel="noopener">ruanyf/free-books</a> 互联网上的免费书籍</li><li><a href="https://github.com/DocsHome/microservices" target="_blank" rel="noopener">DocsHome/microservices</a> Microservices from Design to Deployment 中文版 《微服务：从设计到部署》</li><li><a href="https://github.com/julycoding/The-Art-Of-Programming-By-July" target="_blank" rel="noopener">julycoding/The-Art-Of-Programming-By-July</a> 《编程之法：面试和算法心得》</li><li><a href="https://github.com/justjavac/free-programming-books-zh_CN" target="_blank" rel="noopener">justjavac/free-programming-books-zh_CN</a> 📚 免费的计算机编程类中文书籍</li><li><a href="https://github.com/jobbole/awesome-programming-books" target="_blank" rel="noopener">jobbole/awesome-programming-books</a> 经典编程书籍大全，涵盖：计算机系统与网络、系统架构、算法与数据结构、前端开发、后端开发、移动开发、数据库、测试、项目与团队、程序员职业修炼、求职面试等</li><li><a href="https://github.com/flutterchina/flutter-in-action" target="_blank" rel="noopener">flutterchina/flutter-in-action</a> 《Flutter实战》电子书</li><li><a href="https://github.com/feiskyer/sdn-handbook" target="_blank" rel="noopener">feiskyer/sdn-handbook</a> SDN网络指南（SDN Handbook）</li><li><a href="https://github.com/me115/design_patterns" target="_blank" rel="noopener">me115/design_patterns</a> 《图说设计模式》</li><li><a href="https://github.com/taobao/nginx-book" target="_blank" rel="noopener">taobao/nginx-book</a> Nginx开发从入门到精通</li><li><a href="https://github.com/yangyangwithgnu/the_new_world_linux" target="_blank" rel="noopener">yangyangwithgnu/the_new_world_linux</a> 《Linux 下的惬意生活》</li><li><a href="https://github.com/Snowming04/The-Hacker-Playbook-3-Translation" target="_blank" rel="noopener">Snowming04/The-Hacker-Playbook-3-Translation</a> 【译】 渗透测试实战第三版(红队版)</li></ul><h2 id="基础-算法"><a href="#基础-算法" class="headerlink" title="基础/算法"></a>基础/算法</h2><ul><li><a href="https://github.com/wangzheng0822/algo" target="_blank" rel="noopener">wangzheng0822/algo</a> 数据结构和算法必知必会的50个代码实现</li><li><a href="https://github.com/ziishaned/learn-regex" target="_blank" rel="noopener">ziishaned/learn-regex</a> Learn regex the easy way</li><li><a href="https://github.com/tangweikun/awesome-leetcode" target="_blank" rel="noopener">tangweikun/awesome-leetcode</a> 💅 A collection of awesome <code>leetcode</code> solutions</li><li><a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">MisterBooo/LeetCodeAnimation</a> 用动画的形式呈现解<code>LeetCode</code>题目的思路</li></ul><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li><a href="https://github.com/jtyjty99999/mobileTech" target="_blank" rel="noopener">jtyjty99999/mobileTech</a> 移动端知识集合</li><li><a href="https://github.com/AlloyTeam/Mars" target="_blank" rel="noopener">AlloyTeam/Mars</a> 腾讯移动 Web 前端知识库</li><li><a href="https://github.com/hoosin/mobile-web-favorites" target="_blank" rel="noopener">hoosin/mobile-web-favorites</a> 移动开发大杂烩</li><li><a href="https://github.com/JacksonTian/fks" target="_blank" rel="noopener">JacksonTian/fks</a> 前端技能汇总</li><li><a href="https://github.com/dt-fe/weekly" target="_blank" rel="noopener">dt-fe/weekly</a> 前端精读周刊</li><li><a href="https://github.com/baidu-ife/ife" target="_blank" rel="noopener">baidu-ife/ife</a> 百度前端技术学院</li><li><a href="https://github.com/jnoodle/f2e-collect" target="_blank" rel="noopener">jnoodle/f2e-collect</a> 前端网站及资源导航</li><li><a href="https://github.com/qianguyihao/Web" target="_blank" rel="noopener">qianguyihao/Web</a> 前端入门和进阶学习笔记，超详细的Web前端学习图文教程。</li><li><a href="https://github.com/dongyuanxin/blog" target="_blank" rel="noopener">dongyuanxin/blog</a> 📚 专注前端 - 这是一个专注于前端与算法的博客。</li><li><a href="https://github.com/aliyunfe/weekly" target="_blank" rel="noopener">aliyunfe/weekly</a> 《阿里云前端技术周刊》</li><li><a href="https://github.com/fex-team/styleguide" target="_blank" rel="noopener">fex-team/styleguide</a> 百度前端研发团队的文档与源码编写风格</li><li><a href="https://github.com/ddzy/fe-necessary-book" target="_blank" rel="noopener">ddzy/fe-necessary-book</a> :bowtie: 前端开发者必读的精品pdf集合</li><li><a href="https://github.com/Advanced-Frontend/Daily-Interview-Question" target="_blank" rel="noopener">Advanced-Frontend/Daily-Interview-Question</a> 高级前端进阶</li><li><a href="https://github.com/storybookjs/storybook" target="_blank" rel="noopener">storybookjs/storybook</a> 📓 UI component dev &amp; test: <code>React</code>, <code>Vue</code>, <code>Angular</code>, <code>React Native</code>, <code>Ember</code>, <code>Web Components</code> &amp; more!</li><li><a href="https://github.com/unruledboy/WebFrontEndStack" target="_blank" rel="noopener">unruledboy/WebFrontEndStack</a> web front end stack: browsers, platforms, libraries, frameworks, tools etc.</li></ul><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><ul><li><a href="https://github.com/xingshaocheng/architect-awesome" target="_blank" rel="noopener">xingshaocheng/architect-awesome</a> 后端架构师技术图谱</li><li><a href="https://github.com/frank-lam/fullstack-tutorial" target="_blank" rel="noopener">frank-lam/fullstack-tutorial</a> 🚀 fullstack tutorial 2019，后台技术栈/架构师之路/全栈开发社区，春招/秋招/校招/面试</li></ul><h2 id="系统架构"><a href="#系统架构" class="headerlink" title="系统架构"></a>系统架构</h2><ul><li><a href="https://github.com/davideuler/architecture.of.internet-product" target="_blank" rel="noopener">davideuler/architecture.of.internet-product</a> 互联网公司技术架构，微信/淘宝/微博/腾讯/阿里/美团点评/百度/Google/Facebook/Amazon/eBay的架构</li></ul><h2 id="大数据-人工智能"><a href="#大数据-人工智能" class="headerlink" title="大数据/人工智能"></a>大数据/人工智能</h2><ul><li><a href="https://github.com/shijinkui/spark_study" target="_blank" rel="noopener">shijinkui/spark_study</a> <code>Spark</code> 源码阅读笔记</li><li><a href="https://github.com/scutan90/DeepLearning-500-questions" target="_blank" rel="noopener">scutan90/DeepLearning-500-questions</a> 深度学习500问</li><li><a href="https://github.com/Avik-Jain/100-Days-Of-ML-Code" target="_blank" rel="noopener">Avik-Jain/100-Days-Of-ML-Code</a> 100 Days of ML Coding</li><li><a href="https://github.com/josephmisiti/awesome-machine-learning" target="_blank" rel="noopener">josephmisiti/awesome-machine-learning</a> A curated list of awesome Machine Learning frameworks, libraries and software.</li></ul><h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><ul><li><a href="https://github.com/facert/awesome-spider" target="_blank" rel="noopener">facert/awesome-spider</a> 爬虫集合</li></ul><h2 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h2><ul><li><a href="https://github.com/kdn251/interviews" target="_blank" rel="noopener">kdn251/interviews</a> 软件工程技术面试个人指南</li><li><a href="https://github.com/CyC2018/CS-Notes" target="_blank" rel="noopener">CyC2018/CS-Notes</a> 📚 技术面试必备基础知识、<code>Leetcode</code>、计算机操作系统、计算机网络、系统设计、<code>Java</code>、<code>Python</code>、<code>C++</code></li><li><a href="https://github.com/HIT-Alibaba/interview" target="_blank" rel="noopener">HIT-Alibaba/interview</a> 笔试面试知识整理</li><li><a href="https://github.com/jwasham/coding-interview-university" target="_blank" rel="noopener">jwasham/interview-university</a> 一套完整的学习手册帮助自己准备 <code>Google</code> 的面试<a href="https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md" target="_blank" rel="noopener">中文版</a></li><li><a href="https://github.com/MaximAbramchuck/awesome-interview-questions" target="_blank" rel="noopener">MaximAbramchuck/awesome-interview-questions</a> :octocat: A curated awesome list of lists of interview questions. Feel free to contribute! 🎓</li><li><a href="https://github.com/paddingme/Front-end-Web-Development-Interview-Question" target="_blank" rel="noopener">paddingme/Front-end-Web-Development-Interview-Question</a> 前端开发面试题大收集，前端面试集锦 ❤️ 💝 💘</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="https://github.com/LearnShare/Learning-Markdown" target="_blank" rel="noopener">LearnShare/Learning-Markdown</a> <code>Markdown</code> 入门参考</li><li><a href="https://github.com/niezhiyang/open_source_team" target="_blank" rel="noopener">niezhiyang/open_source_team</a> 国内顶尖团队的开源地址</li><li><a href="https://github.com/TeamStuQ/skill-map" target="_blank" rel="noopener">TeamStuQ/skill-map</a> 程序员技能图谱</li><li><a href="https://github.com/phodal/growth-in-action" target="_blank" rel="noopener">phodal/growth-in-action</a> 全栈增长工程师实战</li><li><a href="https://github.com/InterviewMap/CS-Interview-Knowledge-Map" target="_blank" rel="noopener">InterviewMap/CS-Interview-Knowledge-Map</a> 这是一份制作精良、系统的面试图谱。内容包括：前端、计算机网络、算法、数据结构等方面。相信认真学习完这份资料，你会找到自己心仪的工作。</li><li><a href="https://github.com/oldratlee/useful-scripts" target="_blank" rel="noopener">oldratlee/useful-scripts</a> 一些平时实用的脚本</li><li><a href="https://github.com/chaozh/awesome-blockchain-cn" target="_blank" rel="noopener">chaozh/awesome-blockchain-cn</a> 收集所有区块链(BlockChain)技术开发相关资料，包括<code>Fabric</code>和<code>Ethereum</code>开发资料</li><li><a href="https://github.com/justjavac/awesome-wechat-weapp" target="_blank" rel="noopener">justjavac/awesome-wechat-weapp</a> 微信小程序开发资源汇总 💯</li><li><a href="https://github.com/ruanyf/weekly" target="_blank" rel="noopener">ruanyf/weekly</a> 阮一峰技术分享周刊，每周五发布</li><li><a href="https://github.com/EZLippi/practical-programming-books" target="_blank" rel="noopener">EZLippi/practical-programming-books</a> 计算机相关技术资料整理</li><li><a href="https://github.com/mtdvio/every-programmer-should-know" target="_blank" rel="noopener">mtdvio/every-programmer-should-know</a> A collection of (mostly) technical things every software developer should know</li><li><a href="https://github.com/freeCodeCamp/freeCodeCamp" target="_blank" rel="noopener">freeCodeCamp/freeCodeCamp</a> The <a href="https://www.freeCodeCamp.org" target="_blank" rel="noopener">freeCodeCamp</a> open source codebase and curriculum. Learn to code for free together with millions of people.</li><li><a href="https://github.com/tuvtran/project-based-learning" target="_blank" rel="noopener">tuvtran/project-based-learning</a> Curated list of project-based tutorials</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker开启远程访问</title>
      <link href="/post/docker-remote-access.html"/>
      <url>/post/docker-remote-access.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="开启远程端口实现远程api调用"><a href="#开启远程端口实现远程api调用" class="headerlink" title="开启远程端口实现远程api调用"></a>开启远程端口实现远程api调用</h2><blockquote><p>进入到 /lib/systemd/system/docker.service</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</span><br></pre></td></tr></table></figure></div><blockquote><p>找到 ExecStart 行,修改</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;dockerd -H tcp:&#x2F;&#x2F;0.0.0.0:2375 -H unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx内置变量</title>
      <link href="/post/nginx-variable.html"/>
      <url>/post/nginx-variable.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>使用 nginx 服务器时,一定会用到 nginx 内置变量,必须需要获取客户端请求的真实域名/IP</p></blockquote><table><thead><tr><th align="center">name</th><th align="center">description</th></tr></thead><tbody><tr><td align="center">$arg_name</td><td align="center">请求中的的参数名,即<code>?</code>后面的 arg_name=arg_value</td></tr><tr><td align="center">$args</td><td align="center">请求中的参数值</td></tr><tr><td align="center">$query_string</td><td align="center">同 $args</td></tr><tr><td align="center">$binary_remote_addr</td><td align="center">客户端地址的二进制形式,固定长度为4个字节</td></tr><tr><td align="center">$body_bytes_sent</td><td align="center">传输给客户端的字节数,响应头不计算在内;这个变量和<code>Apache</code>的<code>mod_log_config</code>模块中的<code>%B</code>参数保持兼容</td></tr><tr><td align="center">$bytes_sent</td><td align="center">传输给客户端的字节数</td></tr><tr><td align="center">$connection</td><td align="center"><code>TCP</code>连接的序列号</td></tr><tr><td align="center">$connection_requests</td><td align="center"><code>TCP</code>连接当前的请求数量</td></tr><tr><td align="center">$content_length</td><td align="center"><code>Content-Length</code>请求头字段</td></tr><tr><td align="center">$content_type</td><td align="center"><code>Content-Type</code>请求头字段</td></tr><tr><td align="center">$cookie_name</td><td align="center"><code>cookie</code>名称</td></tr><tr><td align="center">$document_root</td><td align="center">当前请求的文档根目录或别名</td></tr><tr><td align="center">$document_uri</td><td align="center">同 <code>$uri</code></td></tr><tr><td align="center">$host</td><td align="center">优先级: <code>HTTP</code> 请求行的主机名 &gt; <code>HOST</code> 请求头字段 &gt; 符合请求的服务器名</td></tr><tr><td align="center">$hostname</td><td align="center">主机名</td></tr><tr><td align="center">$http_name</td><td align="center">匹配任意请求头字段;变量名中的后半部分 name 可以替换成任意请求头字段,如在配置文件中需要获取 http 请求头:<code>Accept-Language</code>,那么将<code>-</code>替换为下划线,大写字母替换为小写,形如:<code>$http_accept_language</code>即可。</td></tr><tr><td align="center">$https</td><td align="center">如果开启了 SSL 安全模式,值为 on,否则为空字符串。</td></tr><tr><td align="center">$is_args</td><td align="center">如果请求中有参数,值为<code>?</code>,否则为空字符串。</td></tr><tr><td align="center">$limit_rate</td><td align="center">用于设置响应的速度限制</td></tr><tr><td align="center">$msec</td><td align="center">当前的 Unix 时间戳</td></tr><tr><td align="center">$nginx_version</td><td align="center">nginx 版本</td></tr><tr><td align="center">$pid</td><td align="center">工作进程的PID</td></tr><tr><td align="center">$pipe</td><td align="center">如果请求来自管道通信,值为<code>p</code>,否则为<code>.</code></td></tr><tr><td align="center">$proxy_protocol_addr</td><td align="center">获取代理访问服务器的客户端地址,如果是直接访问,该值为空字符串</td></tr><tr><td align="center">$realpath_root</td><td align="center">当前请求的文档根目录或别名的真实路径,会将所有符号连接转换为真实路径</td></tr><tr><td align="center">$remote_addr</td><td align="center">客户端地址</td></tr><tr><td align="center">$remote_port</td><td align="center">客户端端口</td></tr><tr><td align="center">$remote_user</td><td align="center">用于<code>HTTP</code>基础认证服务的用户名</td></tr><tr><td align="center">$request</td><td align="center">代表客户端的请求地址</td></tr><tr><td align="center">$request_body</td><td align="center">客户端的请求主体,此变量可在 location 中使用,将请求主体通过<code>proxy_pass</code>、<code>fastcgi_pass</code>、<code>uwsgi_pass</code>和<code>scgi_pass</code>传递给下一级的代理服务器。</td></tr><tr><td align="center">$request_body_file</td><td align="center">将客户端请求主体保存在临时文件中。文件处理结束后,此文件需删除。如果需要之一开启此功能,需要设置<code>client_body_in_file_only</code>。如果将次文件传递给后端的代理服务器,需要禁用<code>request body</code>，即设置<code>proxy_pass_request_body off</code>、<code>fastcgi_pass_request_body off</code>、<code>uwsgi_pass_request_body off</code>或<code>scgi_pass_request_body off</code>。</td></tr><tr><td align="center">$request_completion</td><td align="center">如果请求成功,值为<code>OK</code>,如果请求未完成或者请求不是一个范围请求的最后一部分,则为空。</td></tr><tr><td align="center">$request_filename</td><td align="center">当前连接请求的文件路径,由 root 或 alias 指令与<code>URI</code>请求生成。</td></tr><tr><td align="center">$request_length</td><td align="center">请求的长度 (包括请求的地址,<code>http</code>请求头和请求主体)</td></tr><tr><td align="center">$request_method</td><td align="center">HTTP请求方法</td></tr><tr><td align="center">$request_time</td><td align="center">处理客户端请求使用的时间,从读取客户端的第一个字节开始计时。</td></tr><tr><td align="center">$request_uri</td><td align="center">这个变量等于包含一些客户端请求参数的原始 URI,它无法修改，请查看 $uri 更改或重写 URI,不包含主机名</td></tr><tr><td align="center">$scheme</td><td align="center">请求使用的 Web 协议,<code>http</code>或<code>https</code></td></tr><tr><td align="center">$sent_http_name</td><td align="center">可以设置任意http响应头字段,变量名中的后半部分<code>name</code>可以替换成任意响应头字段,如需要设置响应头<code>Content-length</code>,那么将<code>－</code>替换为下划线,大写字母替换为小写</td></tr><tr><td align="center">$server_addr</td><td align="center">服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。</td></tr><tr><td align="center">$server_name</td><td align="center">服务器名</td></tr><tr><td align="center">$server_port</td><td align="center">服务器端口</td></tr><tr><td align="center">$server_protocol</td><td align="center">服务器的HTTP版本,通常为<code>HTTP/1.0</code>或<code>HTTP/1.1</code></td></tr><tr><td align="center">$status</td><td align="center">HTTP响应代码</td></tr><tr><td align="center">$tcpinfo_rtt $tcpinfo_rttvar $tcpinfo_snd_cwnd $tcpinfo_rcv_space</td><td align="center">客户端TCP连接的具体信息</td></tr><tr><td align="center">$time_iso8601</td><td align="center">服务器时间的 ISO 8610 格式</td></tr><tr><td align="center">$time_local</td><td align="center">服务器时间 LOG Format 格式</td></tr><tr><td align="center">$uri</td><td align="center">请求中的当前<code>URI</code>(不带请求参数，参数位于<code>$args</code>),可以不同于浏览器传递的<code>$request_uri</code>的值,它可以通过内部重定向,或者使用 index 指令进行修改,不包含主机名</td></tr></tbody></table><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot-Mail发送邮件</title>
      <link href="/post/spring-boot-email.html"/>
      <url>/post/spring-boot-email.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="添加-maven-依赖"><a href="#添加-maven-依赖" class="headerlink" title="添加 maven 依赖"></a>添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加 mail 和 thymeleaf 对应的依赖</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="邮件服务器属性配置"><a href="#邮件服务器属性配置" class="headerlink" title="邮件服务器属性配置"></a>邮件服务器属性配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.163.com</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">username</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">smtp:</span></span><br><span class="line">          <span class="attr">starttls:</span></span><br><span class="line">            <span class="attr">required:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">auth:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><blockquote><p>本文使用的是 163 邮箱,若使用其他邮箱,修改对应配置即可</p></blockquote><h2 id="测试发送邮件"><a href="#测试发送邮件" class="headerlink" title="测试发送邮件"></a>测试发送邮件</h2><h3 id="发送文本邮件"><a href="#发送文本邮件" class="headerlink" title="发送文本邮件"></a>发送文本邮件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendSimpleEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage simpleMailMessage = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        simpleMailMessage.setFrom(sender);</span><br><span class="line">        simpleMailMessage.setTo(sender);</span><br><span class="line">        simpleMailMessage.setSubject(<span class="string">"测试主题"</span>);</span><br><span class="line">        simpleMailMessage.setText(<span class="string">"测试内容"</span>);</span><br><span class="line">        mailSender.send(simpleMailMessage);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>测试给自己发送一个文本邮件</p></blockquote><h3 id="发送-Html-邮件"><a href="#发送-Html-邮件" class="headerlink" title="发送 Html 邮件"></a>发送 Html 邮件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendHtmlEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">"测试主题"</span>);</span><br><span class="line">        messageHelper.setText(<span class="string">"&lt;h1 style='color:red;'&gt;测试内容&lt;/h1&gt;"</span>, <span class="keyword">true</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="发送附件邮件"><a href="#发送附件邮件" class="headerlink" title="发送附件邮件"></a>发送附件邮件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendAttachmentsEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">"测试主题"</span>);</span><br><span class="line">        messageHelper.setText(<span class="string">"测试附件"</span>);</span><br><span class="line">        messageHelper.addAttachment(<span class="string">"image.png"</span>, <span class="keyword">new</span> ClassPathResource(<span class="string">"/images/image.png"</span>));</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="发送模板邮件"><a href="#发送模板邮件" class="headerlink" title="发送模板邮件"></a>发送模板邮件</h3><blockquote><p>这个是 thymeleaf 的 html 模板,resource/template/mail-template.html</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Month<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Savings<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">"item:$&#123;data&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;item.name&#125;"</span>&gt;</span>January<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">"$&#123;item.value&#125;"</span>&gt;</span>$100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">BlogServiceApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.mail.username&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendTemplateEmail</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">        MimeMessage message = mailSender.createMimeMessage();</span><br><span class="line">        MimeMessageHelper messageHelper = <span class="keyword">new</span> MimeMessageHelper(message);</span><br><span class="line">        messageHelper.setFrom(sender);</span><br><span class="line">        messageHelper.setTo(sender);</span><br><span class="line">        messageHelper.setSubject(<span class="string">"测试主题"</span>);</span><br><span class="line">        Context context = <span class="keyword">new</span> Context();</span><br><span class="line">        context.setVariables(<span class="keyword">new</span> HashMap&lt;String, Object&gt;() &#123;</span><br><span class="line">            &#123;</span><br><span class="line">                put(<span class="string">"data"</span>, Arrays.asList(</span><br><span class="line">                        create(<span class="string">"January"</span>, <span class="string">"$105"</span>),</span><br><span class="line">                        create(<span class="string">"February"</span>, <span class="string">"$80"</span>),</span><br><span class="line">                        create(<span class="string">"Irena"</span>, <span class="string">"$120"</span>),</span><br><span class="line">                        create(<span class="string">"Saint"</span>, <span class="string">"$74"</span>),</span><br><span class="line">                        create(<span class="string">"Enos"</span>, <span class="string">"$151"</span>),</span><br><span class="line">                        create(<span class="string">"Kevan"</span>, <span class="string">"$25"</span>),</span><br><span class="line">                        create(<span class="string">"Suzy"</span>, <span class="string">"$130"</span>),</span><br><span class="line">                        create(<span class="string">"Trish"</span>, <span class="string">"$111"</span>),</span><br><span class="line">                        create(<span class="string">"Rainy"</span>, <span class="string">"$51"</span>),</span><br><span class="line">                        create(<span class="string">"Rance"</span>, <span class="string">"$77"</span>),</span><br><span class="line">                        create(<span class="string">"Rowena"</span>, <span class="string">"$84"</span>)</span><br><span class="line">                ));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        messageHelper.setText(templateEngine.process(<span class="string">"mail-template"</span>, context), <span class="keyword">true</span>);</span><br><span class="line">        mailSender.send(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>我没在 spring 中配置了视图解析器来解析 thymeleaf 模板,返回视图。<br>spring.thymeleaf.prefix=classpath:/templates/<br>spring.thymeleaf.suffix=.html</p></blockquote><h2 id="完整的-MailUtil"><a href="#完整的-MailUtil" class="headerlink" title="完整的 MailUtil"></a>完整的 MailUtil</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JavaMailSender mailSender;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送方 默认获取 spring.mail.username</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String sender;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> TemplateEngine templateEngine;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">getSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(sender)) &#123;</span><br><span class="line">            sender = SpringContextUtil.getProperty(<span class="string">"spring.mail.username"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> JavaMailSender <span class="title">getMailSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mailSender == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mailSender = SpringContextUtil.getBean(JavaMailSender<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mailSender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> TemplateEngine <span class="title">getTemplateEngine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (templateEngine == <span class="keyword">null</span>) &#123;</span><br><span class="line">            templateEngine = SpringContextUtil.getBean(TemplateEngine<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> templateEngine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(getSender(), <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">(String subject, String... receivers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(getSender(), subject, receivers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MailHelper <span class="title">create</span><span class="params">(String sender, String subject, String... receivers)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MailHelper(sender, subject, receivers);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MailHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String sender;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 接收方列表,set 是为了去重</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Collection&lt;String&gt; receivers = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 抄送人列表,set 是为了去重</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Collection&lt;String&gt; ccs = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 邮件主题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String subject;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 邮件内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> String content;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 是否为 html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> html;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 附件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, InputStreamSource&gt; attachments = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 内联资源</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, Resource&gt; inlines = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        MailHelper(String sender, String subject, String... receivers) &#123;</span><br><span class="line">            <span class="keyword">this</span>.sender = sender;</span><br><span class="line">            <span class="keyword">this</span>.receivers.addAll(Arrays.asList(receivers));</span><br><span class="line">            <span class="keyword">this</span>.subject = subject;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">receiver</span><span class="params">(String... receivers)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.receivers.addAll(Arrays.asList(receivers));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置主题</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">subject</span><span class="params">(String subject)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.subject = subject;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建文本邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> content 内容</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">text</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.content = content;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建 html 邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> content html</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">html</span><span class="params">(String content)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.content = content;</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建模板邮件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> template  模板名称</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> variables 模板变量</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailSender <span class="title">template</span><span class="params">(String template, Map&lt;String, Object&gt; variables)</span> </span>&#123;</span><br><span class="line">            Context context = <span class="keyword">new</span> Context();</span><br><span class="line">            context.setVariables(variables);</span><br><span class="line">            <span class="keyword">this</span>.content = getTemplateEngine().process(template, context);</span><br><span class="line">            <span class="keyword">this</span>.html = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> createMailSender();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建 MailSender</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> MailSender <span class="title">createMailSender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 对参数进行校验</span></span><br><span class="line">            Assert.hasLength(sender, <span class="string">"sender 不能为空"</span>);</span><br><span class="line">            Assert.notEmpty(receivers, <span class="string">"receiver 不能为空"</span>);</span><br><span class="line">            Assert.hasLength(subject, <span class="string">"subject 不能为空"</span>);</span><br><span class="line">            Assert.hasLength(content, <span class="string">"content 不能为空"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MailSender(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加抄送人</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> ccs 抄送人</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addCc</span><span class="params">(String... ccs)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addCc(Arrays.asList(ccs));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加抄送人</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> ccs 抄送人</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addCc</span><span class="params">(Collection&lt;String&gt; ccs)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ccs.addAll(ccs);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> path 附件本地路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, String path)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addAttachment(name, <span class="keyword">new</span> File(path));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> file 附件文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, File file)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.attachments.put(name, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name  附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bytes 附件数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addAttachment(name, <span class="keyword">new</span> ByteArrayInputStream(bytes));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加附件</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name        附件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addAttachment</span><span class="params">(String name, InputStream inputStream)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.attachments.put(name, () -&gt; inputStream);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> path 文件本地路径</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, String path)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> addInline(name, <span class="keyword">new</span> File(path));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name 文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> file 文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, File file)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> FileSystemResource(file));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name  文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bytes 文件数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, <span class="keyword">byte</span>[] bytes)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> ByteArrayResource(bytes));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加内联资源</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name        文件名</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MailHelper <span class="title">addInline</span><span class="params">(String name, InputStream inputStream)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.inlines.put(name, <span class="keyword">new</span> InputStreamResource(inputStream));</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MailSender</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> MailHelper mailHelper;</span><br><span class="line"></span><br><span class="line">        MailSender(MailHelper mailHelper) &#123;</span><br><span class="line">            <span class="keyword">this</span>.mailHelper = mailHelper;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">send</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException </span>&#123;</span><br><span class="line">            MimeMessage message = getMailSender().createMimeMessage();</span><br><span class="line">            MimeMessageHelper helper = <span class="keyword">new</span> MimeMessageHelper(message, <span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 设置📧发送方</span></span><br><span class="line">            helper.setFrom(sender);</span><br><span class="line">            <span class="comment">// 设置📧接收方</span></span><br><span class="line">            helper.setTo(mailHelper.receivers.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]));</span><br><span class="line">            <span class="comment">// 设置📧抄送方</span></span><br><span class="line">            helper.setCc(mailHelper.ccs.toArray(<span class="keyword">new</span> String[<span class="number">0</span>]));</span><br><span class="line">            <span class="comment">// 设置📧主题</span></span><br><span class="line">            helper.setSubject(mailHelper.subject);</span><br><span class="line">            <span class="comment">// 设置📧内容</span></span><br><span class="line">            helper.setText(mailHelper.content, mailHelper.html);</span><br><span class="line">            <span class="comment">// 添加📧附件</span></span><br><span class="line">            <span class="keyword">for</span> (String name : mailHelper.attachments.keySet()) &#123;</span><br><span class="line">                helper.addAttachment(name, mailHelper.attachments.get(name));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 添加📧内联元素</span></span><br><span class="line">            <span class="keyword">for</span> (String name : mailHelper.inlines.keySet()) &#123;</span><br><span class="line">                helper.addInline(name, mailHelper.inlines.get(name));</span><br><span class="line">            &#125;</span><br><span class="line">            log.info(<span class="string">"给 &#123;&#125; 发送邮件 `&#123;&#125;` 成功"</span>, String.join(<span class="string">","</span>, mailHelper.receivers), mailHelper.subject);</span><br><span class="line">            <span class="comment">// 发送📧</span></span><br><span class="line">            mailSender.send(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac终端工具iTerm2</title>
      <link href="/post/mac-terminal-iterm2.html"/>
      <url>/post/mac-terminal-iterm2.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="iTerm2"><a href="#iTerm2" class="headerlink" title="iTerm2"></a>iTerm2</h2><blockquote><p><code>Mac OS</code>自带的终端,用起来虽然有些不太方便,界面也不够友好,<code>iTerm2</code>是一款相对比较好用的终端工具.<code>iTerm2</code>常用操作包括主题选择、声明高亮、自动填充建议、隐藏用户名和主机名、分屏效果等.</p></blockquote><p>下载地址: <a href="https://www.iterm2.com/" target="_blank" rel="noopener">https://www.iterm2.com/</a></p><h3 id="安装Oh-my-zsh"><a href="#安装Oh-my-zsh" class="headerlink" title="安装Oh my zsh"></a>安装Oh my zsh</h3><p>Oh My Zsh</p><p><code>Oh My Zsh</code>它是基于<code>zsh</code>命令行的一个扩展工具集,提供了丰富的扩展功能</p><blockquote><p><code>Mac OS</code>系统默认使用<code>dash</code>作为终端,可以使用命令修改默认使用<code>zsh</code>：</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure></div><blockquote><p>curl 安装方式</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure></div><blockquote><p>wget 安装方式</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh -O -)&quot;</span><br></pre></td></tr></table></figure></div><p>oh-my-zsh <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">开源地址</a></p><h3 id="安装Powerline"><a href="#安装Powerline" class="headerlink" title="安装Powerline"></a>安装<code>Powerline</code></h3><blockquote><p><code>Powerline</code>是一款比较炫酷的状态栏工具<br>使用<code>python</code>的<code>pip</code>命令安装<code>Powerline</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install powerline-status --user</span><br></pre></td></tr></table></figure></div><h3 id="安装PowerFonts"><a href="#安装PowerFonts" class="headerlink" title="安装PowerFonts"></a>安装<code>PowerFonts</code></h3><blockquote><p>安装字体库需要首先将项目git clone至本地，然后执行源码中的install.sh。</p></blockquote><blockquote><p>安装好字体库之后，我们来设置iTerm2的字体，具体的操作是iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Text,在 Font 区域选中Change Font，然后找到 Meslo LG字体。有L、M、S可选，看个人喜好</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/power-fonts-setting.gif" alt></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></div><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>oh-my-zsh <a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes" target="_blank" rel="noopener">主题选择</a></p><blockquote><p>修改<code>~/.zshrc</code>文件<code>ZSH_THEME=主题</code>,然后执行<code>source</code>命令使配置生效</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-scheme.jpg" alt="主题选择"></p><h3 id="安装配色方案"><a href="#安装配色方案" class="headerlink" title="安装配色方案"></a>安装配色方案</h3><blockquote><p>配色方案在使用<code>VIM</code>或<code>Colorful Log</code>时会变得非常有用,同时界面也不会一片黑绿一样死板。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/altercation/solarized</span><br><span class="line"><span class="built_in">cd</span> solarized/iterm2-colors-solarized/</span><br><span class="line">open .</span><br></pre></td></tr></table></figure></div><blockquote><p>在打开的<code>Finder</code>窗口中,双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 即可安装明暗两种配色<br>进入 iTerm2 -&gt; Preferences -&gt; Profiles -&gt; Colors -&gt; Color Presets 中根据个人喜好选择</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/iterm2-colors-solarized-setting.gif" alt="设置配色方案"></p><h3 id="命令补全插件"><a href="#命令补全插件" class="headerlink" title="命令补全插件"></a>命令补全插件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure></div><blockquote><p>打开<code>~/.zshrc</code>文件进行编辑。找到 plugins,加上命令补全插件</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-autosuggestions.jpg" alt="配置命令补全插件"></p><h3 id="安装高亮插件"><a href="#安装高亮插件" class="headerlink" title="安装高亮插件"></a>安装高亮插件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.oh-my-zsh/custom/plugins/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br><span class="line">vi ~/.zshrc</span><br></pre></td></tr></table></figure></div><blockquote><p>打开<code>~/.zshrc</code>文件进行编辑。找到 plugins,请把高亮插件放在最后</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/zsh-syntax-highlighting.jpg" alt="配置高亮插件"></p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> + t 新建标签</span><br><span class="line"><span class="built_in">command</span> + w 关闭标签</span><br><span class="line"><span class="built_in">command</span> + 数字 <span class="built_in">command</span> + 左右方向键    切换标签</span><br><span class="line"><span class="built_in">command</span> + enter 切换全屏</span><br><span class="line"><span class="built_in">command</span> + f 查找</span><br><span class="line"><span class="built_in">command</span> + d 水平分屏</span><br><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + d 垂直分屏</span><br><span class="line"><span class="built_in">command</span> + option + 方向键 <span class="built_in">command</span> + [ 或 <span class="built_in">command</span> + ]    切换屏幕</span><br><span class="line"><span class="built_in">command</span> + ; 查看历史命令</span><br><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + h 查看剪贴板历史</span><br><span class="line">ctrl + u    清除当前行</span><br><span class="line">ctrl + l    清屏</span><br><span class="line">ctrl + a    到行首</span><br><span class="line">ctrl + e    到行尾</span><br><span class="line">ctrl + f/b  前进后退</span><br><span class="line">ctrl + p    上一条命令</span><br><span class="line">ctrl + r    搜索命令历史</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客美化</title>
      <link href="/post/hexo-optimize.html"/>
      <url>/post/hexo-optimize.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:31 GMT+0000 (Coordinated Universal Time) --><p>Hexo 优化</p><h2 id="1-外链跳转插件"><a href="#1-外链跳转插件" class="headerlink" title="1. 外链跳转插件"></a>1. 外链跳转插件</h2><blockquote><p><a href="https://github.com/hvnobug/hexo-external-link" target="_blank" rel="noopener">hexo-external-link</a>是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置 target=’_blank’, rel=’external nofollow noopener noreferrer’ 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hexo-external-link.gif" alt="hexo-external-link" title="hexo-external-link"></p><p>使用 npm 或者 yarn 安装</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## npm 安装</span></span><br><span class="line">npm install hexo-external-link --save</span><br><span class="line"><span class="comment">## yarn 安装</span></span><br><span class="line">yarn add hexo-external-link</span><br></pre></td></tr></table></figure></div><p>在<code>Hexo</code>根目录的<code>_config.yml</code>文件中添加如下配置。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">hexo_external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_base64_encode:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">url_param_name:</span> <span class="string">'u'</span></span><br><span class="line">  <span class="attr">html_file_name:</span> <span class="string">'go.html'</span></span><br><span class="line">  <span class="attr">target_blank:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">link_rel:</span> <span class="string">'external nofollow noopener noreferrer'</span></span><br><span class="line">  <span class="attr">domain:</span> <span class="string">'your_domain'</span> <span class="comment"># 如果开启了防盗链</span></span><br><span class="line">  <span class="attr">safety_chain:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><ul><li><strong>enable</strong> - 是否开启<code>hexo_external_link</code>插件 - 默认 false</li><li><strong>enable_base64_encode</strong> - 是否对跳转<code>url</code>使用<code>base64编码</code> - 默认 fasle</li><li><strong>url_param_name</strong> - url参数名,在跳转到外链传递给<code>html_file_name</code>的参数名 - 默认 ‘u’</li><li><strong>html_file_name</strong> - 跳转到外链的页面文件路径 - 默认 ‘go.html’</li><li><strong>target_blank</strong> - 是否为外链的<code>a</code>标签添加<code>target=&#39;_blank&#39;</code> - 默认 true</li><li><strong>link_rel</strong> - 设置外链的<code>a</code>标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’</li><li><strong>domain</strong> - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host</li><li><strong>safety_chain</strong> - go.html 为了防止外链盗用 对域名进行的判断 - 默认 false</li></ul><h2 id="2-APlayer-网易云歌单"><a href="#2-APlayer-网易云歌单" class="headerlink" title="2. APlayer+网易云歌单"></a>2. APlayer+网易云歌单</h2><blockquote><p><a href="https://aplayer.js.org/" target="_blank" rel="noopener">Aplayer</a> 🍭 Wow, such a beautiful HTML5 music player - 一款可爱/漂亮的<code>HTML5</code>音乐播放器</p></blockquote><p>导入 CDN 文件,以下 CDN 请自行选择,本文使用 unpkg。</p><ol><li><a href="https://unpkg.com/browse/aplayer" target="_blank" rel="noopener">unpkg</a></li><li><a href="https://cdnjs.com/libraries/aplayer" target="_blank" rel="noopener">cdnjs</a></li><li><a href="https://www.jsdelivr.com/package/npm/aplayer" target="_blank" rel="noopener">jsdelivr</a></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://unpkg.com/browse/aplayer@1.10.1/dist/APlayer.min.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/hls.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://unpkg.com/browse/aplayer@1.10.1/dist/APlayer.min.js"</span>/&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>使用网易云 API 动态加载歌单列表</p></blockquote><p><a href="https://github.com/Binaryify/NeteaseCloudMusicApi" target="_blank" rel="noopener">网易云音乐 API</a></p><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/NeteaseCloudMusicApi-github.png" alt></p><p>该项目基于<code>NodeJs</code>的网易云 API 服务,<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=neteasecloudmusicapi" target="_blank" rel="noopener">官方文档</a></p><blockquote><p>通过使用该服务提供的 API 功能就可以实现动态加载歌单列表到 <code>APlayer</code><br>该项目需要部署到服务器,部署参考<a href="https://binaryify.github.io/NeteaseCloudMusicApi/#/?id=%e5%ae%89%e8%a3%85" target="_blank" rel="noopener">官方文档</a><br>博主已经部署好服务,没有服务器的小伙伴可以联系博主(需要配置<code>CORS</code>)<a href="http://hvnobug.com/netease-music-api" target="_blank" rel="noopener">https://www.hvnobug.com/netease-music-api/</a></p></blockquote><p>创建核心 js 文件<code>aplayer.js</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> neteaseMusics = &#123;&#125;;</span><br><span class="line"><span class="comment">/* 默认APi服务地址 */</span></span><br><span class="line"><span class="keyword">const</span> neteaseMusicApiHost = <span class="string">'https://hvnobug.com/netease-music-api'</span>;</span><br><span class="line"><span class="comment">/* 默认歌单 */</span></span><br><span class="line"><span class="keyword">const</span> playerListId = <span class="string">'3083141942'</span>;</span><br><span class="line"><span class="keyword">const</span> initAPlayer = <span class="function">(<span class="params">id, limit</span>) =&gt;</span> &#123;</span><br><span class="line">    id = id || playerListId;</span><br><span class="line">    <span class="comment">/* 对歌曲数量进行限制 */</span></span><br><span class="line">    limit = limit === <span class="literal">undefined</span> || limit &lt;= <span class="number">0</span> ? <span class="number">10</span> : limit &gt; <span class="number">50</span> ? <span class="number">50</span> : limit;</span><br><span class="line">    <span class="keyword">let</span> player = <span class="built_in">document</span>.getElementById(<span class="string">'player'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!player) &#123;</span><br><span class="line">        player = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">        player.id = <span class="string">'player'</span>;</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(player)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 调用 歌单详情接口 */</span></span><br><span class="line">    $.<span class="keyword">get</span>(`$&#123;neteaseMusicApiHost&#125;/playlist/detail?id=$&#123;id&#125;<span class="string">`, (&#123;playlist: &#123;tracks&#125;&#125;) =&gt; &#123;</span></span><br><span class="line"><span class="string">        if (tracks &amp;&amp; tracks.length &gt; 0) &#123;</span></span><br><span class="line"><span class="string">            const musicMap = &#123;&#125;;</span></span><br><span class="line"><span class="string">            tracks.slice(0, limit).forEach(item =&gt; &#123;</span></span><br><span class="line"><span class="string">                const &#123;id, name, ar, al&#125; = item;</span></span><br><span class="line"><span class="string">                const musicDetail = &#123;name&#125;;</span></span><br><span class="line"><span class="string">                if (ar &amp;&amp; ar.length &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                    musicDetail['artist'] = ar.map(a_r =&gt; a_r.name).join(',')</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                if (al &amp;&amp; al['picUrl']) &#123;</span></span><br><span class="line"><span class="string">                    musicDetail['cover'] = al['picUrl']</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                musicMap[`</span>id_$&#123;id.toString()&#125;<span class="string">`] = musicDetail</span></span><br><span class="line"><span class="string">            &#125;);</span></span><br><span class="line"><span class="string">            /* 调用获取歌曲 Url 接口 */</span></span><br><span class="line"><span class="string">            $.get(`</span>$&#123;neteaseMusicApiHost&#125;/song/url?id=$&#123;<span class="built_in">Object</span>.keys(musicMap)</span><br><span class="line">                .map(<span class="function"><span class="params">id</span> =&gt;</span> id.substring(<span class="number">3</span>)).join(<span class="string">','</span>)&#125;<span class="string">`, (&#123;data&#125;) =&gt; &#123;</span></span><br><span class="line"><span class="string">                if (data &amp;&amp; data.length &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                    data.forEach(music =&gt; &#123;</span></span><br><span class="line"><span class="string">                        const &#123;id, url&#125; = music;</span></span><br><span class="line"><span class="string">                        const key = `</span>id_$&#123;id.toString()&#125;<span class="string">`;</span></span><br><span class="line"><span class="string">                        if (url) neteaseMusics[key] = &#123;...musicMap[key], url&#125;</span></span><br><span class="line"><span class="string">                    &#125;);</span></span><br><span class="line"><span class="string">                    renderAPlayer();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">const renderAPlayer = () =&gt; &#123;</span></span><br><span class="line"><span class="string">    /* HLS 支持,需要导入 hls.js */</span></span><br><span class="line"><span class="string">    const customAudioType = &#123;</span></span><br><span class="line"><span class="string">        'customHls': function (audioElement, audio, player) &#123;</span></span><br><span class="line"><span class="string">            if (Hls.isSupported()) &#123;</span></span><br><span class="line"><span class="string">                const hls = new Hls();</span></span><br><span class="line"><span class="string">                hls.loadSource(audio.url);</span></span><br><span class="line"><span class="string">                hls.attachMedia(audioElement)</span></span><br><span class="line"><span class="string">            &#125; else if (audioElement.canPlayType('application/x-mpegURL') ||</span></span><br><span class="line"><span class="string">                audioElement.canPlayType('application/vnd.apple.mpegURL')) &#123;</span></span><br><span class="line"><span class="string">                audioElement.src = audio.url</span></span><br><span class="line"><span class="string">            &#125; else &#123;</span></span><br><span class="line"><span class="string">                player.notice('Error: HLS is not supported.')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">    /* 参数配置请参考官方文档 */</span></span><br><span class="line"><span class="string">    const aPlayer = new APlayer(&#123;</span></span><br><span class="line"><span class="string">        container: player,</span></span><br><span class="line"><span class="string">        fixed: true,</span></span><br><span class="line"><span class="string">        autoplay: false,</span></span><br><span class="line"><span class="string">        order: 'random',</span></span><br><span class="line"><span class="string">        customAudioType: customAudioType</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    aPlayer.list.add(Object.values(neteaseMusics))</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">(function () &#123;</span></span><br><span class="line"><span class="string">    /* 移动端不初始化 APlayer */</span></span><br><span class="line"><span class="string">    ((document.body.clientWidth || document.body.offsetWidth || window.screen.availWidth) &gt; 450) &amp;&amp; initAPlayer();</span></span><br><span class="line"><span class="string">&#125;());</span></span><br></pre></td></tr></table></figure></div><blockquote><p>此时只需要在公共页面( 例如:layout.ejs )加入如下代码:</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/aplayer-layout.png" alt></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- APlayer --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"//unpkg.com/aplayer/dist/APlayer.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/hls.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//unpkg.com/aplayer/dist/APlayer.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/aplayer.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/APlayer.gif" alt></p><h2 id="3-添加-Live2D-看板娘"><a href="#3-添加-Live2D-看板娘" class="headerlink" title="3. 添加 Live2D 看板娘"></a>3. 添加 Live2D 看板娘</h2><blockquote><p>看到很多大佬的 blog 有萌萌的看板娘，但是 hexo-helper-live2d 功能不够强大,没有换装的聊天互动等功能</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/hvnobug-live2d.gif" alt="live2d" title="live2d"></p><blockquote><p>博主使用的是<a href="https://www.fghrsh.net/post/123.html" target="_blank" rel="noopener" title="fghrsh">fghrsh</a>根据<code>waifu-tips.js</code>基础上，实现了套 API 加上了切换 Live2D 模型，随机换装 和 顺序换装。</p></blockquote><p>直接上源码 👇</p><blockquote><p>在公共页面( 例如:layout.ejs )加入如下代码:</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"/css/waifu.css"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waifu"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 提示框 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waifu-tips"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 看板娘画布 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"live2d"</span> <span class="attr">class</span>=<span class="string">"live2d"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 工具栏 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"waifu-tool"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-home"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-chat"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-eye"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-photo"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-info-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"fui-cross"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/waifu-tips.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/live2d.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 初始化看板娘，加载 waifu-tips.json --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'modelId'</span>] = <span class="number">1</span>;                  <span class="comment">// 默认模型 ID</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'modelTexturesId'</span>] = <span class="number">0</span>;          <span class="comment">// 默认材质 ID</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'waifuEdgeSide'</span>] = <span class="string">'left:0'</span>;   <span class="comment">// 看板娘贴边方向，例如 'left:0'(靠左 0px), 'right:30'(靠右 30px)</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'waifuDraggable'</span>] = <span class="string">'disable'</span>;    <span class="comment">// 拖拽样式，例如 'disable'(禁用), 'axis-x'(只能水平拖拽), 'unlimited'(自由拖拽)</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'homePageUrl'</span>] = <span class="string">'https://hvnobug.com'</span>; <span class="comment">// 主页地址 '&#123;URL 网址&#125;'</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'aboutPageUrl'</span>] = <span class="string">'/about'</span>; <span class="comment">// 关于页地址, '&#123;URL 网址&#125;'</span></span></span><br><span class="line"><span class="actionscript">    live2d_settings[<span class="string">'hitokotoAPI'</span>] = <span class="string">'fghrsh.net'</span> <span class="comment">// 一言 API，可选 'lwl12.com', 'hitokoto.cn', 'jinrishici.com'(古诗词)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">/* 在 initModel 前添加 */</span></span></span><br><span class="line"><span class="actionscript">    initModel(<span class="string">"/waifu-tips.json"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>更多 live2d_sttings 配置请<a href="#toc-heading-5">点击这里</a></p></blockquote><h3 id="3-1-waifu-css"><a href="#3-1-waifu-css" class="headerlink" title="3.1. waifu.css"></a>3.1. waifu.css</h3><blockquote><p>waifu.css 文件 👇</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.waifu</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(<span class="number">3px</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">3px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tips</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(<span class="number">224</span>, <span class="number">186</span>, <span class="number">140</span>, <span class="number">0.62</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">236</span>, <span class="number">217</span>, <span class="number">188</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">191</span>, <span class="number">158</span>, <span class="number">118</span>, <span class="number">0.2</span>);</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">animation-delay</span>: <span class="number">5s</span>;</span><br><span class="line">    <span class="attribute">animation-duration</span>: <span class="number">50s</span>;</span><br><span class="line">    <span class="attribute">animation-iteration-count</span>: infinite;</span><br><span class="line">    <span class="attribute">animation-name</span>: shake;</span><br><span class="line">    <span class="attribute">animation-timing-function</span>: ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#aaa</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.waifu-tool</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5b6c7d</span>;</span><br><span class="line">    <span class="attribute">transition</span>: <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu-tool</span> <span class="selector-tag">span</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#34495e</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.waifu</span> <span class="selector-id">#live2d</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> shake &#123;</span><br><span class="line">    2% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    4% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    6% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    8% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    10% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    12% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    14% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    16% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    18% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    20% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    22% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    24% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    26% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    28% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    32% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    34% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    36% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    38% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    40% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    42% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    44% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    46% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    48% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    52% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    54% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    56% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    58% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    60% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    62% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    64% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    66% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    68% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    70% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    72% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    74% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    76% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    78% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">2.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    80% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    82% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    84% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    86% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, <span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    88% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    90% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    92% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(<span class="number">1.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    94% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0.5px</span>, <span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    96% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">2.5px</span>, -<span class="number">0.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    98% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">1.5px</span>, -<span class="number">1.5px</span>) <span class="built_in">rotate</span>(-<span class="number">0.5deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    0%, 100% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">0</span>, <span class="number">0</span>) <span class="built_in">rotate</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Flat-UI-Icons'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'flat-ui-icons-regular.eot'</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'flat-ui-icons-regular.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>), <span class="built_in">url</span>(<span class="string">'flat-ui-icons-regular.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>), <span class="built_in">url</span>(<span class="string">'flat-ui-icons-regular.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>), <span class="built_in">url</span>(<span class="string">'flat-ui-icons-regular.svg#flat-ui-icons-regular'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[class^=<span class="string">"fui-"</span>]</span>,</span><br><span class="line"><span class="selector-attr">[class*=<span class="string">"fui-"</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Flat-UI-Icons'</span>;</span><br><span class="line">  <span class="attribute">speak</span>: none;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">font-weight</span>: normal;</span><br><span class="line">  <span class="attribute">font-variant</span>: normal;</span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-cross</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e609"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-info-circle</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e60f"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-photo</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e62a"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-eye</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e62c"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-chat</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e62d"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-home</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e62e"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fui-user</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"\e631"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-2-waifu-tips-js"><a href="#3-2-waifu-tips-js" class="headerlink" title="3.2. waifu-tips.js"></a>3.2. waifu-tips.js</h3><blockquote><p>waifu-tips.js 文件 👇</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.live2d_settings = <span class="built_in">Array</span>(); <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    く__,.ヘヽ.　　　　/　,ー､ 〉</span></span><br><span class="line"><span class="comment">    　　　　　＼ ', !-─‐-i　/　/´</span></span><br><span class="line"><span class="comment">    　　　 　 ／｀ｰ'　　　 L/／｀ヽ､            Live2D 看板娘 参数设置</span></span><br><span class="line"><span class="comment">    　　 　 /　 ／,　 /|　 ,　 ,　　　 ',                                           Version 1.4.2</span></span><br><span class="line"><span class="comment">    　　　ｲ 　/ /-‐/　ｉ　L_ ﾊ ヽ!　 i                            Update 2018.11.12</span></span><br><span class="line"><span class="comment">    　　　 ﾚ ﾍ 7ｲ｀ﾄ　 ﾚ'ｧ-ﾄ､!ハ|　 |  </span></span><br><span class="line"><span class="comment">    　　　　 !,/7 '0'　　 ´0iソ| 　 |　　　</span></span><br><span class="line"><span class="comment">    　　　　 |.从"　　_　　 ,,,, / |./ 　 |             网页添加 Live2D 看板娘</span></span><br><span class="line"><span class="comment">    　　　　 ﾚ'| i＞.､,,__　_,.イ / 　.i 　|                    https://www.fghrsh.net/post/123.html</span></span><br><span class="line"><span class="comment">    　　　　　 ﾚ'| | / k_７_/ﾚ'ヽ,　ﾊ.　|           </span></span><br><span class="line"><span class="comment">    　　　　　　 | |/i 〈|/　 i　,.ﾍ |　i　|    Thanks</span></span><br><span class="line"><span class="comment">    　　　　　　.|/ /　ｉ： 　 ﾍ!　　＼　|          journey-ad / https://github.com/journey-ad/live2d_src</span></span><br><span class="line"><span class="comment">    　　　 　 　 kヽ&gt;､ﾊ 　 _,.ﾍ､ 　 /､!            xiazeyu / https://github.com/xiazeyu/live2d-widget.js</span></span><br><span class="line"><span class="comment">    　　　　　　 !'〈//｀Ｔ´', ＼ ｀'7'ｰr'          Live2d Cubism SDK WebGL 2.1 Projrct &amp; All model authors.</span></span><br><span class="line"><span class="comment">    　　　　　　 ﾚ'ヽL__|___i,___,ンﾚ|ノ</span></span><br><span class="line"><span class="comment">    　　　　　 　　　ﾄ-,/　|___./</span></span><br><span class="line"><span class="comment">    　　　　　 　　　'ｰ'　　!_,.:*********************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 后端接口</span></span><br><span class="line">live2d_settings[<span class="string">'modelAPI'</span>]             = <span class="string">'//live2d.fghrsh.net/api/'</span>;   <span class="comment">// 自建 API 修改这里</span></span><br><span class="line">live2d_settings[<span class="string">'tipsMessage'</span>]          = <span class="string">'waifu-tips.json'</span>;            <span class="comment">// 同目录下可省略路径</span></span><br><span class="line">live2d_settings[<span class="string">'hitokotoAPI'</span>]          = <span class="string">'lwl12.com'</span>;                  <span class="comment">// 一言 API，可选 'lwl12.com', 'hitokoto.cn', 'jinrishici.com'(古诗词)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认模型</span></span><br><span class="line">live2d_settings[<span class="string">'modelId'</span>]              = <span class="number">1</span>;            <span class="comment">// 默认模型 ID，可在 F12 控制台找到</span></span><br><span class="line">live2d_settings[<span class="string">'modelTexturesId'</span>]      = <span class="number">53</span>;           <span class="comment">// 默认材质 ID，可在 F12 控制台找到</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具栏设置</span></span><br><span class="line">live2d_settings[<span class="string">'showToolMenu'</span>]         = <span class="literal">true</span>;         <span class="comment">// 显示 工具栏          ，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canCloseLive2d'</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示 关闭看板娘  按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canSwitchModel'</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示 模型切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canSwitchTextures'</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 材质切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canSwitchHitokoto'</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 一言切换    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canTakeScreenshot'</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 看板娘截图  按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canTurnToHomePage'</span>]    = <span class="literal">true</span>;         <span class="comment">// 显示 返回首页    按钮，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'canTurnToAboutPage'</span>]   = <span class="literal">true</span>;         <span class="comment">// 显示 跳转关于页  按钮，可选 true(真), false(假)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 模型切换模式</span></span><br><span class="line">live2d_settings[<span class="string">'modelStorage'</span>]         = <span class="literal">true</span>;         <span class="comment">// 记录 ID (刷新后恢复)，可选 true(真), false(假)</span></span><br><span class="line">live2d_settings[<span class="string">'modelRandMode'</span>]        = <span class="string">'switch'</span>;     <span class="comment">// 模型切换，可选 'rand'(随机), 'switch'(顺序)</span></span><br><span class="line">live2d_settings[<span class="string">'modelTexturesRandMode'</span>]= <span class="string">'rand'</span>;       <span class="comment">// 材质切换，可选 'rand'(随机), 'switch'(顺序)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 提示消息选项</span></span><br><span class="line">live2d_settings[<span class="string">'showHitokoto'</span>]         = <span class="literal">true</span>;         <span class="comment">// 显示一言</span></span><br><span class="line">live2d_settings[<span class="string">'showF12Status'</span>]        = <span class="literal">true</span>;         <span class="comment">// 显示加载状态</span></span><br><span class="line">live2d_settings[<span class="string">'showF12Message'</span>]       = <span class="literal">false</span>;        <span class="comment">// 显示看板娘消息</span></span><br><span class="line">live2d_settings[<span class="string">'showF12OpenMsg'</span>]       = <span class="literal">true</span>;         <span class="comment">// 显示控制台打开提示</span></span><br><span class="line">live2d_settings[<span class="string">'showCopyMessage'</span>]      = <span class="literal">true</span>;         <span class="comment">// 显示 复制内容 提示</span></span><br><span class="line">live2d_settings[<span class="string">'showWelcomeMessage'</span>]   = <span class="literal">true</span>;         <span class="comment">// 显示进入面页欢迎词</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//看板娘样式设置</span></span><br><span class="line">live2d_settings[<span class="string">'waifuSize'</span>]            = <span class="string">'280x250'</span>;    <span class="comment">// 看板娘大小，例如 '280x250', '600x535'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuTipsSize'</span>]        = <span class="string">'250x70'</span>;     <span class="comment">// 提示框大小，例如 '250x70', '570x150'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuFontSize'</span>]        = <span class="string">'12px'</span>;       <span class="comment">// 提示框字体，例如 '12px', '30px'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuToolFont'</span>]        = <span class="string">'14px'</span>;       <span class="comment">// 工具栏字体，例如 '14px', '36px'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuToolLine'</span>]        = <span class="string">'20px'</span>;       <span class="comment">// 工具栏行高，例如 '20px', '36px'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuToolTop'</span>]         = <span class="string">'0px'</span>         <span class="comment">// 工具栏顶部边距，例如 '0px', '-60px'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuMinWidth'</span>]        = <span class="string">'768px'</span>;      <span class="comment">// 面页小于 指定宽度 隐藏看板娘，例如 'disable'(禁用), '768px'</span></span><br><span class="line">live2d_settings[<span class="string">'waifuEdgeSide'</span>]        = <span class="string">'left:0'</span>;     <span class="comment">// 看板娘贴边方向，例如 'left:0'(靠左 0px), 'right:30'(靠右 30px)</span></span><br><span class="line">live2d_settings[<span class="string">'waifuDraggable'</span>]       = <span class="string">'disable'</span>;    <span class="comment">// 拖拽样式，例如 'disable'(禁用), 'axis-x'(只能水平拖拽), 'unlimited'(自由拖拽)</span></span><br><span class="line">live2d_settings[<span class="string">'waifuDraggableRevert'</span>] = <span class="literal">true</span>;         <span class="comment">// 松开鼠标还原拖拽位置，可选 true(真), false(假)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他杂项设置</span></span><br><span class="line">live2d_settings[<span class="string">'l2dVersion'</span>]           = <span class="string">'1.4.2'</span>;        <span class="comment">// 当前版本</span></span><br><span class="line">live2d_settings[<span class="string">'l2dVerDate'</span>]           = <span class="string">'2018.11.12'</span>; <span class="comment">// 版本更新日期</span></span><br><span class="line">live2d_settings[<span class="string">'homePageUrl'</span>]          = <span class="string">'auto'</span>;       <span class="comment">// 主页地址，可选 'auto'(自动), '&#123;URL 网址&#125;'</span></span><br><span class="line">live2d_settings[<span class="string">'aboutPageUrl'</span>]         = <span class="string">'https://www.fghrsh.net/post/123.html'</span>;   <span class="comment">// 关于页地址, '&#123;URL 网址&#125;'</span></span><br><span class="line">live2d_settings[<span class="string">'screenshotCaptureName'</span>]= <span class="string">'live2d.png'</span>; <span class="comment">// 看板娘截图文件名，例如 'live2d.png'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************************************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">String</span>.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> tokenReg = <span class="regexp">/(\\)?\&#123;([^\&#123;\&#125;\\]+)(\\)?\&#125;/g</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(tokenReg, <span class="function"><span class="keyword">function</span> (<span class="params">word, slash1, token, slash2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (slash1 || slash2) &#123; <span class="keyword">return</span> word.replace(<span class="string">'\\'</span>, <span class="string">''</span>); &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> variables = token.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>).split(<span class="string">'.'</span>);</span><br><span class="line">        <span class="keyword">var</span> currentObject = context;</span><br><span class="line">        <span class="keyword">var</span> i, length, variable;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>, length = variables.length; i &lt; length; ++i) &#123;</span><br><span class="line">            variable = variables[i];</span><br><span class="line">            currentObject = currentObject[variable];</span><br><span class="line">            <span class="keyword">if</span> (currentObject === <span class="literal">undefined</span> || currentObject === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentObject;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> re = <span class="regexp">/x/</span>;</span><br><span class="line"><span class="built_in">console</span>.log(re);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">empty</span>(<span class="params">obj</span>) </span>&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> obj==<span class="string">"undefined"</span>||obj==<span class="literal">null</span>||obj==<span class="string">""</span>?<span class="literal">true</span>:<span class="literal">false</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandText</span>(<span class="params">text</span>) </span>&#123;<span class="keyword">return</span> <span class="built_in">Array</span>.isArray(text) ? text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>)<span class="number">-1</span>] : text&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showMessage</span>(<span class="params">text, timeout, flag</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(flag || sessionStorage.getItem(<span class="string">'waifu-text'</span>) === <span class="string">''</span> || sessionStorage.getItem(<span class="string">'waifu-text'</span>) === <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(text)) text = text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>)<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span> (live2d_settings.showF12Message) <span class="built_in">console</span>.log(<span class="string">'[Message]'</span>, text.replace(<span class="regexp">/&lt;[^&lt;&gt;]+&gt;/g</span>,<span class="string">''</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(flag) sessionStorage.setItem(<span class="string">'waifu-text'</span>, text);</span><br><span class="line">        </span><br><span class="line">        $(<span class="string">'.waifu-tips'</span>).stop();</span><br><span class="line">        $(<span class="string">'.waifu-tips'</span>).html(text).fadeTo(<span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (timeout === <span class="literal">undefined</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">        hideMessage(timeout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hideMessage</span>(<span class="params">timeout</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.waifu-tips'</span>).stop().css(<span class="string">'opacity'</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (timeout === <span class="literal">undefined</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;sessionStorage.removeItem(<span class="string">'waifu-text'</span>)&#125;, timeout);</span><br><span class="line">    $(<span class="string">'.waifu-tips'</span>).delay(timeout).fadeTo(<span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initModel</span>(<span class="params">waifuPath, type</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* console welcome message */</span></span><br><span class="line">    <span class="built_in">eval</span>(<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">''</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">''</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">'\\w+'</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+e(c)+<span class="string">'\\b'</span>,<span class="string">'g'</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">'8.d(" ");8.d("\\U,.\\y\\5.\\1\\1\\1\\1/\\1,\\u\\2 \\H\\n\\1\\1\\1\\1\\1\\b \', !-\\r\\j-i\\1/\\1/\\g\\n\\1\\1\\1 \\1 \\a\\4\\f\'\\1\\1\\1 L/\\a\\4\\5\\2\\n\\1\\1 \\1 /\\1 \\a,\\1 /|\\1 ,\\1 ,\\1\\1\\1 \',\\n\\1\\1\\1\\q \\1/ /-\\j/\\1\\h\\E \\9 \\5!\\1 i\\n\\1\\1\\1 \\3 \\6 7\\q\\4\\c\\1 \\3\'\\s-\\c\\2!\\t|\\1 |\\n\\1\\1\\1\\1 !,/7 \'0\'\\1\\1 \\X\\w| \\1 |\\1\\1\\1\\n\\1\\1\\1\\1 |.\\x\\"\\1\\l\\1\\1 ,,,, / |./ \\1 |\\n\\1\\1\\1\\1 \\3\'| i\\z.\\2,,A\\l,.\\B / \\1.i \\1|\\n\\1\\1\\1\\1\\1 \\3\'| | / C\\D/\\3\'\\5,\\1\\9.\\1|\\n\\1\\1\\1\\1\\1\\1 | |/i \\m|/\\1 i\\1,.\\6 |\\F\\1|\\n\\1\\1\\1\\1\\1\\1.|/ /\\1\\h\\G \\1 \\6!\\1\\1\\b\\1|\\n\\1\\1\\1 \\1 \\1 k\\5&gt;\\2\\9 \\1 o,.\\6\\2 \\1 /\\2!\\n\\1\\1\\1\\1\\1\\1 !\'\\m//\\4\\I\\g\', \\b \\4\'7\'\\J\'\\n\\1\\1\\1\\1\\1\\1 \\3\'\\K|M,p,\\O\\3|\\P\\n\\1\\1\\1\\1\\1 \\1\\1\\1\\c-,/\\1|p./\\n\\1\\1\\1\\1\\1 \\1\\1\\1\'\\f\'\\1\\1!o,.:\\Q \\R\\S\\T v"+e.V+" / W "+e.N);8.d(" ");'</span>,<span class="number">60</span>,<span class="number">60</span>,<span class="string">'|u3000|uff64|uff9a|uff40|u30fd|uff8d||console|uff8a|uff0f|uff3c|uff84|log|live2d_settings|uff70|u00b4|uff49||u2010||u3000_|u3008||_|___|uff72|u2500|uff67|u30cf|u30fc||u30bd|u4ece|u30d8|uff1e|__|u30a4|k_|uff17_|u3000L_|u3000i|uff1a|u3009|uff34|uff70r|u30fdL__||___i|l2dVerDate|u30f3|u30ce|nLive2D|u770b|u677f|u5a18|u304f__|l2dVersion|FGHRSH|u00b40i'</span>.split(<span class="string">'|'</span>),<span class="number">0</span>,&#123;&#125;));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断 JQuery */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>($.ajax) != <span class="string">'function'</span>) <span class="keyword">typeof</span>(jQuery.ajax) == <span class="string">'function'</span> ? <span class="built_in">window</span>.$ = jQuery : <span class="built_in">console</span>.log(<span class="string">'[Error] JQuery is not defined.'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 加载看板娘样式 */</span></span><br><span class="line">    live2d_settings.waifuSize = live2d_settings.waifuSize.split(<span class="string">'x'</span>);</span><br><span class="line">    live2d_settings.waifuTipsSize = live2d_settings.waifuTipsSize.split(<span class="string">'x'</span>);</span><br><span class="line">    live2d_settings.waifuEdgeSide = live2d_settings.waifuEdgeSide.split(<span class="string">':'</span>);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">"#live2d"</span>).attr(<span class="string">"width"</span>,live2d_settings.waifuSize[<span class="number">0</span>]);</span><br><span class="line">    $(<span class="string">"#live2d"</span>).attr(<span class="string">"height"</span>,live2d_settings.waifuSize[<span class="number">1</span>]);</span><br><span class="line">    $(<span class="string">".waifu-tips"</span>).width(live2d_settings.waifuTipsSize[<span class="number">0</span>]);</span><br><span class="line">    $(<span class="string">".waifu-tips"</span>).height(live2d_settings.waifuTipsSize[<span class="number">1</span>]);</span><br><span class="line">    $(<span class="string">".waifu-tips"</span>).css(<span class="string">"top"</span>,live2d_settings.waifuToolTop);</span><br><span class="line">    $(<span class="string">".waifu-tips"</span>).css(<span class="string">"font-size"</span>,live2d_settings.waifuFontSize);</span><br><span class="line">    $(<span class="string">".waifu-tool"</span>).css(<span class="string">"font-size"</span>,live2d_settings.waifuToolFont);</span><br><span class="line">    $(<span class="string">".waifu-tool span"</span>).css(<span class="string">"line-height"</span>,live2d_settings.waifuToolLine);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.waifuEdgeSide[<span class="number">0</span>] == <span class="string">'left'</span>) $(<span class="string">".waifu"</span>).css(<span class="string">"left"</span>,live2d_settings.waifuEdgeSide[<span class="number">1</span>]+<span class="string">'px'</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (live2d_settings.waifuEdgeSide[<span class="number">0</span>] == <span class="string">'right'</span>) $(<span class="string">".waifu"</span>).css(<span class="string">"right"</span>,live2d_settings.waifuEdgeSide[<span class="number">1</span>]+<span class="string">'px'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.waifuResize = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; $(<span class="built_in">window</span>).width() &lt;= <span class="built_in">Number</span>(live2d_settings.waifuMinWidth.replace(<span class="string">'px'</span>,<span class="string">''</span>)) ? $(<span class="string">".waifu"</span>).hide() : $(<span class="string">".waifu"</span>).show(); &#125;;</span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.waifuMinWidth != <span class="string">'disable'</span>) &#123; waifuResize(); $(<span class="built_in">window</span>).resize(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;waifuResize()&#125;); &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (live2d_settings.waifuDraggable == <span class="string">'axis-x'</span>) $(<span class="string">".waifu"</span>).draggable(&#123; <span class="attr">axis</span>: <span class="string">"x"</span>, <span class="attr">revert</span>: live2d_settings.waifuDraggableRevert &#125;);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (live2d_settings.waifuDraggable == <span class="string">'unlimited'</span>) $(<span class="string">".waifu"</span>).draggable(&#123; <span class="attr">revert</span>: live2d_settings.waifuDraggableRevert &#125;);</span><br><span class="line">        <span class="keyword">else</span> $(<span class="string">".waifu"</span>).css(<span class="string">"transition"</span>, <span class="string">'all .3s ease-in-out'</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123; <span class="built_in">console</span>.log(<span class="string">'[Error] JQuery UI is not defined.'</span>) &#125;</span><br><span class="line">    </span><br><span class="line">    live2d_settings.homePageUrl == <span class="string">'auto'</span> ? <span class="built_in">window</span>.location.protocol+<span class="string">'//'</span>+<span class="built_in">window</span>.location.hostname+<span class="string">'/'</span> : live2d_settings.homePageUrl;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.protocol == <span class="string">'file:'</span> &amp;&amp; live2d_settings.modelAPI.substr(<span class="number">0</span>,<span class="number">2</span>) == <span class="string">'//'</span>) live2d_settings.modelAPI = <span class="string">'http:'</span>+live2d_settings.modelAPI;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-home'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//window.location = 'https://www.fghrsh.net/';</span></span><br><span class="line">        <span class="built_in">window</span>.location = live2d_settings.homePageUrl;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-info-circle'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//window.open('https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-02');</span></span><br><span class="line">        <span class="built_in">window</span>.open(live2d_settings.aboutPageUrl);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span>(waifuPath) == <span class="string">"object"</span>) loadTipsMessage(waifuPath); <span class="keyword">else</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: <span class="literal">true</span>,</span><br><span class="line">            url: waifuPath == <span class="string">''</span> ? live2d_settings.tipsMessage : (waifuPath.substr(waifuPath.length<span class="number">-15</span>)==<span class="string">'waifu-tips.json'</span>?waifuPath:waifuPath+<span class="string">'waifu-tips.json'</span>),</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>)</span>&#123; loadTipsMessage(result); &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.showToolMenu) $(<span class="string">'.waifu-tool'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canCloseLive2d) $(<span class="string">'.waifu-tool .fui-cross'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchModel) $(<span class="string">'.waifu-tool .fui-eye'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchTextures) $(<span class="string">'.waifu-tool .fui-user'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canSwitchHitokoto) $(<span class="string">'.waifu-tool .fui-chat'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTakeScreenshot) $(<span class="string">'.waifu-tool .fui-photo'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTurnToHomePage) $(<span class="string">'.waifu-tool .fui-home'</span>).hide();</span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.canTurnToAboutPage) $(<span class="string">'.waifu-tool .fui-info-circle'</span>).hide();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (waifuPath === <span class="literal">undefined</span>) waifuPath = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> modelId = localStorage.getItem(<span class="string">'modelId'</span>);</span><br><span class="line">    <span class="keyword">var</span> modelTexturesId = localStorage.getItem(<span class="string">'modelTexturesId'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!live2d_settings.modelStorage || modelId == <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = live2d_settings.modelId;</span><br><span class="line">        <span class="keyword">var</span> modelTexturesId = live2d_settings.modelTexturesId;</span><br><span class="line">    &#125; loadModel(modelId, modelTexturesId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadModel</span>(<span class="params">modelId, modelTexturesId=<span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.modelStorage) &#123;</span><br><span class="line">        localStorage.setItem(<span class="string">'modelId'</span>, modelId);</span><br><span class="line">        localStorage.setItem(<span class="string">'modelTexturesId'</span>, modelTexturesId);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        sessionStorage.setItem(<span class="string">'modelId'</span>, modelId);</span><br><span class="line">        sessionStorage.setItem(<span class="string">'modelTexturesId'</span>, modelTexturesId);</span><br><span class="line">    &#125; loadlive2d(<span class="string">'live2d'</span>, live2d_settings.modelAPI+<span class="string">'get/?id='</span>+modelId+<span class="string">'-'</span>+modelTexturesId, (live2d_settings.showF12Status ? <span class="built_in">console</span>.log(<span class="string">'[Status]'</span>,<span class="string">'live2d'</span>,<span class="string">'模型'</span>,modelId+<span class="string">'-'</span>+modelTexturesId,<span class="string">'加载完成'</span>):<span class="literal">null</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadTipsMessage</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">window</span>.waifu_tips = result;</span><br><span class="line"></span><br><span class="line">    $.each(result.mouseover, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">"mouseover"</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">text</span>: $(<span class="keyword">this</span>).text()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">3000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $.each(result.click, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">"click"</span>, tips.selector, <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">text</span>: $(<span class="keyword">this</span>).text()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    $.each(result.seasons, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">        <span class="keyword">var</span> after = tips.date.split(<span class="string">'-'</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> before = tips.date.split(<span class="string">'-'</span>)[<span class="number">1</span>] || after;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>((after.split(<span class="string">'/'</span>)[<span class="number">0</span>] &lt;= now.getMonth()+<span class="number">1</span> &amp;&amp; now.getMonth()+<span class="number">1</span> &lt;= before.split(<span class="string">'/'</span>)[<span class="number">0</span>]) &amp;&amp; </span><br><span class="line">           (after.split(<span class="string">'/'</span>)[<span class="number">1</span>] &lt;= now.getDate() &amp;&amp; now.getDate() &lt;= before.split(<span class="string">'/'</span>)[<span class="number">1</span>]))&#123;</span><br><span class="line">            <span class="keyword">var</span> text = getRandText(tips.text);</span><br><span class="line">            text = text.render(&#123;<span class="attr">year</span>: now.getFullYear()&#125;);</span><br><span class="line">            showMessage(text, <span class="number">6000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showF12OpenMsg) &#123;</span><br><span class="line">        re.toString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            showMessage(getRandText(result.waifu.console_open_msg), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showCopyMessage) &#123;</span><br><span class="line">        $(<span class="built_in">document</span>).on(<span class="string">'copy'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            showMessage(getRandText(result.waifu.copy_message), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-photo'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        showMessage(getRandText(result.waifu.screenshot_message), <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">window</span>.Live2D.captureName = live2d_settings.screenshotCaptureName;</span><br><span class="line">        <span class="built_in">window</span>.Live2D.captureFrame = <span class="literal">true</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-cross'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        sessionStorage.setItem(<span class="string">'waifu-dsiplay'</span>, <span class="string">'none'</span>);</span><br><span class="line">        showMessage(getRandText(result.waifu.hidden_message), <span class="number">1300</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;$(<span class="string">'.waifu'</span>).hide();&#125;, <span class="number">1300</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">window</span>.showWelcomeMessage = <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> text;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.location.href == live2d_settings.homePageUrl) &#123;</span><br><span class="line">            <span class="keyword">var</span> now = (<span class="keyword">new</span> <span class="built_in">Date</span>()).getHours();</span><br><span class="line">            <span class="keyword">if</span> (now &gt; <span class="number">23</span> || now &lt;= <span class="number">5</span>) text = getRandText(result.waifu.hour_tips.t23<span class="number">-5</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">5</span> &amp;&amp; now &lt;= <span class="number">7</span>) text = getRandText(result.waifu.hour_tips.t5<span class="number">-7</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">7</span> &amp;&amp; now &lt;= <span class="number">11</span>) text = getRandText(result.waifu.hour_tips.t7<span class="number">-11</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">11</span> &amp;&amp; now &lt;= <span class="number">14</span>) text = getRandText(result.waifu.hour_tips.t11<span class="number">-14</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">14</span> &amp;&amp; now &lt;= <span class="number">17</span>) text = getRandText(result.waifu.hour_tips.t14<span class="number">-17</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">17</span> &amp;&amp; now &lt;= <span class="number">19</span>) text = getRandText(result.waifu.hour_tips.t17<span class="number">-19</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">19</span> &amp;&amp; now &lt;= <span class="number">21</span>) text = getRandText(result.waifu.hour_tips.t19<span class="number">-21</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (now &gt; <span class="number">21</span> &amp;&amp; now &lt;= <span class="number">23</span>) text = getRandText(result.waifu.hour_tips.t21<span class="number">-23</span>);</span><br><span class="line">            <span class="keyword">else</span> text = getRandText(result.waifu.hour_tips.default);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> referrer_message = result.waifu.referrer_message;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.referrer !== <span class="string">''</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> referrer = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span><br><span class="line">                referrer.href = <span class="built_in">document</span>.referrer;</span><br><span class="line">                <span class="keyword">var</span> domain = referrer.hostname.split(<span class="string">'.'</span>)[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">window</span>.location.hostname == referrer.hostname)</span><br><span class="line">                    text = referrer_message.localhost[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.localhost[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.localhost[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">'baidu'</span>)</span><br><span class="line">                    text = referrer_message.baidu[<span class="number">0</span>] + referrer.search.split(<span class="string">'&amp;wd='</span>)[<span class="number">1</span>].split(<span class="string">'&amp;'</span>)[<span class="number">0</span>] + referrer_message.baidu[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">'so'</span>)</span><br><span class="line">                    text = referrer_message.so[<span class="number">0</span>] + referrer.search.split(<span class="string">'&amp;q='</span>)[<span class="number">1</span>].split(<span class="string">'&amp;'</span>)[<span class="number">0</span>] + referrer_message.so[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (domain == <span class="string">'google'</span>)</span><br><span class="line">                    text = referrer_message.google[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.google[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.google[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    $.each(result.waifu.referrer_hostname, <span class="function"><span class="keyword">function</span>(<span class="params">i,val</span>) </span>&#123;<span class="keyword">if</span> (i==referrer.hostname) referrer.hostname = getRandText(val)&#125;);</span><br><span class="line">                    text = referrer_message.default[<span class="number">0</span>] + referrer.hostname + referrer_message.default[<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> text = referrer_message.none[<span class="number">0</span>] + <span class="built_in">document</span>.title.split(referrer_message.none[<span class="number">2</span>])[<span class="number">0</span>] + referrer_message.none[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        showMessage(text, <span class="number">6000</span>);</span><br><span class="line">    &#125;; <span class="keyword">if</span> (live2d_settings.showWelcomeMessage) showWelcomeMessage(result);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> waifu_tips = result.waifu;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadOtherModel</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = modelStorageGetItem(<span class="string">'modelId'</span>);</span><br><span class="line">        <span class="keyword">var</span> modelRandMode = live2d_settings.modelRandMode;</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: modelRandMode == <span class="string">'switch'</span> ? <span class="literal">true</span> : <span class="literal">false</span>,</span><br><span class="line">            url: live2d_settings.modelAPI+modelRandMode+<span class="string">'/?id='</span>+modelId,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">                loadModel(result.model[<span class="string">'id'</span>]);</span><br><span class="line">                <span class="keyword">var</span> message = result.model[<span class="string">'message'</span>];</span><br><span class="line">                $.each(waifu_tips.model_message, <span class="function"><span class="keyword">function</span>(<span class="params">i,val</span>) </span>&#123;<span class="keyword">if</span> (i==result.model[<span class="string">'id'</span>]) message = getRandText(val)&#125;);</span><br><span class="line">                showMessage(message, <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">loadRandTextures</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> modelId = modelStorageGetItem(<span class="string">'modelId'</span>);</span><br><span class="line">        <span class="keyword">var</span> modelTexturesId = modelStorageGetItem(<span class="string">'modelTexturesId'</span>);</span><br><span class="line">        <span class="keyword">var</span> modelTexturesRandMode = live2d_settings.modelTexturesRandMode;</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: modelTexturesRandMode == <span class="string">'switch'</span> ? <span class="literal">true</span> : <span class="literal">false</span>,</span><br><span class="line">            url: live2d_settings.modelAPI+modelTexturesRandMode+<span class="string">'_textures/?id='</span>+modelId+<span class="string">'-'</span>+modelTexturesId,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (result.textures[<span class="string">'id'</span>] == <span class="number">1</span> &amp;&amp; (modelTexturesId == <span class="number">1</span> || modelTexturesId == <span class="number">0</span>))</span><br><span class="line">                    showMessage(waifu_tips.load_rand_textures[<span class="number">0</span>], <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">else</span> showMessage(waifu_tips.load_rand_textures[<span class="number">1</span>], <span class="number">3000</span>, <span class="literal">true</span>);</span><br><span class="line">                loadModel(modelId, result.textures[<span class="string">'id'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">modelStorageGetItem</span>(<span class="params">key</span>) </span>&#123; <span class="keyword">return</span> live2d_settings.modelStorage ? localStorage.getItem(key) : sessionStorage.getItem(key); &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 检测用户活动状态，并在空闲时显示一言 */</span></span><br><span class="line">    <span class="keyword">if</span> (live2d_settings.showHitokoto) &#123;</span><br><span class="line">        <span class="built_in">window</span>.getActed = <span class="literal">false</span>; <span class="built_in">window</span>.hitokotoTimer = <span class="number">0</span>; <span class="built_in">window</span>.hitokotoInterval = <span class="literal">false</span>;</span><br><span class="line">        $(<span class="built_in">document</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;getActed = <span class="literal">true</span>;&#125;).keydown(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;getActed = <span class="literal">true</span>;&#125;);</span><br><span class="line">        setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; <span class="keyword">if</span> (!getActed) ifActed(); <span class="keyword">else</span> elseActed(); &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ifActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!hitokotoInterval) &#123;</span><br><span class="line">            hitokotoInterval = <span class="literal">true</span>;</span><br><span class="line">            hitokotoTimer = <span class="built_in">window</span>.setInterval(showHitokotoActed, <span class="number">30000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">elseActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        getActed = hitokotoInterval = <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">window</span>.clearInterval(hitokotoTimer);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showHitokotoActed</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">document</span>)[<span class="number">0</span>].visibilityState == <span class="string">'visible'</span>) showHitokoto();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showHitokoto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(live2d_settings.hitokotoAPI) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'lwl12.com'</span>:</span><br><span class="line">            $.getJSON(<span class="string">'https://api.lwl12.com/hitokoto/v1?encode=realjson'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.source)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">'lwl12.com'</span>][<span class="number">0</span>];</span><br><span class="line">                        <span class="keyword">if</span> (!empty(result.author)) text += waifu_tips.hitokoto_api_message[<span class="string">'lwl12.com'</span>][<span class="number">1</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.source, <span class="attr">creator</span>: result.author&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text+waifu_tips.hitokoto_api_message[<span class="string">'lwl12.com'</span>][<span class="number">2</span>], <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                    &#125; showMessage(result.text, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'fghrsh.net'</span>:</span><br><span class="line">            $.getJSON(<span class="string">'https://api.fghrsh.net/hitokoto/rand/?encode=jsc&amp;uid=3335'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.source)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">'fghrsh.net'</span>][<span class="number">0</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.source, <span class="attr">date</span>: result.date&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                        showMessage(result.hitokoto, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'jinrishici.com'</span>:</span><br><span class="line">                $.ajax(&#123;</span><br><span class="line">                    url: <span class="string">'https://v2.jinrishici.com/one.json'</span>,</span><br><span class="line">                    xhrFields: &#123;<span class="attr">withCredentials</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">                    success: <span class="function"><span class="keyword">function</span> (<span class="params">result, status</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (!empty(result.data.origin.title)) &#123;</span><br><span class="line">                            <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">'jinrishici.com'</span>][<span class="number">0</span>];</span><br><span class="line">                            text = text.render(&#123;<span class="attr">title</span>: result.data.origin.title, <span class="attr">dynasty</span>: result.data.origin.dynasty, <span class="attr">author</span>:result.data.origin.author&#125;);</span><br><span class="line">                            <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                        &#125; showMessage(result.data.content, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $.getJSON(<span class="string">'https://v1.hitokoto.cn'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">result</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!empty(result.from)) &#123;</span><br><span class="line">                        <span class="keyword">var</span> text = waifu_tips.hitokoto_api_message[<span class="string">'hitokoto.cn'</span>][<span class="number">0</span>];</span><br><span class="line">                        text = text.render(&#123;<span class="attr">source</span>: result.from, <span class="attr">creator</span>: result.creator&#125;);</span><br><span class="line">                        <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;showMessage(text, <span class="number">3000</span>, <span class="literal">true</span>);&#125;, <span class="number">5000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                    showMessage(result.hitokoto, <span class="number">5000</span>, <span class="literal">true</span>);</span><br><span class="line">                &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-eye'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;loadOtherModel()&#125;);</span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-user'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;loadRandTextures()&#125;);</span><br><span class="line">    $(<span class="string">'.waifu-tool .fui-chat'</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;showHitokoto()&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-3-waifu-tips-json"><a href="#3-3-waifu-tips-json" class="headerlink" title="3.3. waifu-tips.json"></a>3.3. waifu-tips.json</h3><blockquote><p>waifu-tips.json 文件 👇</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">json</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"waifu"</span>: &#123;</span><br><span class="line">        <span class="attr">"console_open_msg"</span>: [<span class="string">"哈哈，你打开了控制台，是想要看看我的秘密吗？"</span>],</span><br><span class="line">        <span class="attr">"copy_message"</span>: [<span class="string">"你都复制了些什么呀，转载要记得加上出处哦"</span>],</span><br><span class="line">        <span class="attr">"screenshot_message"</span>: [<span class="string">"照好了嘛，是不是很可爱呢？"</span>],</span><br><span class="line">        <span class="attr">"hidden_message"</span>: [<span class="string">"我们还能再见面的吧…"</span>],</span><br><span class="line">        <span class="attr">"load_rand_textures"</span>: [<span class="string">"我还没有其他衣服呢"</span>, <span class="string">"我的新衣服好看嘛"</span>],</span><br><span class="line">        <span class="attr">"hour_tips"</span>: &#123;</span><br><span class="line">            <span class="attr">"t5-7"</span>: [<span class="string">"早上好！一日之计在于晨，美好的一天就要开始了"</span>],</span><br><span class="line">            <span class="attr">"t7-11"</span>: [<span class="string">"上午好！工作顺利嘛，不要久坐，多起来走动走动哦！"</span>],</span><br><span class="line">            <span class="attr">"t11-14"</span>: [<span class="string">"中午了，工作了一个上午，现在是午餐时间！"</span>],</span><br><span class="line">            <span class="attr">"t14-17"</span>: [<span class="string">"午后很容易犯困呢，今天的运动目标完成了吗？"</span>],</span><br><span class="line">            <span class="attr">"t17-19"</span>: [<span class="string">"傍晚了！窗外夕阳的景色很美丽呢，最美不过夕阳红~"</span>],</span><br><span class="line">            <span class="attr">"t19-21"</span>: [<span class="string">"晚上好，今天过得怎么样？"</span>],</span><br><span class="line">            <span class="attr">"t21-23"</span>: [<span class="string">"已经这么晚了呀，早点休息吧，晚安~"</span>],</span><br><span class="line">            <span class="attr">"t23-5"</span>: [<span class="string">"你是夜猫子呀？这么晚还不睡觉，明天起的来嘛"</span>],</span><br><span class="line">            <span class="attr">"default"</span>: [<span class="string">"嗨~ 快来逗我玩吧！"</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"referrer_message"</span>: &#123;</span><br><span class="line">            <span class="attr">"localhost"</span>: [<span class="string">"欢迎阅读&lt;span style=\"color:#0099cc;\"&gt;『"</span>, <span class="string">"』&lt;/span&gt;"</span>, <span class="string">" - "</span>],</span><br><span class="line">            <span class="attr">"baidu"</span>: [<span class="string">"Hello! 来自 百度搜索 的朋友&lt;br&gt;你是搜索 &lt;span style=\"color:#0099cc;\"&gt;"</span>, <span class="string">"&lt;/span&gt; 找到的我吗？"</span>],</span><br><span class="line">            <span class="attr">"so"</span>: [<span class="string">"Hello! 来自 360搜索 的朋友&lt;br&gt;你是搜索 &lt;span style=\"color:#0099cc;\"&gt;"</span>, <span class="string">"&lt;/span&gt; 找到的我吗？"</span>],</span><br><span class="line">            <span class="attr">"google"</span>: [<span class="string">"Hello! 来自 谷歌搜索 的朋友&lt;br&gt;欢迎阅读&lt;span style=\"color:#0099cc;\"&gt;『"</span>, <span class="string">"』&lt;/span&gt;"</span>, <span class="string">" - "</span>],</span><br><span class="line">            <span class="attr">"default"</span>: [<span class="string">"Hello! 来自 &lt;span style=\"color:#0099cc;\"&gt;"</span>, <span class="string">"&lt;/span&gt; 的朋友"</span>],</span><br><span class="line">            <span class="attr">"none"</span>: [<span class="string">"欢迎阅读&lt;span style=\"color:#0099cc;\"&gt;『"</span>, <span class="string">"』&lt;/span&gt;"</span>, <span class="string">" - "</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"referrer_hostname"</span>: &#123;</span><br><span class="line">            <span class="attr">"example.com"</span>: [<span class="string">"示例网站"</span>],</span><br><span class="line">            <span class="attr">"www.fghrsh.net"</span>: [<span class="string">"FGHRSH 的博客"</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"model_message"</span>: &#123;</span><br><span class="line">            <span class="attr">"1"</span>: [<span class="string">"来自 Potion Maker 的 Pio 酱 ~"</span>],</span><br><span class="line">            <span class="attr">"2"</span>: [<span class="string">"来自 Potion Maker 的 Tia 酱 ~"</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"hitokoto_api_message"</span>: &#123;</span><br><span class="line">            <span class="attr">"lwl12.com"</span>: [<span class="string">"这句一言来自 &lt;span style=\"color:#0099cc;\"&gt;『&#123;source&#125;』&lt;/span&gt;"</span>, <span class="string">"，是 &lt;span style=\"color:#0099cc;\"&gt;&#123;creator&#125;&lt;/span&gt; 投稿的"</span>, <span class="string">"。"</span>],</span><br><span class="line">            <span class="attr">"fghrsh.net"</span>: [<span class="string">"这句一言出处是 &lt;span style=\"color:#0099cc;\"&gt;『&#123;source&#125;』&lt;/span&gt;，是 &lt;span style=\"color:#0099cc;\"&gt;FGHRSH&lt;/span&gt; 在 &#123;date&#125; 收藏的！"</span>],</span><br><span class="line">            <span class="attr">"jinrishici.com"</span>: [<span class="string">"这句诗词出自 &lt;span style=\"color:#0099cc;\"&gt;《&#123;title&#125;》&lt;/span&gt;，是 &#123;dynasty&#125;诗人 &#123;author&#125; 创作的！"</span>],</span><br><span class="line">            <span class="attr">"hitokoto.cn"</span>: [<span class="string">"这句一言来自 &lt;span style=\"color:#0099cc;\"&gt;『&#123;source&#125;』&lt;/span&gt;，是 &lt;span style=\"color:#0099cc;\"&gt;&#123;creator&#125;&lt;/span&gt; 在 hitokoto.cn 投稿的。"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"mouseover"</span>: [</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".container a[href^='http']"</span>, <span class="attr">"text"</span>: [<span class="string">"要看看 &lt;span style=\"color:#0099cc;\"&gt;&#123;text&#125;&lt;/span&gt; 么？"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-home"</span>, <span class="attr">"text"</span>: [<span class="string">"点击前往首页，想回到上一页可以使用浏览器的后退功能哦"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-chat"</span>, <span class="attr">"text"</span>: [<span class="string">"一言一语，一颦一笑。一字一句，一颗赛艇。"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-eye"</span>, <span class="attr">"text"</span>: [<span class="string">"嗯··· 要切换 看板娘 吗？"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-user"</span>, <span class="attr">"text"</span>: [<span class="string">"喜欢换装 Play 吗？"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-photo"</span>, <span class="attr">"text"</span>: [<span class="string">"要拍张纪念照片吗？"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-info-circle"</span>, <span class="attr">"text"</span>: [<span class="string">"这里有关于我的信息呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".fui-cross"</span>, <span class="attr">"text"</span>: [<span class="string">"你不喜欢我了吗..."</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#tor_show"</span>, <span class="attr">"text"</span>: [<span class="string">"翻页比较麻烦吗，点击可以显示这篇文章的目录呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#comment_go"</span>, <span class="attr">"text"</span>: [<span class="string">"想要去评论些什么吗？"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#night_mode"</span>, <span class="attr">"text"</span>: [<span class="string">"深夜时要爱护眼睛呀"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#qrcode"</span>, <span class="attr">"text"</span>: [<span class="string">"手机扫一下就能继续看，很方便呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".comment_reply"</span>, <span class="attr">"text"</span>: [<span class="string">"要吐槽些什么呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#back-to-top"</span>, <span class="attr">"text"</span>: [<span class="string">"回到开始的地方吧"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#author"</span>, <span class="attr">"text"</span>: [<span class="string">"该怎么称呼你呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#mail"</span>, <span class="attr">"text"</span>: [<span class="string">"留下你的邮箱，不然就是无头像人士了"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#url"</span>, <span class="attr">"text"</span>: [<span class="string">"你的家在哪里呢，好让我去参观参观"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#textarea"</span>, <span class="attr">"text"</span>: [<span class="string">"认真填写哦，垃圾评论是禁止事项"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".OwO-logo"</span>, <span class="attr">"text"</span>: [<span class="string">"要插入一个表情吗"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"#csubmit"</span>, <span class="attr">"text"</span>: [<span class="string">"要[提交]^(Commit)了吗，首次评论需要审核，请耐心等待~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".ImageBox"</span>, <span class="attr">"text"</span>: [<span class="string">"点击图片可以放大呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"input[name=s]"</span>, <span class="attr">"text"</span>: [<span class="string">"找不到想看的内容？搜索看看吧"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".previous"</span>, <span class="attr">"text"</span>: [<span class="string">"去上一页看看吧"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".next"</span>, <span class="attr">"text"</span>: [<span class="string">"去下一页看看吧"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".dropdown-toggle"</span>, <span class="attr">"text"</span>: [<span class="string">"这里是菜单"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"c-player a.play-icon"</span>, <span class="attr">"text"</span>: [<span class="string">"想要听点音乐吗"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"c-player div.time"</span>, <span class="attr">"text"</span>: [<span class="string">"在这里可以调整&lt;span style=\"color:#0099cc;\"&gt;播放进度&lt;/span&gt;呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"c-player div.volume"</span>, <span class="attr">"text"</span>: [<span class="string">"在这里可以调整&lt;span style=\"color:#0099cc;\"&gt;音量&lt;/span&gt;呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"c-player div.list-button"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;播放列表&lt;/span&gt;里都有什么呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">"c-player div.lyric-button"</span>, <span class="attr">"text"</span>: [<span class="string">"有&lt;span style=\"color:#0099cc;\"&gt;歌词&lt;/span&gt;的话就能跟着一起唱呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"selector"</span>: <span class="string">".waifu #live2d"</span>, <span class="attr">"text"</span>: [<span class="string">"干嘛呢你，快把手拿开"</span>, <span class="string">"鼠…鼠标放错地方了！"</span>] &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"click"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"selector"</span>: <span class="string">".waifu #live2d"</span>,</span><br><span class="line">            <span class="attr">"text"</span>: [</span><br><span class="line">                <span class="string">"是…是不小心碰到了吧"</span>,</span><br><span class="line">                <span class="string">"萝莉控是什么呀"</span>,</span><br><span class="line">                <span class="string">"你看到我的小熊了吗"</span>,</span><br><span class="line">                <span class="string">"再摸的话我可要报警了！⌇●﹏●⌇"</span>,</span><br><span class="line">                <span class="string">"110吗，这里有个变态一直在摸我(ó﹏ò｡)"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"seasons"</span>: [</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"01/01"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;元旦&lt;/span&gt;了呢，新的一年又开始了，今年是&#123;year&#125;年~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"02/14"</span>, <span class="attr">"text"</span>: [<span class="string">"又是一年&lt;span style=\"color:#0099cc;\"&gt;情人节&lt;/span&gt;，&#123;year&#125;年找到对象了嘛~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"03/08"</span>, <span class="attr">"text"</span>: [<span class="string">"今天是&lt;span style=\"color:#0099cc;\"&gt;妇女节&lt;/span&gt;！"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"03/12"</span>, <span class="attr">"text"</span>: [<span class="string">"今天是&lt;span style=\"color:#0099cc;\"&gt;植树节&lt;/span&gt;，要保护环境呀"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"04/01"</span>, <span class="attr">"text"</span>: [<span class="string">"悄悄告诉你一个秘密~&lt;span style=\"background-color:#34495e;\"&gt;今天是愚人节，不要被骗了哦~&lt;/span&gt;"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"05/01"</span>, <span class="attr">"text"</span>: [<span class="string">"今天是&lt;span style=\"color:#0099cc;\"&gt;五一劳动节&lt;/span&gt;，计划好假期去哪里了吗~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"06/01"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;儿童节&lt;/span&gt;了呢，快活的时光总是短暂，要是永远长不大该多好啊…"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"09/03"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;中国人民抗日战争胜利纪念日&lt;/span&gt;，铭记历史、缅怀先烈、珍爱和平、开创未来。"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"09/10"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;教师节&lt;/span&gt;，在学校要给老师问声好呀~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"10/01"</span>, <span class="attr">"text"</span>: [<span class="string">"&lt;span style=\"color:#0099cc;\"&gt;国庆节&lt;/span&gt;，新中国已经成立69年了呢"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"11/05-11/12"</span>, <span class="attr">"text"</span>: [<span class="string">"今年的&lt;span style=\"color:#0099cc;\"&gt;双十一&lt;/span&gt;是和谁一起过的呢~"</span>] &#125;,</span><br><span class="line">        &#123; <span class="attr">"date"</span>: <span class="string">"12/20-12/31"</span>, <span class="attr">"text"</span>: [<span class="string">"这几天是&lt;span style=\"color:#0099cc;\"&gt;圣诞节&lt;/span&gt;，主人肯定又去剁手买买买了~"</span>] &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-4-下载⏬地址"><a href="#3-4-下载⏬地址" class="headerlink" title="3.4. 下载⏬地址"></a>3.4. 下载⏬地址</h3><blockquote><p>文件可以下载到项目中,也可以直接导入</p></blockquote><table><thead><tr><th align="center">文件名</th><th align="left">下载地址</th></tr></thead><tbody><tr><td align="center">waifu.css</td><td align="left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu.min.css?v=1.4.2" target="_blank" rel="noopener">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu.min.css?v=1.4.2</a></td></tr><tr><td align="center">live2d.min.js</td><td align="left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/live2d.min.js?v=1.0.5" target="_blank" rel="noopener">https://www.fghrsh.net/zb_users/plugin/live2d/assets/live2d.min.js?v=1.0.5</a></td></tr><tr><td align="center">waifu-tips.min.js</td><td align="left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.min.js?v=1.4.2-fix3" target="_blank" rel="noopener">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.min.js?v=1.4.2-fix3</a></td></tr><tr><td align="center">waifu-tips.json</td><td align="left"><a href="https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.json?v=1.4.2" target="_blank" rel="noopener">https://www.fghrsh.net/zb_users/plugin/live2d/assets/waifu-tips.json?v=1.4.2</a></td></tr></tbody></table><blockquote><p>也可以去 <a href="https://github.com/fghrsh/live2d_demo" target="_blank" rel="noopener" title="github">github</a><a href="https://github.com/fghrsh/live2d_demo" target="_blank">下载源码</a></p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo免费搭建个人博客网站</title>
      <link href="/post/hexo-free.html"/>
      <url>/post/hexo-free.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>本站使用的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> + <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Page</a> 搭建的个人技术博客网站。<br>博主之前使用的是 <a href="https://cn.wordpress.org/" target="_blank" rel="noopener">Wordpress</a> 搭建个人博客, 因为对 php 不是很熟,就转战<code>Hexo</code>。<br><code>Hexo</code> 的优点:</p></blockquote><p>1.使用 npm 方式构建(Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。)<br>2.支持 <code>Markdown</code> 语法(<code>Hexo</code>支持<code>GitHub Flavored Markdown</code>的所有功能，甚至可以整合<code>Octopress</code>的大多数插件。)<br>3.可以一键部署到 <code>Github</code>(只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。)<br>4.拥有有强大的插件系统。(Hexo 拥有强大的插件系统，安装插件可以让<code>Hexo</code>支持<code>Jade</code>,<code>CoffeeScript</code>。)</p><blockquote><p><code>Hexo</code>的缺点:生产纯静态页面,无需后台系统,那么就没法对站点进行 request、session 作用域的操作,也就是说无法实现登录,鉴权等操作。</p></blockquote><h2 id="1-构建-Hexo-博客系统"><a href="#1-构建-Hexo-博客系统" class="headerlink" title="1. 构建 Hexo 博客系统"></a>1. 构建 Hexo 博客系统</h2><h3 id="1-1-安装-nodejs"><a href="#1-1-安装-nodejs" class="headerlink" title="1.1 安装 nodejs"></a>1.1 安装 nodejs</h3><p><code>nodejs</code>官网 <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">https://nodejs.org/zh-cn/</a></p><p>windows 安装 <code>nodejs</code>请参考 <a href="https://blog.csdn.net/cai454692590/article/details/86093297" target="_blank" rel="noopener">Windows安装NodeJS</a></p><p>mac 安装<code>nodejs</code>请参考 <a href="https://blog.csdn.net/qq_32407233/article/details/83758899" target="_blank" rel="noopener">Mac 如何安装 nodejs</a></p><blockquote><p>centos 可以使用<code>yum</code>命令安装</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install nodejs</span><br></pre></td></tr></table></figure></div><blockquote><p>ubuntu 可以使用<code>apt-get</code>命令安装</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nodejs</span><br></pre></td></tr></table></figure></div><h3 id="1-2-安装-git"><a href="#1-2-安装-git" class="headerlink" title="1.2 安装 git"></a>1.2 安装 git</h3><p><code>git</code>官网 <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><p><code>windows</code>、<code>mac</code>可以直接去 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网</a>下载安装版即可</p><blockquote><p>centos 可以使用<code>yum</code>命令安装</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install git</span><br></pre></td></tr></table></figure></div><blockquote><p>ubuntu 可以使用<code>apt-get</code>命令安装</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure></div><h3 id="1-2-创建-Github-Page-仓库"><a href="#1-2-创建-Github-Page-仓库" class="headerlink" title="1.2 创建 Github Page 仓库"></a>1.2 创建 Github Page 仓库</h3><p>关于如何创建 Github Page 请参考<a href="https://blog.csdn.net/KNIGH_YUN/article/details/79774344" target="_blank" rel="noopener"> 搭建 Github Pages 个人博客网站</a></p><h3 id="1-3-使用-npm-安装-Hexo"><a href="#1-3-使用-npm-安装-Hexo" class="headerlink" title="1.3 使用 npm 安装 Hexo"></a>1.3 使用 npm 安装 Hexo</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div><blockquote><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></div><h2 id="2-创建-Github-仓库"><a href="#2-创建-Github-仓库" class="headerlink" title="2. 创建 Github 仓库"></a>2. 创建 Github 仓库</h2><blockquote><p>新建一个 Github Page 仓库,仓库名为 <code>github用户名.github.io</code>,仓库必须为 public</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/create-github-page.png" alt></p><h2 id="3-配置-Hexo"><a href="#3-配置-Hexo" class="headerlink" title="3. 配置 Hexo"></a>3. 配置 Hexo</h2><blockquote><p>Hexo 配置 相关可以参照 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">Hexo 官网</a>。<br>我们这里主要介绍如何一键部署到 Github Page</p></blockquote><p>在根目录的 _config.yml 文件中配置 deploy。</p><blockquote><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:你的GitHub用户名/你的GitHub用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></div><p>这时候我们只需要使用<code>Hexo</code>部署到<code>Github</code>,可以参考<a href="https://hexo.io/zh-cn/docs/deployment#Git" target="_blank" rel="noopener">官方文档</a>。</p><p>部署到<code>GitHub</code>需要 <code>hexo-deployer-git</code> 插件支持。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></div><p>您可执行下列的其中一个命令,让<code>Hexo</code>在生成完毕后自动部署网站，两个命令的作用是相同的。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --deploy</span><br><span class="line">hexo deploy --generate</span><br></pre></td></tr></table></figure></div><p>上面两个命令可以简写为:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></div><h2 id="3-高级配置"><a href="#3-高级配置" class="headerlink" title="3. 高级配置"></a>3. 高级配置</h2><blockquote><p>当我们部署到刚刚我们创建到 GitHub Page 仓库之后,打开仓库的 Settings 配置页面</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-page-settings.png" alt></p><blockquote><p>拉到 GitHub Pages 选项</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages.png" alt></p><blockquote><p>这时我们发现 GitHub 自动为部署页面到 github.io 了,此时浏览器输入 <code>github用户名.github.io</code> 即可访问</p></blockquote><h3 id="3-1-强制-HTTPS-访问"><a href="#3-1-强制-HTTPS-访问" class="headerlink" title="3.1 强制 HTTPS 访问"></a>3.1 强制 HTTPS 访问</h3><blockquote><p>进入你的 github page 仓库设置页面,找到 GitHub Pages 栏,勾选 Enforce HTTPS 。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-enforce-https.jpg" alt></p><h3 id="3-2-使用自定义域名"><a href="#3-2-使用自定义域名" class="headerlink" title="3.2 使用自定义域名"></a>3.2 使用自定义域名</h3><blockquote><p>进入你的 github page 仓库设置页面,找到 GitHub Pages 栏,在 Custom domain 选项输入你的自定义域名。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-custom-domain.jpg" alt></p><blockquote><p>在你的<code>Hexo</code>的 source 目录中创建 CNAME 文件,添加你的域名。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/settings-github-pages-custom-domain-cname.jpg" alt></p><blockquote><p>在你的域名解析中 配置 CNAME 解析到 <code>github用户名.github.io</code> (也就是你的 Github Page 的仓库地址)</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/custom-domain-config.jpg" alt></p><blockquote><p>这时在浏览器访问你的 GitHub Page 时会重定向到自定义域名</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/github-page-custom-domain-redirect.gif" alt></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot之SpringApplication</title>
      <link href="/post/spring-boot-springapplication.html"/>
      <url>/post/spring-boot-springapplication.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><blockquote><p>SpringApplication类提供了一种方便的方法来引导从main()方法开始的Spring应用程序。在许多情况下，你可以委托给静态SpringApplication.run方法</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>本文主要根据对<code>SpringApplication</code>类的源码阅读来了解<code>SpringApplication</code>的启动流程。</p></blockquote><ol><li>启动<code>StopWatch</code>用于记录应用启动时长</li><li>配置<code>headless</code>属性(AWT 相关属性)</li><li>获取应用监听器<code>SpringApplicationRunListeners</code>并启动</li><li>初始化<code>ApplicationArguments</code>(提供对用于运行 SpringApplication 的参数的访问)</li><li>初始化<code>ConfigurableEnvironment</code>(加载所有的 environment,包括 application.properties/application.yml 以及其他外部的属性配置 )</li><li>打印<code>Banner</code></li><li>创建应用上下文<code>ApplicationContext</code></li><li>初始化<code>exceptionReporters</code>(记录启动过程中的异常信息)</li><li>准备 ApplicationContext 对象,初始化一些属性</li><li>启动(刷新)Spring 容器</li><li>执行 Spring 容器的初始化的后置逻辑</li><li>结束<code>StopWatch</code>统计</li><li>通知监听器,Spring 容器启动完成</li><li>调用 <code>ApplicationRunner</code>,<code>CommandLineRunner</code> 的 run 方法</li><li>通知监听器,Spring 容器正在运行</li></ol><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt;[] primarySources, String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SpringApplication(primarySources).run(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpringApplication</span><span class="params">(Class&lt;?&gt;... primarySources)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>(<span class="keyword">null</span>, primarySources);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">SpringApplication</span><span class="params">(ResourceLoader resourceLoader, Class&lt;?&gt;... primarySources)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 初始化资源加载器 */</span></span><br><span class="line">  <span class="keyword">this</span>.resourceLoader = resourceLoader;</span><br><span class="line">  Assert.notNull(primarySources, <span class="string">"PrimarySources must not be null"</span>);</span><br><span class="line">  <span class="comment">/* 初始化 primarySources */</span></span><br><span class="line">  <span class="keyword">this</span>.primarySources = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(Arrays.asList(primarySources));</span><br><span class="line">  <span class="comment">/* 获取 web 应用的类型 */</span></span><br><span class="line">  <span class="keyword">this</span>.webApplicationType = WebApplicationType.deduceFromClasspath();</span><br><span class="line">  <span class="comment">/* 初始化 initializers(ApplicationContextInitializer 类型的 bean) */</span></span><br><span class="line">  setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">  <span class="comment">/* 初始化 setListeners(ApplicationListener 类型的 bean) */</span></span><br><span class="line">  setListeners((Collection) getSpringFactoriesInstances(ApplicationListener<span class="class">.<span class="keyword">class</span>))</span>;</span><br><span class="line">  <span class="comment">/* 推断 main 方法 Application 的 Class */</span></span><br><span class="line">  <span class="keyword">this</span>.mainApplicationClass = deduceMainApplicationClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="deduceFromClasspath"><a href="#deduceFromClasspath" class="headerlink" title="deduceFromClasspath"></a>deduceFromClasspath</h2><blockquote><p>通过检查 classpath 推断出当前 web 环境</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> WebApplicationType <span class="title">deduceFromClasspath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 判断是否存在是否是 webflux */</span></span><br><span class="line">  <span class="keyword">if</span> (ClassUtils.isPresent(WEBFLUX_INDICATOR_CLASS, <span class="keyword">null</span>) &amp;&amp; !ClassUtils.isPresent(WEBMVC_INDICATOR_CLASS, <span class="keyword">null</span>)</span><br><span class="line">      &amp;&amp; !ClassUtils.isPresent(JERSEY_INDICATOR_CLASS, <span class="keyword">null</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> WebApplicationType.REACTIVE;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (String className : SERVLET_INDICATOR_CLASSES) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ClassUtils.isPresent(className, <span class="keyword">null</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span> WebApplicationType.NONE;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> WebApplicationType.SERVLET;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="deduceMainApplicationClass"><a href="#deduceMainApplicationClass" class="headerlink" title="deduceMainApplicationClass"></a>deduceMainApplicationClass</h2><blockquote><p>推断是哪个类调用了 main 方法</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Class&lt;?&gt; deduceMainApplicationClass() &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    StackTraceElement[] stackTrace = <span class="keyword">new</span> RuntimeException().getStackTrace();</span><br><span class="line">    <span class="keyword">for</span> (StackTraceElement stackTraceElement : stackTrace) &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">"main"</span>.equals(stackTraceElement.getMethodName())) &#123;</span><br><span class="line">        <span class="keyword">return</span> Class.forName(stackTraceElement.getClassName());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="getSpringFactoriesInstances"><a href="#getSpringFactoriesInstances" class="headerlink" title="getSpringFactoriesInstances"></a>getSpringFactoriesInstances</h2><blockquote><p>根据给定的 class 类型,获取对应 factories 中的实例</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> &lt;T&gt; <span class="function">Collection&lt;T&gt; <span class="title">getSpringFactoriesInstances</span><span class="params">(Class&lt;T&gt; type)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> getSpringFactoriesInstances(type, <span class="keyword">new</span> Class&lt;?&gt;[] &#123;&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> &lt;T&gt; <span class="function">Collection&lt;T&gt; <span class="title">getSpringFactoriesInstances</span><span class="params">(Class&lt;T&gt; type,</span></span></span><br><span class="line"><span class="function"><span class="params">    Class&lt;?&gt;[] parameterTypes, Object... args)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 获取类加载器 */</span></span><br><span class="line">  ClassLoader classLoader = getClassLoader();</span><br><span class="line">  <span class="comment">/* Set 类型的 names 确保惟一，以防止重复 */</span></span><br><span class="line">  <span class="comment">/* 加载 `META-INF/spring.factories` 里的 class */</span></span><br><span class="line">  Set&lt;String&gt; names = <span class="keyword">new</span> LinkedHashSet&lt;&gt;(</span><br><span class="line">      SpringFactoriesLoader.loadFactoryNames(type, classLoader));</span><br><span class="line">  <span class="comment">/* 为他们创建实例 */</span></span><br><span class="line">  List&lt;T&gt; instances = createSpringFactoriesInstances(type, parameterTypes,</span><br><span class="line">      classLoader, args, names);</span><br><span class="line">  <span class="comment">/* 为他们进行排序 */</span></span><br><span class="line">  AnnotationAwareOrderComparator.sort(instances);</span><br><span class="line">  <span class="keyword">return</span> instances;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="run方法"><a href="#run方法" class="headerlink" title="run方法"></a>run方法</h2><blockquote><p>运行 Spring 应用</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt; primarySource, String... args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> run(<span class="keyword">new</span> Class&lt;?&gt;[] &#123; primarySource &#125;, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(Class&lt;?&gt;[] primarySources, String[] args)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> SpringApplication(primarySources).run(args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* stopWatch 对象,用于统计指定任务的运行时间 */</span></span><br><span class="line">  StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">  <span class="comment">/* 开始 stopWatch 统计 */</span></span><br><span class="line">  stopWatch.start();</span><br><span class="line">  ConfigurableApplicationContext context = <span class="keyword">null</span>;</span><br><span class="line">  Collection&lt;SpringBootExceptionReporter&gt; exceptionReporters = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  <span class="comment">/* 配置 headless 属性 */</span></span><br><span class="line">  configureHeadlessProperty();</span><br><span class="line">  <span class="comment">/* 获取 SpringApplicationRunListener 类型的 bean 实例列表 */</span></span><br><span class="line">  SpringApplicationRunListeners listeners = getRunListeners(args);</span><br><span class="line">  <span class="comment">/* 启动监听器 */</span></span><br><span class="line">  listeners.starting();</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">/* 创建默认 applicationArguments,提供对用于运行 SpringApplication 的参数的访问。*/</span></span><br><span class="line">    ApplicationArguments applicationArguments = <span class="keyword">new</span> DefaultApplicationArguments(args);</span><br><span class="line">    <span class="comment">/* 加载所有的 environment,包括 application.properties/application.yml 以及其他外部的属性配置 */</span></span><br><span class="line">    ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);</span><br><span class="line">    configureIgnoreBeanInfo(environment);</span><br><span class="line">    <span class="comment">/* 打印 banner 信息 */</span></span><br><span class="line">    Banner printedBanner = printBanner(environment);</span><br><span class="line">    <span class="comment">/* 创建应用上下文 */</span></span><br><span class="line">    context = createApplicationContext();</span><br><span class="line">    <span class="comment">/* 创建异常报告器 */</span></span><br><span class="line">    exceptionReporters = getSpringFactoriesInstances(SpringBootExceptionReporter<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line">        new Class[] &#123; ConfigurableApplicationContext.class &#125;, context);</span><br><span class="line">    prepareContext(context, environment, listeners, applicationArguments, printedBanner);</span><br><span class="line">    <span class="comment">/* 初始化 Spring 容器。 */</span></span><br><span class="line">    refreshContext(context);</span><br><span class="line">    <span class="comment">/* 执行 Spring 容器的初始化的后置逻辑 */</span></span><br><span class="line">    afterRefresh(context, applicationArguments);</span><br><span class="line">    <span class="comment">/* 停止 stopWatch 统计 */</span></span><br><span class="line">    stopWatch.stop();</span><br><span class="line">    <span class="comment">/* 打印 Spring Boot 启动日志。 */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">      <span class="keyword">new</span> StartupInfoLogger(<span class="keyword">this</span>.mainApplicationClass).logStarted(getApplicationLog(), stopWatch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 通知 SpringApplicationRunListener,Spring 容器启动完成。 */</span></span><br><span class="line">    listeners.started(context);</span><br><span class="line">    <span class="comment">/* 调用 ApplicationRunner 或者 CommandLineRunner 的运行方法。 */</span></span><br><span class="line">    callRunners(context, applicationArguments);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">    <span class="comment">/* 如果发生异常，则进行处理，并抛出 IllegalStateException 异常 */</span></span><br><span class="line">    handleRunFailure(context, ex, exceptionReporters, listeners);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* SpringApplicationRunListener 的数组，Spring 容器运行中。 */</span></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    listeners.running(context);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">    <span class="comment">/* 如果发生异常，则进行处理，并抛出 IllegalStateException 异常 */</span></span><br><span class="line">    handleRunFailure(context, ex, exceptionReporters, <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> context;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="prepareEnvironment"><a href="#prepareEnvironment" class="headerlink" title="prepareEnvironment"></a>prepareEnvironment</h2><blockquote><p>准备 environment,加载属性配置</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ConfigurableEnvironment <span class="title">prepareEnvironment</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    SpringApplicationRunListeners listeners,</span></span></span><br><span class="line"><span class="function"><span class="params">    ApplicationArguments applicationArguments)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 创建并配置 ConfigurableEnvironment 对象*/</span></span><br><span class="line">  ConfigurableEnvironment environment = getOrCreateEnvironment();</span><br><span class="line">  configureEnvironment(environment, applicationArguments.getSourceArgs());</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,环境变量已经准备完成。 */</span></span><br><span class="line">  listeners.environmentPrepared(environment);</span><br><span class="line">  <span class="comment">/* 绑定 environment 到 SpringApplication */</span></span><br><span class="line">  bindToSpringApplication(environment);</span><br><span class="line">  <span class="comment">/* 如果非自定义 environment ，则根据条件转换 */</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="keyword">this</span>.isCustomEnvironment) &#123;</span><br><span class="line">    environment = <span class="keyword">new</span> EnvironmentConverter(getClassLoader())</span><br><span class="line">        .convertEnvironmentIfNecessary(environment, deduceEnvironmentClass());</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 如果有 attach 到 environment 上的 MutablePropertySources ，则添加到 environment 的 PropertySource 中。 */</span></span><br><span class="line">  ConfigurationPropertySources.attach(environment);</span><br><span class="line">  <span class="keyword">return</span> environment;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="createApplicationContext"><a href="#createApplicationContext" class="headerlink" title="createApplicationContext"></a>createApplicationContext</h2><blockquote><p>创建应用上下文</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> ConfigurableApplicationContext <span class="title">createApplicationContext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Class&lt;?&gt; contextClass = <span class="keyword">this</span>.applicationContextClass;</span><br><span class="line">  <span class="keyword">if</span> (contextClass == <span class="keyword">null</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">switch</span> (<span class="keyword">this</span>.webApplicationType) &#123;</span><br><span class="line">      <span class="comment">/* web 应用环境,AnnotationConfigServletWebServerApplicationContext */</span></span><br><span class="line">      <span class="keyword">case</span> SERVLET:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_SERVLET_WEB_CONTEXT_CLASS);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">/* webflux 应用环境,AnnotationConfigReactiveWebServerApplicationContext */</span></span><br><span class="line">      <span class="keyword">case</span> REACTIVE:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_REACTIVE_WEB_CONTEXT_CLASS);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="comment">/* 非 web 应用环境,AnnotationConfigApplicationContext */</span></span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        contextClass = Class.forName(DEFAULT_CONTEXT_CLASS);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (ClassNotFoundException ex) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(</span><br><span class="line">          <span class="string">"Unable create a default ApplicationContext, "</span></span><br><span class="line">              + <span class="string">"please specify an ApplicationContextClass"</span>,</span><br><span class="line">          ex);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 返回对应应用上下文实例 */</span></span><br><span class="line">  <span class="keyword">return</span> (ConfigurableApplicationContext) BeanUtils.instantiateClass(contextClass);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="prepareContext"><a href="#prepareContext" class="headerlink" title="prepareContext"></a>prepareContext</h2><blockquote><p>准备 ApplicationContext 对象,初始化它的一些属性</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">prepareContext</span><span class="params">(ConfigurableApplicationContext context,</span></span></span><br><span class="line"><span class="function"><span class="params">    ConfigurableEnvironment environment, SpringApplicationRunListeners listeners,</span></span></span><br><span class="line"><span class="function"><span class="params">    ApplicationArguments applicationArguments, Banner printedBanner)</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* 设置 context 的 environment 属性 */</span></span><br><span class="line">  context.setEnvironment(environment);</span><br><span class="line">  <span class="comment">/* 设置 context 的一些属性 */</span></span><br><span class="line">  postProcessApplicationContext(context);</span><br><span class="line">  <span class="comment">/* 初始化 ApplicationContextInitializer */</span></span><br><span class="line">  applyInitializers(context);</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,Spring 容器准备完成。 */</span></span><br><span class="line">  listeners.contextPrepared(context);</span><br><span class="line">  <span class="comment">/* 打印日志 */</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">    logStartupInfo(context.getParent() == <span class="keyword">null</span>);</span><br><span class="line">    logStartupProfileInfo(context);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 获取 beanFactory */</span></span><br><span class="line">  ConfigurableListableBeanFactory beanFactory = context.getBeanFactory();</span><br><span class="line">  <span class="comment">/* 注册单例 springApplicationArguments bean */</span></span><br><span class="line">  beanFactory.registerSingleton(<span class="string">"springApplicationArguments"</span>, applicationArguments);</span><br><span class="line">  <span class="comment">/* 注册单例 printedBanner bean */</span></span><br><span class="line">  <span class="keyword">if</span> (printedBanner != <span class="keyword">null</span>) &#123;</span><br><span class="line">    beanFactory.registerSingleton(<span class="string">"springBootBanner"</span>, printedBanner);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (beanFactory <span class="keyword">instanceof</span> DefaultListableBeanFactory) &#123;</span><br><span class="line">    ((DefaultListableBeanFactory) beanFactory)</span><br><span class="line">        .setAllowBeanDefinitionOverriding(<span class="keyword">this</span>.allowBeanDefinitionOverriding);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 加载 BeanDefinition */</span></span><br><span class="line">  Set&lt;Object&gt; sources = getAllSources();</span><br><span class="line">  Assert.notEmpty(sources, <span class="string">"Sources must not be empty"</span>);</span><br><span class="line">  load(context, sources.toArray(<span class="keyword">new</span> Object[<span class="number">0</span>]));</span><br><span class="line">  <span class="comment">/* 通知 SpringApplicationRunListeners,Spring 容器加载完成。 */</span></span><br><span class="line">  listeners.contextLoaded(context);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="callRunners"><a href="#callRunners" class="headerlink" title="callRunners"></a>callRunners</h2><blockquote><p>调用 ApplicationRunner 或者 CommandLineRunner 的 run 方法</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunners</span><span class="params">(ApplicationContext context, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line">List&lt;Object&gt; runners = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">   <span class="comment">/* 获取所有的 ApplicationRunner 类型的 bean 加入到 runners */</span></span><br><span class="line">runners.addAll(context.getBeansOfType(ApplicationRunner<span class="class">.<span class="keyword">class</span>).<span class="title">values</span>())</span>;</span><br><span class="line">   <span class="comment">/* 获取所有的 CommandLineRunner 类型的 bean 加入到 runners */</span></span><br><span class="line">runners.addAll(context.getBeansOfType(CommandLineRunner<span class="class">.<span class="keyword">class</span>).<span class="title">values</span>())</span>;</span><br><span class="line">   <span class="comment">/* 排序 runners */</span></span><br><span class="line">AnnotationAwareOrderComparator.sort(runners);</span><br><span class="line">   <span class="comment">/* LinkedHashSet 去重并遍历 */</span></span><br><span class="line"><span class="keyword">for</span> (Object runner : <span class="keyword">new</span> LinkedHashSet&lt;&gt;(runners)) &#123;</span><br><span class="line">     <span class="comment">/* ApplicationRunner 类型 runner */</span></span><br><span class="line"><span class="keyword">if</span> (runner <span class="keyword">instanceof</span> ApplicationRunner) &#123;</span><br><span class="line">callRunner((ApplicationRunner) runner, args);</span><br><span class="line">&#125;</span><br><span class="line">     <span class="comment">/* CommandLineRunner 类型 runner */</span></span><br><span class="line"><span class="keyword">if</span> (runner <span class="keyword">instanceof</span> CommandLineRunner) &#123;</span><br><span class="line">callRunner((CommandLineRunner) runner, args);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunner</span><span class="params">(ApplicationRunner runner, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">(runner).run(args);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Failed to execute ApplicationRunner"</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callRunner</span><span class="params">(CommandLineRunner runner, ApplicationArguments args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">(runner).run(args.getSourceArgs());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Failed to execute CommandLineRunner"</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot Jpa多数据源配置</title>
      <link href="/post/spring-boot-jpa-multiple-datasource.html"/>
      <url>/post/spring-boot-jpa-multiple-datasource.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="1-添加-maven-依赖"><a href="#1-添加-maven-依赖" class="headerlink" title="1. 添加 maven 依赖"></a>1. 添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加对应的依赖</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- alibaba的druid数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="2-配置-configuration"><a href="#2-配置-configuration" class="headerlink" title="2. 配置 configuration"></a>2. 配置 configuration</h2><h3 id="2-1-配置-dataSource-数据源"><a href="#2-1-配置-dataSource-数据源" class="headerlink" title="2.1 配置 dataSource 数据源"></a>2.1 配置 dataSource 数据源</h3><blockquote><p>我们这里使用的是<code>druid</code>数据库连接池<br>Druid 是目前最好的数据库连接池，在功能、性能、扩展性方面，都超过其他数据库连接池，包括DBCP、C3P0、BoneCP、Proxool、JBoss DataSource。Druid 已经在阿里巴巴部署了超过600个应用，经过一年多生产环境大规模部署的严苛考验。Druid 是阿里巴巴开发的号称为监控而生的数据库连接池！</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Environment environment;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DataSourceConfig</span><span class="params">(Environment environment)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.environment = environment;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"primaryDataSource"</span>)</span><br><span class="line">    <span class="function">DataSource <span class="title">primaryDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = DruidDataSourceBuilder.create().build();</span><br><span class="line">        dataSource.setUrl(environment.getProperty(<span class="string">"spring.datasource.druid.primary.url"</span>));</span><br><span class="line">        dataSource.setUsername(environment.getProperty(<span class="string">"spring.datasource.druid.primary.username"</span>));</span><br><span class="line">        dataSource.setPassword(environment.getProperty(<span class="string">"spring.datasource.druid.primary.password"</span>));</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"secondDataSource"</span>)</span><br><span class="line">    <span class="function">DataSource <span class="title">secondDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = DruidDataSourceBuilder.create().build();</span><br><span class="line">        dataSource.setUrl(environment.getProperty(<span class="string">"spring.datasource.druid.second.url"</span>));</span><br><span class="line">        dataSource.setUsername(environment.getProperty(<span class="string">"spring.datasource.druid.second.username"</span>));</span><br><span class="line">        dataSource.setPassword(environment.getProperty(<span class="string">"spring.datasource.druid.second.password"</span>));</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="2-2-在-application-yml-中添加对应配置"><a href="#2-2-在-application-yml-中添加对应配置" class="headerlink" title="2.2 在 application.yml 中添加对应配置"></a>2.2 在 application.yml 中添加对应配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">primary:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/primary?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">second:</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/second?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">100</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="attr">login-username:</span> <span class="string">admin</span></span><br><span class="line">        <span class="attr">login-password:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">1000</span></span><br><span class="line">          <span class="attr">merge-sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">multi-statement-allow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">none</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">open-in-view:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">database:</span> <span class="string">mysql</span></span><br></pre></td></tr></table></figure></div><h3 id="2-3-为每一个数据源创建-jpa-配置类"><a href="#2-3-为每一个数据源创建-jpa-配置类" class="headerlink" title="2.3 为每一个数据源创建 jpa 配置类"></a>2.3 为每一个数据源创建 jpa 配置类</h3><blockquote><p>配置 Primary 数据源</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EntityScan</span>(basePackages = <span class="string">"com.hvnobug.jmds.entity.primary"</span>)</span><br><span class="line"><span class="comment">//1、实体扫描</span></span><br><span class="line"><span class="comment">//2、实体管理 ref</span></span><br><span class="line"><span class="comment">//3、事务管理</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories</span>(</span><br><span class="line">        basePackages = <span class="string">"com.hvnobug.jmds.repository.primary"</span>,</span><br><span class="line">        entityManagerFactoryRef = <span class="string">"primaryEntityManagerFactory"</span>,</span><br><span class="line">        transactionManagerRef = <span class="string">"primaryTransactionManager"</span>)</span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimaryJpaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> JpaProperties jpaProperties;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PrimaryJpaConfig</span><span class="params">(@Qualifier(<span class="string">"primaryDataSource"</span>)</span> DataSource dataSource, JpaProperties jpaProperties) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dataSource = dataSource;</span><br><span class="line">        <span class="keyword">this</span>.jpaProperties = jpaProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"primaryEntityManagerFactory"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">primaryEntityManagerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factory =</span><br><span class="line">                <span class="keyword">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class="line">        factory.setDataSource(dataSource);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">"com.hvnobug.jmds.repository.primary"</span>,<span class="string">"com.hvnobug.jmds.entity.primary"</span>);</span><br><span class="line">        factory.setJpaVendorAdapter(<span class="keyword">new</span> HibernateJpaVendorAdapter());</span><br><span class="line">        factory.setJpaProperties(jpaProperties());</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// EntityManager 不过解释，用过 jpa 的应该都了解</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"primaryEntityManager"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.requireNonNull(primaryEntityManagerFactory().getObject()).createEntityManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jpa 事务管理</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"primaryTransactionManager"</span>)</span><br><span class="line">    <span class="meta">@Primary</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JpaTransactionManager <span class="title">transactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JpaTransactionManager jpaTransactionManager = <span class="keyword">new</span> JpaTransactionManager();</span><br><span class="line">        jpaTransactionManager.setEntityManagerFactory(primaryEntityManagerFactory().getObject());</span><br><span class="line">        <span class="keyword">return</span> jpaTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>配置 Second 数据源</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EntityScan</span>(basePackages = <span class="string">"com.hvnobug.jmds.entity.second"</span>)</span><br><span class="line"><span class="comment">//1、实体扫描</span></span><br><span class="line"><span class="comment">//2、实体管理 ref</span></span><br><span class="line"><span class="comment">//3、事务管理</span></span><br><span class="line"><span class="meta">@EnableJpaRepositories</span>(</span><br><span class="line">        basePackages = <span class="string">"com.hvnobug.jmds.repository.second"</span>,</span><br><span class="line">        entityManagerFactoryRef = <span class="string">"secondEntityManagerFactory"</span>,</span><br><span class="line">        transactionManagerRef = <span class="string">"secondTransactionManager"</span>)</span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondJpaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DataSource dataSource;</span><br><span class="line">        </span><br><span class="line">    <span class="meta">@Autowired</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecondJpaConfig</span><span class="params">(@Qualifier(<span class="string">"secondDataSource"</span>)</span> DataSource dataSource, JpaProperties jpaProperties) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dataSource = dataSource;</span><br><span class="line">        <span class="keyword">this</span>.jpaProperties = jpaProperties;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"secondEntityManagerFactory"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalContainerEntityManagerFactoryBean <span class="title">secondEntityManagerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LocalContainerEntityManagerFactoryBean factory =</span><br><span class="line">                <span class="keyword">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class="line">        factory.setDataSource(dataSource);</span><br><span class="line">        factory.setPackagesToScan(<span class="string">"com.hvnobug.jmds.repository.second"</span>,<span class="string">"com.hvnobug.jmds.entity.second"</span>);</span><br><span class="line">        factory.setJpaVendorAdapter(<span class="keyword">new</span> HibernateJpaVendorAdapter());</span><br><span class="line">        factory.setJpaProperties(jpaProperties());</span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// EntityManager 不过解释，用过 jpa 的应该都了解</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"secondEntityManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> EntityManager <span class="title">entityManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.requireNonNull(secondEntityManagerFactory().getObject()).createEntityManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// jpa 事务管理</span></span><br><span class="line">    <span class="meta">@Bean</span>(name = <span class="string">"secondTransactionManager"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JpaTransactionManager <span class="title">transactionManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JpaTransactionManager jpaTransactionManager = <span class="keyword">new</span> JpaTransactionManager();</span><br><span class="line">        jpaTransactionManager.setEntityManagerFactory(secondEntityManagerFactory().getObject());</span><br><span class="line">        <span class="keyword">return</span> jpaTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>此时 Spring 会为 com.hvnobug.jmds.repository.primary 包下的 Repository 注入 Primary 数据源<br>会为 com.hvnobug.jmds.repository.second 包下的 Repository 注入 Second 数据源</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> druid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Quartz+Druid实现动态定时任务</title>
      <link href="/post/spring-boot-quartz.html"/>
      <url>/post/spring-boot-quartz.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="添加-maven-依赖"><a href="#添加-maven-依赖" class="headerlink" title="添加 maven 依赖"></a>添加 maven 依赖</h2><blockquote><p>在 pom.xml 中添加 quartz 对应的依赖</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- alibaba 的 druid 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="首先启动类中添加-EnableScheduling"><a href="#首先启动类中添加-EnableScheduling" class="headerlink" title="首先启动类中添加 @EnableScheduling"></a>首先启动类中添加 @EnableScheduling</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplication</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="添加-application-yml-的配置"><a href="#添加-application-yml-的配置" class="headerlink" title="添加 application.yml 的配置"></a>添加 application.yml 的配置</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">yaml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/qrtz?useUnicode=true&amp;characterEncoding=UTF-8&amp;allowMultiQueries=true&amp;useSSL=false</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">100</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">10</span></span><br><span class="line">      <span class="attr">max-wait:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">pool-prepared-statements:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">max-pool-prepared-statement-per-connection-size:</span> <span class="number">20</span></span><br><span class="line">      <span class="attr">time-between-eviction-runs-millis:</span> <span class="number">60000</span></span><br><span class="line">      <span class="attr">min-evictable-idle-time-millis:</span> <span class="number">300000</span></span><br><span class="line">      <span class="attr">validation-query:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">      <span class="attr">test-while-idle:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">test-on-borrow:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">test-on-return:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">stat-view-servlet:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">url-pattern:</span> <span class="string">/druid/*</span></span><br><span class="line">        <span class="attr">login-username:</span> <span class="string">admin</span></span><br><span class="line">        <span class="attr">login-password:</span> <span class="string">admin</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">stat:</span></span><br><span class="line">          <span class="attr">log-slow-sql:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">slow-sql-millis:</span> <span class="number">1000</span></span><br><span class="line">          <span class="attr">merge-sql:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">wall:</span></span><br><span class="line">          <span class="attr">config:</span></span><br><span class="line">            <span class="attr">multi-statement-allow:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">quartz:</span></span><br><span class="line">    <span class="attr">defaultJobGroupName:</span> <span class="string">HVNOBUG_JOB_GROUP</span></span><br><span class="line">    <span class="attr">defaultTriggerGroupName:</span> <span class="string">HVNOBUG_TRIGGER_GROUP</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">org:</span></span><br><span class="line">        <span class="attr">quartz:</span></span><br><span class="line">          <span class="attr">scheduler:</span></span><br><span class="line">            <span class="attr">instanceName:</span> <span class="string">clusteredScheduler</span></span><br><span class="line">            <span class="attr">instanceId:</span> <span class="string">AUTO</span></span><br><span class="line">          <span class="attr">jobStore:</span></span><br><span class="line">            <span class="attr">dataSource:</span> <span class="string">qrtz</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line">            <span class="attr">driverDelegateClass:</span> <span class="string">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line">            <span class="attr">tablePrefix:</span> <span class="string">QRTZ_</span></span><br><span class="line">            <span class="attr">isClustered:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">clusterCheckinInterval:</span> <span class="number">10000</span></span><br><span class="line">            <span class="attr">useProperties:</span> <span class="literal">false</span></span><br><span class="line">          <span class="attr">threadPool:</span></span><br><span class="line">            <span class="attr">class:</span> <span class="string">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line">            <span class="attr">threadCount:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">threadPriority:</span> <span class="number">5</span></span><br><span class="line">            <span class="attr">threadsInheritContextClassLoaderOfInitializingThread:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">job-store-type:</span> <span class="string">jdbc</span></span><br><span class="line">    <span class="attr">jdbc:</span></span><br><span class="line">      <span class="attr">initialize-schema:</span> <span class="string">never</span></span><br><span class="line">    <span class="attr">datasource:</span></span><br><span class="line">      <span class="attr">qrtz:</span></span><br><span class="line">        <span class="attr">connection-provider:</span></span><br><span class="line">          <span class="attr">class:</span> <span class="string">com.hvnobug.quartz.demo.config.DruidConnectionProvider</span></span><br></pre></td></tr></table></figure></div><h3 id="创建-DruidConnectionProvider"><a href="#创建-DruidConnectionProvider" class="headerlink" title="创建 DruidConnectionProvider"></a>创建 DruidConnectionProvider</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConnectionProvider</span> <span class="keyword">implements</span> <span class="title">ConnectionProvider</span>, <span class="title">ApplicationContextAware</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DruidDataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataSource.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataSource = (DruidDataSource) applicationContext.getBean(DataSource<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationContext</span><span class="params">(ApplicationContext applicationContext)</span> <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">        DruidConnectionProvider.applicationContext = applicationContext;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="创建-QuartzService"><a href="#创建-QuartzService" class="headerlink" title="创建 QuartzService"></a>创建 QuartzService</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">QuartzService</span><span class="params">(Scheduler scheduler)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.scheduler = scheduler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.quartz.defaultJobGroupName&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jobGroupName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.quartz.defaultTriggerGroupName&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String triggerGroupName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class&lt;? extends Job&gt; cls, String time)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, cls, time, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, Class&lt;? extends Job&gt; cls, String time, Map&lt;String, Object&gt; parameter)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, jobGroupName, jobName, triggerGroupName, cls, time, parameter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, String jobGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String triggerName, String triggerGroupName, Class&lt;? extends Job&gt; jobClass,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String time)</span> </span>&#123;</span><br><span class="line">        addJob(jobName, jobGroupName, triggerName, triggerGroupName, jobClass, time, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJob</span><span class="params">(String jobName, String jobGroupName,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String triggerName, String triggerGroupName, Class&lt;? extends Job&gt; jobClass,</span></span></span><br><span class="line"><span class="function"><span class="params">                       String time, Map&lt;String, Object&gt; parameter)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            JobDetail jobDetail = JobBuilder.newJob(jobClass).withIdentity(jobName, jobGroupName).build();</span><br><span class="line">            <span class="keyword">if</span> (parameter != <span class="keyword">null</span> &amp;&amp; !parameter.isEmpty())</span><br><span class="line">                jobDetail.getJobDataMap().put(<span class="string">"parameterList"</span>, parameter);                            </span><br><span class="line">            CronTrigger trigger = TriggerBuilder     </span><br><span class="line">                    .newTrigger()</span><br><span class="line">                    .withIdentity(triggerName, triggerGroupName)</span><br><span class="line">                    .withSchedule(CronScheduleBuilder.cronSchedule(time))</span><br><span class="line">                    .build();</span><br><span class="line">            scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">            <span class="keyword">if</span> (!scheduler.isShutdown()) &#123;</span><br><span class="line">                scheduler.start();     </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String jobName, String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(jobName, triggerGroupName);        </span><br><span class="line">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);               </span><br><span class="line">            <span class="keyword">if</span> (trigger == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            String oldTime = trigger.getCronExpression();</span><br><span class="line">            <span class="keyword">if</span> (!oldTime.equalsIgnoreCase(time)) &#123;</span><br><span class="line">                JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);                       </span><br><span class="line">                JobDetail jobDetail = scheduler.getJobDetail(jobKey);</span><br><span class="line">                Class&lt;? extends Job&gt; objJobClass = jobDetail.getJobClass();</span><br><span class="line">                removeJob(jobName);</span><br><span class="line">                addJob(jobName, objJobClass, time);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modifyJobTime</span><span class="params">(String triggerName, String triggerGroupName, String time)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);   </span><br><span class="line">            CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);               </span><br><span class="line">            <span class="keyword">if</span> (trigger == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(trigger.getCronExpression());</span><br><span class="line">            String oldTime = trigger.getCronExpression();</span><br><span class="line">            <span class="keyword">if</span> (!oldTime.equalsIgnoreCase(time)) &#123;</span><br><span class="line">                trigger = trigger.getTriggerBuilder()        </span><br><span class="line">                        .withIdentity(triggerKey)</span><br><span class="line">                        .withSchedule(scheduleBuilder)</span><br><span class="line">                        .withSchedule(CronScheduleBuilder.cronSchedule(time))</span><br><span class="line">                        .build();</span><br><span class="line">                scheduler.rescheduleJob(triggerKey, trigger);                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName)</span> </span>&#123;</span><br><span class="line">        removeJob(jobName, jobGroupName, jobName, triggerGroupName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String triggerName)</span> </span>&#123;</span><br><span class="line">        removeJob(jobName, jobGroupName, triggerName, triggerGroupName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJob</span><span class="params">(String jobName, String jobGroupName, String triggerName, String triggerGroupName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            TriggerKey triggerKey = TriggerKey.triggerKey(triggerName, triggerGroupName);   </span><br><span class="line">            JobKey jobKey = JobKey.jobKey(jobName, jobGroupName);                           </span><br><span class="line">            scheduler.pauseTrigger(triggerKey);    </span><br><span class="line">            scheduler.unscheduleJob(triggerKey);</span><br><span class="line">            scheduler.deleteJob(jobKey); </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startJobs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            scheduler.start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdownJobs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!scheduler.isShutdown()) &#123;</span><br><span class="line">                scheduler.shutdown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="创建-Job"><a href="#创建-Job" class="headerlink" title="创建 Job"></a>创建 Job</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoJob</span> <span class="keyword">extends</span> <span class="title">QuartzJobBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">executeInternal</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(String.format(<span class="string">"now is %d"</span>, System.currentTimeMillis()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="启动-Job"><a href="#启动-Job" class="headerlink" title="启动 Job"></a>启动 Job</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">QuartzService quartzService;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每五秒执行一次</span></span><br><span class="line">quartzService.addJob("demoJob",DemoJob.class,"1/5 * * * * ?");</span><br></pre></td></tr></table></figure></div><blockquote><p>此时我们可以创建一个 web 页面,通过调用 QuartzService 来实现动态定时任务</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring-boot </tag>
            
            <tag> druid </tag>
            
            <tag> quartz </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript数组操作</title>
      <link href="/post/es6-array.html"/>
      <url>/post/es6-array.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="ES5"><a href="#ES5" class="headerlink" title="ES5"></a>ES5</h2><h3 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h3><blockquote><p>从数组中删除最后一个元素并返回。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> removedItem = arr.pop(); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure></div><h3 id="shift"><a href="#shift" class="headerlink" title="shift"></a>shift</h3><blockquote><p>从数组中删除第一个元素并返回它。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> removedItem = arr.shift(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></div><h3 id="push"><a href="#push" class="headerlink" title="push"></a>push</h3><blockquote><p>向数组追加新元素，并返回数组的新长度。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> newLength = arr.push(<span class="number">4</span>); <span class="comment">// 4</span></span><br></pre></td></tr></table></figure></div><h3 id="unshift"><a href="#unshift" class="headerlink" title="unshift"></a>unshift</h3><blockquote><p>在数组的开头插入新元素。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.unshift(<span class="number">4</span>); <span class="comment">// [4, 1, 2, 3]</span></span><br></pre></td></tr></table></figure></div><h3 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h3><blockquote><p>返回数组中第一个出现值的索引。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line">arr.indexOf(<span class="number">3</span>, <span class="number">0</span>); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure></div><h3 id="lastIndexOf"><a href="#lastIndexOf" class="headerlink" title="lastIndexOf"></a>lastIndexOf</h3><blockquote><p>返回数组中指定值的最后一次出现的索引。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">1</span>];</span><br><span class="line">arr.lastIndexOf(<span class="number">3</span>); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><h3 id="every"><a href="#every" class="headerlink" title="every"></a>every</h3><blockquote><p>检测数值元素的每个元素是否都符合条件。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.every(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h3 id="some"><a href="#some" class="headerlink" title="some"></a>some</h3><blockquote><p>检测数组元素中是否有元素符合指定条件。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">arr.some(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><blockquote><p>将数组元素计算为一个值（从左到右）。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reduceArr = arr.reduce(<span class="function">(<span class="params">previousValue, currentValue, currentIndex, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> previousValue * currentValue &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;, <span class="number">1</span>); <span class="comment">// 384 = 1 * 2 * 3 * 4 &lt;&lt; arr.length</span></span><br></pre></td></tr></table></figure></div><h3 id="reduceRight"><a href="#reduceRight" class="headerlink" title="reduceRight"></a>reduceRight</h3><blockquote><p>将数组元素计算为一个值（从右到左）。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> reduceRightArr = arr.reduceRight(<span class="function">(<span class="params">previousValue, currentValue, currentIndex, array</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> previousValue * currentValue &lt;&lt; <span class="number">1</span>;</span><br><span class="line">&#125;, <span class="number">1</span>); <span class="comment">// 384 = 4 * 3 * 2 * 1 &lt;&lt; arr.length</span></span><br></pre></td></tr></table></figure></div><h3 id="concat"><a href="#concat" class="headerlink" title="concat"></a>concat</h3><blockquote><p>用于连接两个或多个数组。该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> concatArr = arr1.concat(arr2); <span class="comment">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></div><h3 id="join"><a href="#join" class="headerlink" title="join"></a>join</h3><blockquote><p>添加由指定分隔符字符串分隔的数组的所有元素。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> joinStr = arr.join(<span class="string">'-'</span>); <span class="comment">// '1-2-3'</span></span><br></pre></td></tr></table></figure></div><h3 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h3><blockquote><p>根据指定规则对数组排序</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> users = [<span class="string">'Esther'</span>, <span class="string">'Emil'</span>, <span class="string">'Amy'</span>];</span><br><span class="line">users.sort(<span class="function">(<span class="params">u1, u2</span>)=&gt;</span> u1.length - u2.length); <span class="comment">// ["Amy", "Emil", "Esther"] 按字符长度正序</span></span><br></pre></td></tr></table></figure></div><h3 id="reverse"><a href="#reverse" class="headerlink" title="reverse"></a>reverse</h3><blockquote><p>反转数组中的元素。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> reverseArr = arr.reverse(); <span class="comment">// [3, 2, 1]</span></span><br></pre></td></tr></table></figure></div><h3 id="slice"><a href="#slice" class="headerlink" title="slice"></a>slice</h3><blockquote><p>截取数组中的一部分</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>start</strong> 可选。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推。</li><li><strong>end</strong> 可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。</li></ul></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> sliceArr = arr.slice(<span class="number">-3</span>, <span class="number">-1</span>); <span class="comment">// [2, 3]</span></span><br></pre></td></tr></table></figure></div><h3 id="splice"><a href="#splice" class="headerlink" title="splice"></a>splice</h3><p>参数列表</p><blockquote><ul><li><strong>index</strong> 必需。规定从何处添加/删除元素。该参数是开始插入和（或）删除的数组元素的下标，必须是数字。</li><li><strong>deleteCount</strong> 可选。规定应该删除多少元素。必须是数字，但可以是 “0”。如果未规定此参数，则删除从 index 开始到原数组结尾的所有元素。</li><li><strong>…items</strong> 可选。要添加到数组的新元素</li></ul></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>];</span><br><span class="line">arr.splice(<span class="number">2</span>, <span class="number">1</span>, <span class="string">'7'</span>, <span class="string">'8'</span>); <span class="comment">// ["1", "2", "7", "8", "4"]</span></span><br></pre></td></tr></table></figure></div><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><blockquote><p>对数组进行遍历,不能中断,没有返回值</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">arr.forEach(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`item:<span class="subst">$&#123;item&#125;</span>,index:<span class="subst">$&#123;index&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><blockquote><p>对数组中的每个元素进行处理,得到新的数组。不改变原有数据的结构和数据。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="keyword">const</span> mapArr = arr.map(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item * <span class="number">2</span>;</span><br><span class="line">&#125;); <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure></div><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><blockquote><p>检测数值元素，并返回符合条件所有元素的数组。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="keyword">const</span> filterArr = arr.filter(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// [1, 3]</span></span><br></pre></td></tr></table></figure></div><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h3 id="of"><a href="#of" class="headerlink" title="of"></a>of</h3><blockquote><p>将参数中所有值作为元素形成数组。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>); <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="comment">// 参数值可为不同类型</span></span><br><span class="line"><span class="keyword">const</span> arr2 = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="string">'2'</span>, <span class="literal">false</span>); <span class="comment">// [1, '2', false]</span></span><br><span class="line"><span class="comment">// 参数为空时返回空数组</span></span><br><span class="line"><span class="keyword">const</span> arr3 = <span class="built_in">Array</span>.of(); <span class="comment">// []</span></span><br></pre></td></tr></table></figure></div><h3 id="from"><a href="#from" class="headerlink" title="from"></a>from</h3><blockquote><p>将类数组对象或可迭代对象转化为数组。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数为数组,返回与原数组一样的数组</span></span><br><span class="line"><span class="keyword">const</span> arr1 = <span class="built_in">Array</span>.from([<span class="number">1</span>,<span class="number">2</span>]); <span class="comment">// [1, 2]</span></span><br><span class="line"><span class="comment">// 参数含空位</span></span><br><span class="line"><span class="keyword">const</span> arr2 = <span class="built_in">Array</span>.from([<span class="number">1</span>,<span class="number">2</span>,]); <span class="comment">// [1, 2, undefined]</span></span><br></pre></td></tr></table></figure></div><h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><blockquote><p>查找数组中符合条件的元素,若有多个符合条件的元素，则返回第一个元素。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> findArr = arr.find(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// [1]</span></span><br></pre></td></tr></table></figure></div><h3 id="findIndex"><a href="#findIndex" class="headerlink" title="findIndex"></a>findIndex</h3><blockquote><p>查找数组中符合条件的元素索引，若有多个符合条件的元素，则返回第一个元素索引。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> findArr = arr.findIndex(<span class="function"><span class="params">item</span>=&gt;</span> item &amp; <span class="number">1</span>); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></div><h3 id="fill"><a href="#fill" class="headerlink" title="fill"></a>fill</h3><blockquote><p>将一定范围索引的数组元素内容填充为单个指定的值。</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>value</strong> 必需。填充的值。</li><li><strong>start</strong> 可选。元素复制的起始位置。</li><li><strong>end</strong> 可选。停止复制的索引位置 (默认为 array.length)。如果为负值，表示倒数。</li></ul></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">const</span> fillArr = arr.fill(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>); <span class="comment">// [1, 0, 3, 4]</span></span><br></pre></td></tr></table></figure></div><h3 id="copyWithin"><a href="#copyWithin" class="headerlink" title="copyWithin"></a>copyWithin</h3><blockquote><p>复制数组的前面两个元素到后面两个元素上：</p></blockquote><p>参数列表</p><blockquote><ul><li><strong>target</strong> 必需。复制到指定目标索引位置。</li><li><strong>start</strong> 可选。元素复制的起始位置。</li><li><strong>end</strong> 可选。停止复制的索引位置 (默认为 array.length)。如果为负值，表示倒数。</li></ul></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</span><br><span class="line"><span class="keyword">const</span> copyWithinArr = arr.copyWithin(<span class="number">2</span>, <span class="number">0</span>); <span class="comment">// [1, 2, 1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure></div><h3 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h3><blockquote><p>判断一个数组是否包含一个指定的值</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = <span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>); <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line"><span class="keyword">const</span> isIncluded = arr.includes(<span class="number">5</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h2 id="ES2019"><a href="#ES2019" class="headerlink" title="ES2019"></a>ES2019</h2><h3 id="flat"><a href="#flat" class="headerlink" title="flat"></a>flat</h3><blockquote><p>嵌套数组转一维数组</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr1 = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>]];</span><br><span class="line"><span class="keyword">const</span> flatArr1 = arr1.flat(); <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指定转换的嵌套层数</span></span><br><span class="line"><span class="keyword">const</span> arr2 = [<span class="number">1</span>, [<span class="number">2</span>, [<span class="number">3</span>]]];</span><br><span class="line"><span class="keyword">const</span> flatArr2 = arr2.flat(); <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure></div><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h3><blockquote><p>先对数组中每个元素进行了的处理，再对数组执行 flat() 方法。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>]];</span><br><span class="line"><span class="keyword">const</span> mapArr = arr.flatMap(<span class="function"><span class="params">item</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item * <span class="number">2</span>;</span><br><span class="line">&#125;); <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java反射之Type接口</title>
      <link href="/post/java-reflect-type.html"/>
      <url>/post/java-reflect-type.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="1-Type接口简介"><a href="#1-Type接口简介" class="headerlink" title="1. Type接口简介"></a>1. Type接口简介</h2><blockquote><p>Type 是 Java 编程语言中所有类型的公共高级接口。它们包括原始类型、参数化类型、数组类型、类型变量和基本类型。(从JDK1.5开始使用。)</p></blockquote><p>Type体系中类型的包括:</p><ul><li>原始类型(Type):不仅仅包含我们平常所指的类，还包括枚举、数组、注解等</li><li>参数化类型(ParameterizedType):就是我们平常所用到的泛型List<string>、Map&lt;K,V&gt;、Set<t>、Class&lt;?&gt;</t></string></li><li>数组类型(GenericArrayType):并不是我们工作中所使用的数组 String[] 、byte[]，而是带有泛型的数组，即T[]</li><li>类型变量(TypeVariable):比如 T a</li><li>基本类型(Class):原始类型，每个类(貌似接口也有)都会有个 Class 对象</li><li><del>通配符表达式，或泛型表达式，它虽然是 Type 的一个子接口，但并不是 Java 类型中的一种，表示的仅仅是类似 ? extends T、? super K这样的通配符表达式。</del></li></ul><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/type.png" alt="Type" title="Type"></p><p>本文参考<a href="https://www.jianshu.com/u/c98c50394601" target="_blank" rel="noopener">贾博岩</a>的<a href="https://www.jianshu.com/p/7649f86614d3" target="_blank" rel="noopener">我眼中的Java-Type体系</a>。</p><h2 id="2-获取Type类型"><a href="#2-获取Type类型" class="headerlink" title="2. 获取Type类型"></a>2. 获取Type类型</h2><blockquote><p>获取<code>Type</code>类型对象</p></blockquote><ol><li>调用 Class.getGenericInterfaces()方法获取该类实现接口的 Type 类型列表。</li><li>调用 Class.getDeclaredFields()方法获取该类 File 字段列表。调用 File.getGenericType()方法得到这个属性的 Type类 型。</li><li>调用 Method.getGenericParameterTypes()方法获得获取该方法参数 Type 类型列表。</li></ol><h2 id="3-Type的子接口"><a href="#3-Type的子接口" class="headerlink" title="3. Type的子接口"></a>3. Type的子接口</h2><h3 id="3-1-ParameterizedType"><a href="#3-1-ParameterizedType" class="headerlink" title="3.1 ParameterizedType"></a>3.1 ParameterizedType</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType.png" alt="ParameterizedType" title="ParameterizedType"></p><blockquote><p>参数化类型，即泛型；例如：List&#60;T&#62;、Map&#60;K,V&#62;等带有参数化的对象<br>在<code>ParameterizedType</code>接口中，有3个方法，分别是 getActualTypeArguments()、 getRawType()、 getOwnerType();</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ParameterizedType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** 获取范型 &lt;&gt; 中的实际类型 */</span></span><br><span class="line">    Type[] getActualTypeArguments();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取范型 &lt;&gt; 前面的实际类型 */</span> </span><br><span class="line">    <span class="function">Type <span class="title">getRawType</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取该类型所属,没有返回🈳️ */</span></span><br><span class="line">    <span class="function">Type <span class="title">getOwnerType</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="3-1-1-getActualTypeArguments"><a href="#3-1-1-getActualTypeArguments" class="headerlink" title="3.1.1 getActualTypeArguments"></a>3.1.1 getActualTypeArguments</h4><blockquote><p>获取泛型中的实际类型，可能会存在多个泛型，例如Map&lt;K,V&gt;,所以会返回Type[]数组；</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getActualTypeArguments.png" alt="ParameterizedType-getActualTypeArguments" title="ParameterizedType-getActualTypeArguments"></p><blockquote><p>值得注意的是，无论&lt;&gt;中有几层嵌套(List&lt;Map&lt;String,Integer&gt;)，getActualTypeArguments()方法永远都是脱去最外层的&lt;&gt;(也就是List&lt;&gt;)，将括号内的内容（Map&lt;String,Integer&gt;）返回；</p></blockquote><blockquote><p>我们经常遇到的 List<t>，通过 getActualTypeArguments() 方法，得到的返回值是 TypeVariableImpl 对象，也就是 TypeVariable 类型(后面介绍);</t></p></blockquote><h4 id="3-1-2-getOwnerType"><a href="#3-1-2-getOwnerType" class="headerlink" title="3.1.2 getOwnerType"></a>3.1.2 getOwnerType</h4><blockquote><p>获取声明泛型的类或者接口，也就是泛型中&lt;&gt;前面的那个值；</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getOwnerType.png" alt="ParameterizedType-getOwnerType" title="ParameterizedType-getOwnerType"></p><h4 id="3-1-3-getRawType"><a href="#3-1-3-getRawType" class="headerlink" title="3.1.3 getRawType"></a>3.1.3 getRawType</h4><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/ParameterizedType-getRawType.png" alt="ParameterizedType-getRawType" title="ParameterizedType-getRawType"></p><blockquote><p>通过方法的名称，我们大概了解到，此方法是获取泛型的拥有者，那么拥有者是个什么意思？</p></blockquote><blockquote><p>Returns a {@code Type} object representing the type that this type * is a member of. For example, if this type is {@code O.I}, * return a representation of {@code O}. （摘自JDK注释）</p></blockquote><blockquote><p>通过注解，我们得知，“拥有者”表示的含义–内部类的“父类”，通过 getOwnerType()方法可以获取到内部类的“拥有者”；例如： Map 就是 Map.Entry&lt;String,String&gt; 的拥有者；</p></blockquote><h3 id="3-2-GenericArrayType"><a href="#3-2-GenericArrayType" class="headerlink" title="3.2 GenericArrayType"></a>3.2 GenericArrayType</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericArrayType.png" alt="GenericArrayType" title="GenericArrayType"></p><blockquote><p>泛型数组类型，用来描述<code>ParameterizedType</code>、<code>TypeVariable</code>类型的数组；即 List&#60;T&#62;[] 、T[]等<br>在<code>GenericArrayType</code>接口中，仅有1个方法，就是 getGenericComponentType()</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">GenericArrayType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** 获得这个数组元素类型,即获得: A&lt;T&gt; (A&lt;T&gt;[]) 或 (T[]) */</span></span><br><span class="line">    <span class="function">Type <span class="title">getGenericComponentType</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="3-2-1-getGenericComponentType"><a href="#3-2-1-getGenericComponentType" class="headerlink" title="3.2.1 getGenericComponentType"></a>3.2.1 getGenericComponentType</h4><blockquote><p>返回泛型数组中元素的Type类型，即 List&#60;String&#62;[] 中的 List&#60;String&#62;（ParameterizedTypeImpl）、T[] 中的T（TypeVariableImpl）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericArrayType-getGenericComponentType.png" alt="GenericArrayType-getGenericComponentType" title="GenericArrayType-getGenericComponentType"></p><blockquote><p>值得注意的是，无论是几维数组，getGenericComponentType() 方法都只会脱去最右边的[]，返回剩下的值</p></blockquote><h3 id="3-3-TypeVariable"><a href="#3-3-TypeVariable" class="headerlink" title="3.3 TypeVariable"></a>3.3 TypeVariable</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable.png" alt="TypeVariable" title="TypeVariable"></p><blockquote><p>类型变量，即泛型中的变量；例如：T、K、V等变量，可以表示任何类；在这需要强调的是，<code>TypeVariable</code>代表着泛型中的变量，而<code>ParameterizedType</code>则代表整个泛型<br>在<code>TypeVariable</code>接口中，有4个方法，分别为 getBounds()、getGenericDeclaration()、getAnnotatedBounds、getName()</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TypeVariable</span>&lt;<span class="title">D</span> <span class="keyword">extends</span> <span class="title">GenericDeclaration</span>&gt; <span class="keyword">extends</span> <span class="title">Type</span>, <span class="title">AnnotatedElement</span> </span>&#123;</span><br><span class="line">   </span><br><span class="line">    <span class="comment">/** 获取范型上限,无显式定义(extends),默认为Object */</span></span><br><span class="line">    Type[] getBounds();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获得声明该类型变量的实体(获得类、方法或者构造器) */</span></span><br><span class="line">    <span class="function">D <span class="title">getGenericDeclaration</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获得名称,即K、V、E之类的 */</span></span><br><span class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取类型变量上限的对象数组 */</span></span><br><span class="line">     AnnotatedType[] getAnnotatedBounds();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="3-3-1-getBounds"><a href="#3-3-1-getBounds" class="headerlink" title="3.3.1 getBounds"></a>3.3.1 getBounds</h4><blockquote><p>获得该类型变量的上限（上边界），若无显式定义（extends），默认为 Object，类型变量的上限可能不止一个，因为可以用&amp;符号限定多个（这其中有且只能有一个为类或抽象类，且必须放在extends后的第一个，即若有多个上边界，则第一个&amp;后必为接口）。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getBounds-1.png" alt="TypeVariable-getBounds" title="TypeVariable-getBounds"></p><blockquote><p>无显式定义extends：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getBounds-2.png" alt="TypeVariable-getBounds" title="TypeVariable-getBounds"></p><blockquote><p>值得注意的是，类型变量的上限可以为多个，必须使用&amp;符号相连接，例如 List&#60;T extends Number &amp; Serializable&#62;；其中，&amp; 后必须为接口</p></blockquote><h4 id="3-3-2-getGenericDeclaration"><a href="#3-3-2-getGenericDeclaration" class="headerlink" title="3.3.2 getGenericDeclaration"></a>3.3.2 getGenericDeclaration</h4><blockquote><p>获取声明该类型变量实体，也就是 TypeVariableTest&#60;T&#62; 中的<code>TypeVariableTest</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getGenericDeclaration.png" alt="TypeVariable-getGenericDeclaration" title="TypeVariable-getGenericDeclaration"></p><h4 id="3-3-3-getAnnotatedBounds"><a href="#3-3-3-getAnnotatedBounds" class="headerlink" title="3.3.3 getAnnotatedBounds"></a>3.3.3 getAnnotatedBounds</h4><blockquote><p>返回一个<code>AnnotatedType</code>对象的数组，表示使用类型来表示此<code>TypeVariable</code>表示的类型参数的上限。 数组中的对象的顺序对应于 type 参数的声明中的边界的顺序。 如果 type 参数声明没有边界，则返回长度为 0 的数组。</p></blockquote><h4 id="3-3-4-getName"><a href="#3-3-4-getName" class="headerlink" title="3.3.4 getName"></a>3.3.4 getName</h4><blockquote><p>获取类型变量在源码中定义的名称</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/TypeVariable-getName.png" alt="TypeVariable-getName" title="TypeVariable-getName"></p><blockquote><p>说到<code>TypeVariable</code>类，就不得不提及 Java-Type 体系中另一个比较重要的接口—<code>GenericDeclaration</code>。含义为：声明类型变量的所有实体的公共接口；也就是说该接口定义了哪些地方可以定义类型变量（泛型）</p></blockquote><blockquote><p>通过查看源码发现，<code>GenericDeclaration</code>下有四个子类，分别为 Class、Executable、Method、Constructor。其中 Method、Constructor 继承自 Executable 表示可执行。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration.png" alt="GenericDeclaration" title="GenericDeclaration"></p><p>此时，我们不禁要问，我们不是经常在类中的属性声明泛型吗，怎么 Field 没有实现<code>GenericDeclaration</code>接口呢？</p><p>其实，我们在 Field 中并没有声明泛型，而是在使用泛型而已！不信，我们实际上代码来看看！</p><blockquote><ol><li>首先在 Class 上定义泛型:</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Class.png" alt="GenericDeclaration-Class" title="GenericDeclaration-Class"></p><blockquote><ol start="2"><li>我们没有在 Class 上定义泛型，直接在构造方法上定义泛型:</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Constructor.png" alt="GenericDeclaration-Constructor" title="GenericDeclaration-Constructor"></p><blockquote><ol start="3"><li>我们直接在属性上定义:</li></ol></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/GenericDeclaration-Field.png" alt="GenericDeclaration-Field" title="GenericDeclaration-Field"></p><p>我们看到，如果不在 Class 上定义，属性上并不能直接使用！所以，这也是我之前说的属性上并不是定义泛型，而是使用泛型，所以 Field 并没有实现<code>GenericDeclaration</code>接口！</p><h3 id="3-4-WildcardType"><a href="#3-4-WildcardType" class="headerlink" title="3.4 WildcardType"></a>3.4 WildcardType</h3><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType.png" alt="WildcardType" title="WildcardType"></p><blockquote><p>？—通配符表达式，表示通配符泛型，但是<code>WildcardType</code>并不属于 Java-Type 中的一种。例如：List&#60;? extends Number&#62; 和 List&#60;? super Integer&#62;</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">WildcardType</span> <span class="keyword">extends</span> <span class="title">Type</span> </span>&#123;</span><br><span class="line">    <span class="comment">/** 获取范型表达式上界(上限extends) */</span></span><br><span class="line">    Type[] getUpperBounds();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取范型表达式下界(下限super) */</span></span><br><span class="line">    Type[] getLowerBounds();</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>在<code>WildcardType</code>接口中，有2个方法，分别为 getUpperBounds()、getLowerBounds()</p></blockquote><h4 id="3-4-1-getUpperBounds"><a href="#3-4-1-getUpperBounds" class="headerlink" title="3.4.1 getUpperBounds"></a>3.4.1 getUpperBounds</h4><blockquote><p>获取泛型变量的上边界（extends）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType-getUpperBounds.png" alt="WildcardType-getUpperBounds" title="WildcardType-getUpperBounds"></p><h4 id="3-4-2-getLowerBounds"><a href="#3-4-2-getLowerBounds" class="headerlink" title="3.4.2 getLowerBounds"></a>3.4.2 getLowerBounds</h4><blockquote><p>获取泛型变量的下边界（super）</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/WildcardType-getLowerBounds.png" alt="WildcardType-getLowerBounds" title="WildcardType-getLowerBounds"></p><h2 id="4-Type-的实现-Class"><a href="#4-Type-的实现-Class" class="headerlink" title="4. Type 的实现 Class"></a>4. Type 的实现 Class</h2><blockquote><p><code>Type</code>接口的实现类，是我们工作中常用到的一个对象；在 Java 中，每个 .class 文件在程序运行期间，都对应着一个<code>Class</code>对象，这个对象保存有这个类的全部信息；因此，<code>Class</code>对象也称之为 Java 反射的基础</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/album/loading/1.gif" data-original="https://cdn.jsdelivr.net/gh/hvnobug/assets/blog/post/images/Class.png" alt="Class" title="Class"></p><blockquote><p>通过上面的例子，可以看出，当我们没有声明泛型的时候，我们普通的对象就是一个 Class 类型，是 Type 中的一种</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Nginx 安装免费SSL证书</title>
      <link href="/post/ubuntu-nginx-certbot.html"/>
      <url>/post/ubuntu-nginx-certbot.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h1 id="安装-nginx"><a href="#安装-nginx" class="headerlink" title="安装 nginx"></a>安装 nginx</h1><blockquote><p>更新 apt 源,安装 nginx 服务</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y nginx</span><br></pre></td></tr></table></figure></div><h1 id="安装certbot"><a href="#安装certbot" class="headerlink" title="安装certbot"></a>安装certbot</h1><blockquote><p>certbot 是维护 Let’s Encrypt 的 Package。<br>添加 package repository</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:certbot&#x2F;certbot</span><br></pre></td></tr></table></figure></div><blockquote><p>然后更新 apt 源</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></div><blockquote><p>然后安装 Certbot 的 Nginx package</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-certbot-nginx -y</span><br></pre></td></tr></table></figure></div><h1 id="签发-ssl-证书"><a href="#签发-ssl-证书" class="headerlink" title="签发 ssl 证书"></a>签发 ssl 证书</h1><blockquote><p>现在使用 Let’s Encrypt 签发 ssl 证书：</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot --nginx -d your-domain</span><br></pre></td></tr></table></figure></div><blockquote><p>注意这里的 <code>your-domain</code> 是你自己的域名，如果你第一次运行<code>certbot</code>的话，会让你输入邮箱，还要接受<code>Let&#39;s Encrypt</code>的协议,最后会让你选择是否重定向<code>http</code>到<code>https</code></p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">1: No redirect - Make no further changes to the webserver configuration.</span><br><span class="line">2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for</span><br><span class="line">new sites, or if you&#39;re confident your site works on HTTPS. You can undo this</span><br><span class="line">change by editing your web server&#39;s configuration.</span><br></pre></td></tr></table></figure></div><blockquote><p>选2,重定向即可。<br>最后可以看到生成的证书的位置</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - Congratulations! Your certificate and chain have been saved at:</span><br><span class="line">   &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;hvnobug.com&#x2F;fullchain.pem</span><br><span class="line">   Your key file has been saved at:</span><br><span class="line">   &#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F;hvnobug.com&#x2F;privkey.pem</span><br><span class="line">   Your cert will expire on 2019-10-28. To obtain a new or tweaked</span><br><span class="line">   version of this certificate in the future, simply run certbot again</span><br><span class="line">   with the &quot;certonly&quot; option. To non-interactively renew *all* of</span><br><span class="line">   your certificates, run &quot;certbot renew&quot;</span><br><span class="line"> - Your account credentials have been saved in your Certbot</span><br><span class="line">   configuration directory at &#x2F;etc&#x2F;letsencrypt. You should make a</span><br><span class="line">   secure backup of this folder now. This configuration directory will</span><br><span class="line">   also contain certificates and private keys obtained by Certbot so</span><br><span class="line">   making regular backups of this folder is ideal.</span><br><span class="line"> - If you like Certbot, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating to ISRG &#x2F; Let&#39;s Encrypt:   https:&#x2F;&#x2F;letsencrypt.org&#x2F;donate</span><br><span class="line">   Donating to EFF:                    https:&#x2F;&#x2F;eff.org&#x2F;donate-le</span><br></pre></td></tr></table></figure></div><p>查看 nginx 配置文件<code>/etc/nginx/sites-available/default</code></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">nginx</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">listen</span> [::]:<span class="number">443</span> ssl ipv6only=<span class="literal">on</span>; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">listen</span> <span class="number">443</span> ssl; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_certificate</span> /etc/letsencrypt/live/hvnobug.com/fullchain.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_certificate_key</span> /etc/letsencrypt/live/hvnobug.com/privkey.pem; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">include</span> /etc/letsencrypt/options-ssl-nginx.conf; <span class="comment"># managed by Certbot</span></span><br><span class="line"><span class="attribute">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem; <span class="comment"># managed by Certbot</span></span><br></pre></td></tr></table></figure></div><blockquote><p>这是我们发现已经配置了 ssl 证书，监听 443 端口。我们在浏览器访问<code>http</code>会自动重定向到<code>https</code>。</p></blockquote><h1 id="自动更新证书"><a href="#自动更新证书" class="headerlink" title="自动更新证书"></a>自动更新证书</h1><blockquote><p>因为 Let’s Encrypt 签发的<code>SSL</code>证书有效期只有 90 天，所有在过期之前，我们需要自动更新<code>SSL</code>证书，而如果你使用最新的<code>certbot</code>的话，Let’s Encrypt 会帮你添加自动更新的脚本到 /etc/cron.d 里，你只需要去检测一下这个命令是否生效就 OK ！</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo certbot renew --dry-run</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
            <tag> ubuntu </tag>
            
            <tag> https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6之Promise</title>
      <link href="/post/es6-promise.html"/>
      <url>/post/es6-promise.html</url>
      
        <content type="html"><![CDATA[<!-- build time:Thu Jan 23 2020 05:21:30 GMT+0000 (Coordinated Universal Time) --><h2 id="1-什么是Promise"><a href="#1-什么是Promise" class="headerlink" title="1. 什么是Promise"></a>1. 什么是Promise</h2><blockquote><p><code>Promise</code>是异步编程的一种解决方案：从语法上讲,<code>promise</code>是一个对象，从它可以获取异步操作的消息；从本意上讲，它是承诺，承诺它过一段时间会给你一个结果。<code>promise</code>有三种状态：<code>pending</code>(等待态)，<code>fulfiled</code>(成功态)，<code>rejected</code>(失败态)；状态一旦改变，就不会再变。创造<code>promise</code>实例后，它会立即执行</p></blockquote><h2 id="2-Promise-的优点"><a href="#2-Promise-的优点" class="headerlink" title="2. Promise 的优点"></a>2. Promise 的优点</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test=<span class="function">(<span class="params">args,callback</span>)=&gt;</span>&#123;  </span><br><span class="line">    <span class="keyword">if</span>(args &amp;&amp; callback &amp;&amp; <span class="keyword">typeof</span> callback ===<span class="string">'function'</span>)&#123; callback(); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">test(<span class="string">'test'</span>,()=&gt;<span class="built_in">console</span>.info(<span class="string">'this is a callback'</span>));</span><br></pre></td></tr></table></figure></div><p>我们一定见过如上的代码，但是如果回调嵌套很多时，代码就会非常繁琐，会给我们的编程带来很多的麻烦，这种情况俗称——回调地狱。</p><p><code>promise</code>是用来解决两个问题的：</p><blockquote><p>回调地狱,代码难以维护， 常常第一个的函数的输出是第二个函数的输入这种现象<br><code>promise</code> 可以支持多个并发的请求,获取并发请求中的数据<br>这个<code>promise</code>可以解决异步的问题,本身不能说promise是异步的</p></blockquote><h2 id="3-Promise-的用法"><a href="#3-Promise-的用法" class="headerlink" title="3. Promise 的用法"></a>3. Promise 的用法</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'执行完成Promise'</span>);</span><br><span class="line">        <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random())?resolve(<span class="string">'执行成功'</span>):reject(<span class="string">'执行失败'</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>其执行过程是：执行了一个异步操作，也就是 setTimeout，2秒后，输出“执行完成”，然后随机调用<code>resolve</code>或者<code>reject</code>方法。</p><blockquote><p><code>Promise</code>的构造函数接收一个参数：函数,并且这个函数需要传入两个参数:</p><ul><li>resolve ：异步操作执行成功后的回调函数</li><li>reject：异步操作执行失败后的回调函数</li></ul></blockquote><h3 id="3-1-then-链式操作的用法"><a href="#3-1-then-链式操作的用法" class="headerlink" title="3.1 then 链式操作的用法"></a>3.1 then 链式操作的用法</h3><blockquote><p>所以,从表面上看,<code>Promise</code>只是能够简化层层回调的写法，而实质上,<code>Promise</code>的精髓是“状态”，用维护状态、传递状态的方式来使得回调函数能够及时调用，它比传递callback函数要简单、灵活的多。所以使用<code>Promise</code>的正确场景是这样的：</p></blockquote><p>###</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'resolved'</span>, data);</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'resolved'</span>, data);</span><br><span class="line">&#125;).then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">'resolved'</span>, data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h3 id="3-2-catch-的用法"><a href="#3-2-catch-的用法" class="headerlink" title="3.2 catch 的用法"></a>3.2 catch 的用法</h3><blockquote><p>我们知道 <code>Promise</code> 对象除了 then 方法，还有一个 catch 方法,它是做什么用的呢？其实它和 then 的第二个参数一样,用来指定 <code>reject</code> 的回调。用法是这样：</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">promise.then(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'resolved'</span>,data);</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'rejected'</span>,err);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h3 id="3-3-all-的用法"><a href="#3-3-all-的用法" class="headerlink" title="3.3 all 的用法"></a>3.3 all 的用法</h3><blockquote><p>Promise.all 可以将多个<code>Promise</code>实例包装成一个新的<code>Promise</code>实例。同时,成功和失败的返回值是不同的,成功的时候返回的是一个结果数组，而失败的时候则返回最先被<code>reject</code>失败状态的值。</p></blockquote><p>说白了就是谁跑的慢，以谁为准执行回调。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)  </span><br><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.all([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.info(<span class="string">'success'</span>,data);  </span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'error'</span>,err);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>只有当 p1,p2,p3 都成功才会执行<code>then</code>,有任意一个promise失败都会执行<code>catch</code>。</p><h3 id="3-4-race-的用法"><a href="#3-4-race-的用法" class="headerlink" title="3.4 race 的用法"></a>3.4 race 的用法</h3><blockquote><p>race 就是赛跑的意思,意思就是说,Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;&#125;)  </span><br><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.race([p1, p2, p3]);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.info(<span class="string">'success'</span>,data);  </span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'error'</span>,err);  </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> javascript </tag>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
